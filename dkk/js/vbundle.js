(window.webpackJsonp = window.webpackJsonp || []).push([
  [1],
  [
    function(t, e, n) {
      "use strict";
      n.d(e, "pb", function() {
        return i;
      }),
        n.d(e, "r", function() {
          return r;
        }),
        n.d(e, "p", function() {
          return a;
        }),
        n.d(e, "q", function() {
          return o;
        }),
        n.d(e, "nb", function() {
          return s;
        }),
        n.d(e, "ob", function() {
          return l;
        }),
        n.d(e, "D", function() {
          return c;
        }),
        n.d(e, "g", function() {
          return h;
        }),
        n.d(e, "v", function() {
          return u;
        }),
        n.d(e, "B", function() {
          return d;
        }),
        n.d(e, "db", function() {
          return f;
        }),
        n.d(e, "cb", function() {
          return p;
        }),
        n.d(e, "fb", function() {
          return m;
        }),
        n.d(e, "d", function() {
          return g;
        }),
        n.d(e, "ec", function() {
          return v;
        }),
        n.d(e, "W", function() {
          return _;
        }),
        n.d(e, "s", function() {
          return y;
        }),
        n.d(e, "b", function() {
          return x;
        }),
        n.d(e, "dc", function() {
          return b;
        }),
        n.d(e, "Xb", function() {
          return w;
        }),
        n.d(e, "T", function() {
          return T;
        }),
        n.d(e, "S", function() {
          return M;
        }),
        n.d(e, "rc", function() {
          return E;
        }),
        n.d(e, "ib", function() {
          return S;
        }),
        n.d(e, "cc", function() {
          return L;
        }),
        n.d(e, "mb", function() {
          return P;
        }),
        n.d(e, "ac", function() {
          return A;
        }),
        n.d(e, "lb", function() {
          return R;
        }),
        n.d(e, "w", function() {
          return C;
        }),
        n.d(e, "jb", function() {
          return D;
        }),
        n.d(e, "x", function() {
          return O;
        }),
        n.d(e, "kb", function() {
          return I;
        }),
        n.d(e, "bc", function() {
          return N;
        }),
        n.d(e, "bb", function() {
          return U;
        }),
        n.d(e, "f", function() {
          return F;
        }),
        n.d(e, "J", function() {
          return z;
        }),
        n.d(e, "K", function() {
          return k;
        }),
        n.d(e, "y", function() {
          return B;
        }),
        n.d(e, "G", function() {
          return G;
        }),
        n.d(e, "F", function() {
          return V;
        }),
        n.d(e, "gb", function() {
          return H;
        }),
        n.d(e, "X", function() {
          return W;
        }),
        n.d(e, "V", function() {
          return X;
        }),
        n.d(e, "c", function() {
          return j;
        }),
        n.d(e, "eb", function() {
          return Y;
        }),
        n.d(e, "P", function() {
          return q;
        }),
        n.d(e, "Vb", function() {
          return Z;
        }),
        n.d(e, "jc", function() {
          return J;
        }),
        n.d(e, "j", function() {
          return K;
        }),
        n.d(e, "a", function() {
          return Q;
        }),
        n.d(e, "ic", function() {
          return $;
        }),
        n.d(e, "l", function() {
          return tt;
        }),
        n.d(e, "m", function() {
          return et;
        }),
        n.d(e, "z", function() {
          return nt;
        }),
        n.d(e, "A", function() {
          return it;
        }),
        n.d(e, "Zb", function() {
          return rt;
        }),
        n.d(e, "n", function() {
          return at;
        }),
        n.d(e, "o", function() {
          return ot;
        }),
        n.d(e, "Wb", function() {
          return st;
        }),
        n.d(e, "k", function() {
          return lt;
        }),
        n.d(e, "U", function() {
          return ct;
        }),
        n.d(e, "Y", function() {
          return ht;
        }),
        n.d(e, "ab", function() {
          return ut;
        }),
        n.d(e, "Z", function() {
          return dt;
        }),
        n.d(e, "M", function() {
          return ft;
        }),
        n.d(e, "O", function() {
          return pt;
        }),
        n.d(e, "N", function() {
          return mt;
        }),
        n.d(e, "kc", function() {
          return gt;
        }),
        n.d(e, "i", function() {
          return vt;
        }),
        n.d(e, "Yb", function() {
          return _t;
        }),
        n.d(e, "qc", function() {
          return yt;
        }),
        n.d(e, "I", function() {
          return xt;
        }),
        n.d(e, "mc", function() {
          return bt;
        }),
        n.d(e, "C", function() {
          return wt;
        }),
        n.d(e, "H", function() {
          return Tt;
        }),
        n.d(e, "nc", function() {
          return Mt;
        }),
        n.d(e, "oc", function() {
          return Et;
        }),
        n.d(e, "pc", function() {
          return St;
        }),
        n.d(e, "lc", function() {
          return Lt;
        }),
        n.d(e, "e", function() {
          return Pt;
        }),
        n.d(e, "Nb", function() {
          return At;
        }),
        n.d(e, "rb", function() {
          return Rt;
        }),
        n.d(e, "R", function() {
          return Ct;
        }),
        n.d(e, "Q", function() {
          return Dt;
        }),
        n.d(e, "t", function() {
          return Ot;
        }),
        n.d(e, "u", function() {
          return It;
        }),
        n.d(e, "Ub", function() {
          return Nt;
        }),
        n.d(e, "Tb", function() {
          return Ut;
        }),
        n.d(e, "Ib", function() {
          return Ft;
        }),
        n.d(e, "Jb", function() {
          return zt;
        }),
        n.d(e, "Kb", function() {
          return kt;
        }),
        n.d(e, "Sb", function() {
          return Bt;
        }),
        n.d(e, "Rb", function() {
          return Gt;
        }),
        n.d(e, "Hb", function() {
          return Vt;
        }),
        n.d(e, "Gb", function() {
          return Ht;
        }),
        n.d(e, "Qb", function() {
          return Wt;
        }),
        n.d(e, "yb", function() {
          return Xt;
        }),
        n.d(e, "zb", function() {
          return jt;
        }),
        n.d(e, "Ab", function() {
          return Yt;
        }),
        n.d(e, "Bb", function() {
          return qt;
        }),
        n.d(e, "Cb", function() {
          return Zt;
        }),
        n.d(e, "Db", function() {
          return Jt;
        }),
        n.d(e, "Eb", function() {
          return Kt;
        }),
        n.d(e, "Fb", function() {
          return Qt;
        }),
        n.d(e, "tb", function() {
          return $t;
        }),
        n.d(e, "ub", function() {
          return te;
        }),
        n.d(e, "vb", function() {
          return ee;
        }),
        n.d(e, "sb", function() {
          return ne;
        }),
        n.d(e, "wb", function() {
          return ie;
        }),
        n.d(e, "xb", function() {
          return re;
        }),
        n.d(e, "hc", function() {
          return ae;
        }),
        n.d(e, "gc", function() {
          return oe;
        }),
        n.d(e, "fc", function() {
          return se;
        }),
        n.d(e, "L", function() {
          return le;
        }),
        n.d(e, "sc", function() {
          return ce;
        }),
        n.d(e, "E", function() {
          return he;
        }),
        n.d(e, "Mb", function() {
          return ue;
        }),
        n.d(e, "Pb", function() {
          return de;
        }),
        n.d(e, "Ob", function() {
          return fe;
        }),
        n.d(e, "Lb", function() {
          return pe;
        }),
        n.d(e, "h", function() {
          return me;
        }),
        n.d(e, "qb", function() {
          return ge;
        }),
        n.d(e, "hb", function() {
          return ve;
        });
      var i = "99",
        r = 0,
        a = 1,
        o = 2,
        s = 1,
        l = 2,
        c = 0,
        h = 1,
        u = 2,
        d = 1,
        f = 0,
        p = 0,
        m = 1,
        g = 2,
        v = 3,
        _ = 4,
        y = 5,
        x = 100,
        b = 101,
        w = 102,
        T = 103,
        M = 104,
        E = 200,
        S = 201,
        L = 202,
        P = 203,
        A = 204,
        R = 205,
        C = 206,
        D = 207,
        O = 208,
        I = 209,
        N = 210,
        U = 0,
        F = 1,
        z = 2,
        k = 3,
        B = 4,
        G = 5,
        V = 6,
        H = 7,
        W = 0,
        X = 1,
        j = 2,
        Y = 0,
        q = 1,
        Z = 2,
        J = 3,
        K = 4,
        Q = 5,
        $ = 300,
        tt = 301,
        et = 302,
        nt = 303,
        it = 304,
        rt = 305,
        at = 306,
        ot = 307,
        st = 1e3,
        lt = 1001,
        ct = 1002,
        ht = 1003,
        ut = 1004,
        dt = 1005,
        ft = 1006,
        pt = 1007,
        mt = 1008,
        gt = 1009,
        vt = 1010,
        _t = 1011,
        yt = 1012,
        xt = 1013,
        bt = 1014,
        wt = 1015,
        Tt = 1016,
        Mt = 1017,
        Et = 1018,
        St = 1019,
        Lt = 1020,
        Pt = 1021,
        At = 1022,
        Rt = 1023,
        Ct = 1024,
        Dt = 1025,
        Ot = 1026,
        It = 1027,
        Nt = 1028,
        Ut = 33776,
        Ft = 33777,
        zt = 33778,
        kt = 33779,
        Bt = 35840,
        Gt = 35841,
        Vt = 35842,
        Ht = 35843,
        Wt = 36196,
        Xt = 37808,
        jt = 37809,
        Yt = 37810,
        qt = 37811,
        Zt = 37812,
        Jt = 37813,
        Kt = 37814,
        Qt = 37815,
        $t = 37816,
        te = 37817,
        ee = 37818,
        ne = 37819,
        ie = 37820,
        re = 37821,
        ae = 0,
        oe = 1,
        se = 2,
        le = 3e3,
        ce = 3001,
        he = 3007,
        ue = 3002,
        de = 3004,
        fe = 3005,
        pe = 3006,
        me = 3200,
        ge = 3201,
        ve = 1;
    },
    function(t, e, n) {
      "use strict";
      n.d(e, "a", function() {
        return u;
      });
      var i,
        r,
        a,
        o,
        s,
        l = n(5),
        c = n(4),
        h = n(15);
      function u(t, e, n) {
        (this.x = t || 0), (this.y = e || 0), (this.z = n || 0);
      }
      Object.assign(u.prototype, {
        isVector3: !0,
        set: function(t, e, n) {
          return (this.x = t), (this.y = e), (this.z = n), this;
        },
        setScalar: function(t) {
          return (this.x = t), (this.y = t), (this.z = t), this;
        },
        setX: function(t) {
          return (this.x = t), this;
        },
        setY: function(t) {
          return (this.y = t), this;
        },
        setZ: function(t) {
          return (this.z = t), this;
        },
        setComponent: function(t, e) {
          switch (t) {
            case 0:
              this.x = e;
              break;
            case 1:
              this.y = e;
              break;
            case 2:
              this.z = e;
              break;
            default:
              throw new Error("index is out of range: " + t);
          }
          return this;
        },
        getComponent: function(t) {
          switch (t) {
            case 0:
              return this.x;
            case 1:
              return this.y;
            case 2:
              return this.z;
            default:
              throw new Error("index is out of range: " + t);
          }
        },
        clone: function() {
          return new this.constructor(this.x, this.y, this.z);
        },
        copy: function(t) {
          return (this.x = t.x), (this.y = t.y), (this.z = t.z), this;
        },
        add: function(t, e) {
          return void 0 !== e
            ? (console.warn(
                "THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."
              ),
              this.addVectors(t, e))
            : ((this.x += t.x), (this.y += t.y), (this.z += t.z), this);
        },
        addScalar: function(t) {
          return (this.x += t), (this.y += t), (this.z += t), this;
        },
        addVectors: function(t, e) {
          return (
            (this.x = t.x + e.x),
            (this.y = t.y + e.y),
            (this.z = t.z + e.z),
            this
          );
        },
        addScaledVector: function(t, e) {
          return (
            (this.x += t.x * e), (this.y += t.y * e), (this.z += t.z * e), this
          );
        },
        sub: function(t, e) {
          return void 0 !== e
            ? (console.warn(
                "THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."
              ),
              this.subVectors(t, e))
            : ((this.x -= t.x), (this.y -= t.y), (this.z -= t.z), this);
        },
        subScalar: function(t) {
          return (this.x -= t), (this.y -= t), (this.z -= t), this;
        },
        subVectors: function(t, e) {
          return (
            (this.x = t.x - e.x),
            (this.y = t.y - e.y),
            (this.z = t.z - e.z),
            this
          );
        },
        multiply: function(t, e) {
          return void 0 !== e
            ? (console.warn(
                "THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."
              ),
              this.multiplyVectors(t, e))
            : ((this.x *= t.x), (this.y *= t.y), (this.z *= t.z), this);
        },
        multiplyScalar: function(t) {
          return (this.x *= t), (this.y *= t), (this.z *= t), this;
        },
        multiplyVectors: function(t, e) {
          return (
            (this.x = t.x * e.x),
            (this.y = t.y * e.y),
            (this.z = t.z * e.z),
            this
          );
        },
        applyEuler: ((s = new h.a()),
        function(t) {
          return (
            (t && t.isEuler) ||
              console.error(
                "THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."
              ),
            this.applyQuaternion(s.setFromEuler(t))
          );
        }),
        applyAxisAngle: (function() {
          var t = new h.a();
          return function(e, n) {
            return this.applyQuaternion(t.setFromAxisAngle(e, n));
          };
        })(),
        applyMatrix3: function(t) {
          var e = this.x,
            n = this.y,
            i = this.z,
            r = t.elements;
          return (
            (this.x = r[0] * e + r[3] * n + r[6] * i),
            (this.y = r[1] * e + r[4] * n + r[7] * i),
            (this.z = r[2] * e + r[5] * n + r[8] * i),
            this
          );
        },
        applyMatrix4: function(t) {
          var e = this.x,
            n = this.y,
            i = this.z,
            r = t.elements,
            a = 1 / (r[3] * e + r[7] * n + r[11] * i + r[15]);
          return (
            (this.x = (r[0] * e + r[4] * n + r[8] * i + r[12]) * a),
            (this.y = (r[1] * e + r[5] * n + r[9] * i + r[13]) * a),
            (this.z = (r[2] * e + r[6] * n + r[10] * i + r[14]) * a),
            this
          );
        },
        applyQuaternion: function(t) {
          var e = this.x,
            n = this.y,
            i = this.z,
            r = t.x,
            a = t.y,
            o = t.z,
            s = t.w,
            l = s * e + a * i - o * n,
            c = s * n + o * e - r * i,
            h = s * i + r * n - a * e,
            u = -r * e - a * n - o * i;
          return (
            (this.x = l * s + u * -r + c * -o - h * -a),
            (this.y = c * s + u * -a + h * -r - l * -o),
            (this.z = h * s + u * -o + l * -a - c * -r),
            this
          );
        },
        project: function(t) {
          return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(
            t.projectionMatrix
          );
        },
        unproject: ((o = new c.a()),
        function(t) {
          return this.applyMatrix4(
            o.getInverse(t.projectionMatrix)
          ).applyMatrix4(t.matrixWorld);
        }),
        transformDirection: function(t) {
          var e = this.x,
            n = this.y,
            i = this.z,
            r = t.elements;
          return (
            (this.x = r[0] * e + r[4] * n + r[8] * i),
            (this.y = r[1] * e + r[5] * n + r[9] * i),
            (this.z = r[2] * e + r[6] * n + r[10] * i),
            this.normalize()
          );
        },
        divide: function(t) {
          return (this.x /= t.x), (this.y /= t.y), (this.z /= t.z), this;
        },
        divideScalar: function(t) {
          return this.multiplyScalar(1 / t);
        },
        min: function(t) {
          return (
            (this.x = Math.min(this.x, t.x)),
            (this.y = Math.min(this.y, t.y)),
            (this.z = Math.min(this.z, t.z)),
            this
          );
        },
        max: function(t) {
          return (
            (this.x = Math.max(this.x, t.x)),
            (this.y = Math.max(this.y, t.y)),
            (this.z = Math.max(this.z, t.z)),
            this
          );
        },
        clamp: function(t, e) {
          return (
            (this.x = Math.max(t.x, Math.min(e.x, this.x))),
            (this.y = Math.max(t.y, Math.min(e.y, this.y))),
            (this.z = Math.max(t.z, Math.min(e.z, this.z))),
            this
          );
        },
        clampScalar: ((r = new u()),
        (a = new u()),
        function(t, e) {
          return r.set(t, t, t), a.set(e, e, e), this.clamp(r, a);
        }),
        clampLength: function(t, e) {
          var n = this.length();
          return this.divideScalar(n || 1).multiplyScalar(
            Math.max(t, Math.min(e, n))
          );
        },
        floor: function() {
          return (
            (this.x = Math.floor(this.x)),
            (this.y = Math.floor(this.y)),
            (this.z = Math.floor(this.z)),
            this
          );
        },
        ceil: function() {
          return (
            (this.x = Math.ceil(this.x)),
            (this.y = Math.ceil(this.y)),
            (this.z = Math.ceil(this.z)),
            this
          );
        },
        round: function() {
          return (
            (this.x = Math.round(this.x)),
            (this.y = Math.round(this.y)),
            (this.z = Math.round(this.z)),
            this
          );
        },
        roundToZero: function() {
          return (
            (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
            (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
            (this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
            this
          );
        },
        negate: function() {
          return (
            (this.x = -this.x), (this.y = -this.y), (this.z = -this.z), this
          );
        },
        dot: function(t) {
          return this.x * t.x + this.y * t.y + this.z * t.z;
        },
        lengthSq: function() {
          return this.x * this.x + this.y * this.y + this.z * this.z;
        },
        length: function() {
          return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
        },
        manhattanLength: function() {
          return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
        },
        normalize: function() {
          return this.divideScalar(this.length() || 1);
        },
        setLength: function(t) {
          return this.normalize().multiplyScalar(t);
        },
        lerp: function(t, e) {
          return (
            (this.x += (t.x - this.x) * e),
            (this.y += (t.y - this.y) * e),
            (this.z += (t.z - this.z) * e),
            this
          );
        },
        lerpVectors: function(t, e, n) {
          return this.subVectors(e, t)
            .multiplyScalar(n)
            .add(t);
        },
        cross: function(t, e) {
          return void 0 !== e
            ? (console.warn(
                "THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."
              ),
              this.crossVectors(t, e))
            : this.crossVectors(this, t);
        },
        crossVectors: function(t, e) {
          var n = t.x,
            i = t.y,
            r = t.z,
            a = e.x,
            o = e.y,
            s = e.z;
          return (
            (this.x = i * s - r * o),
            (this.y = r * a - n * s),
            (this.z = n * o - i * a),
            this
          );
        },
        projectOnVector: function(t) {
          var e = t.dot(this) / t.lengthSq();
          return this.copy(t).multiplyScalar(e);
        },
        projectOnPlane: ((i = new u()),
        function(t) {
          return i.copy(this).projectOnVector(t), this.sub(i);
        }),
        reflect: (function() {
          var t = new u();
          return function(e) {
            return this.sub(t.copy(e).multiplyScalar(2 * this.dot(e)));
          };
        })(),
        angleTo: function(t) {
          var e = this.dot(t) / Math.sqrt(this.lengthSq() * t.lengthSq());
          return Math.acos(l.a.clamp(e, -1, 1));
        },
        distanceTo: function(t) {
          return Math.sqrt(this.distanceToSquared(t));
        },
        distanceToSquared: function(t) {
          var e = this.x - t.x,
            n = this.y - t.y,
            i = this.z - t.z;
          return e * e + n * n + i * i;
        },
        manhattanDistanceTo: function(t) {
          return (
            Math.abs(this.x - t.x) +
            Math.abs(this.y - t.y) +
            Math.abs(this.z - t.z)
          );
        },
        setFromSpherical: function(t) {
          return this.setFromSphericalCoords(t.radius, t.phi, t.theta);
        },
        setFromSphericalCoords: function(t, e, n) {
          var i = Math.sin(e) * t;
          return (
            (this.x = i * Math.sin(n)),
            (this.y = Math.cos(e) * t),
            (this.z = i * Math.cos(n)),
            this
          );
        },
        setFromCylindrical: function(t) {
          return this.setFromCylindricalCoords(t.radius, t.theta, t.y);
        },
        setFromCylindricalCoords: function(t, e, n) {
          return (
            (this.x = t * Math.sin(e)),
            (this.y = n),
            (this.z = t * Math.cos(e)),
            this
          );
        },
        setFromMatrixPosition: function(t) {
          var e = t.elements;
          return (this.x = e[12]), (this.y = e[13]), (this.z = e[14]), this;
        },
        setFromMatrixScale: function(t) {
          var e = this.setFromMatrixColumn(t, 0).length(),
            n = this.setFromMatrixColumn(t, 1).length(),
            i = this.setFromMatrixColumn(t, 2).length();
          return (this.x = e), (this.y = n), (this.z = i), this;
        },
        setFromMatrixColumn: function(t, e) {
          return this.fromArray(t.elements, 4 * e);
        },
        equals: function(t) {
          return t.x === this.x && t.y === this.y && t.z === this.z;
        },
        fromArray: function(t, e) {
          return (
            void 0 === e && (e = 0),
            (this.x = t[e]),
            (this.y = t[e + 1]),
            (this.z = t[e + 2]),
            this
          );
        },
        toArray: function(t, e) {
          return (
            void 0 === t && (t = []),
            void 0 === e && (e = 0),
            (t[e] = this.x),
            (t[e + 1] = this.y),
            (t[e + 2] = this.z),
            t
          );
        },
        fromBufferAttribute: function(t, e, n) {
          return (
            void 0 !== n &&
              console.warn(
                "THREE.Vector3: offset has been removed from .fromBufferAttribute()."
              ),
            (this.x = t.getX(e)),
            (this.y = t.getY(e)),
            (this.z = t.getZ(e)),
            this
          );
        }
      });
    },
    function(t, e, n) {
      "use strict";
      (function(t, i) {
        n.d(e, "e", function() {
          return r;
        }),
          n.d(e, "g", function() {
            return o;
          }),
          n.d(e, "f", function() {
            return a;
          }),
          n.d(e, "c", function() {
            return l;
          }),
          n.d(e, "a", function() {
            return c;
          }),
          n.d(e, "b", function() {
            return h;
          }),
          n.d(e, "d", function() {
            return u;
          });
        /*!
 * VERSION: 2.0.2
 * DATE: 2018-08-27
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2018, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 *
 * @author: Jack Doyle, jack@greensock.com
 */
        var r =
            "undefined" != typeof window
              ? window
              : t.exports && void 0 !== i ? i : {},
          a = (function(t, e) {
            var n = {},
              i = t.document,
              r = (t.GreenSockGlobals = t.GreenSockGlobals || t);
            if (r.TweenLite) return r.TweenLite;
            var a,
              o,
              s,
              l,
              c,
              h,
              u,
              d = function(t) {
                var e,
                  n = t.split("."),
                  i = r;
                for (e = 0; e < n.length; e++) i[n[e]] = i = i[n[e]] || {};
                return i;
              },
              f = d("com.greensock"),
              p = function(t) {
                var e,
                  n = [],
                  i = t.length;
                for (e = 0; e !== i; n.push(t[e++]));
                return n;
              },
              m = function() {},
              g = ((h = Object.prototype.toString),
              (u = h.call([])),
              function(t) {
                return (
                  null != t &&
                  (t instanceof Array ||
                    ("object" == typeof t && !!t.push && h.call(t) === u))
                );
              }),
              v = {},
              _ = function(t, e, i, a) {
                (this.sc = v[t] ? v[t].sc : []),
                  (v[t] = this),
                  (this.gsClass = null),
                  (this.func = i);
                var o = [];
                (this.check = function(s) {
                  for (var l, c, h, u, f = e.length, p = f; --f > -1; )
                    (l = v[e[f]] || new _(e[f], [])).gsClass
                      ? ((o[f] = l.gsClass), p--)
                      : s && l.sc.push(this);
                  if (0 === p && i)
                    for (
                      h = (c = ("com.greensock." + t).split(".")).pop(),
                        u = d(c.join("."))[h] = this.gsClass = i.apply(i, o),
                        a && (r[h] = n[h] = u),
                        f = 0;
                      f < this.sc.length;
                      f++
                    )
                      this.sc[f].check();
                }),
                  this.check(!0);
              },
              y = (t._gsDefine = function(t, e, n, i) {
                return new _(t, e, n, i);
              }),
              x = (f._class = function(t, e, n) {
                return (
                  (e = e || function() {}),
                  y(
                    t,
                    [],
                    function() {
                      return e;
                    },
                    n
                  ),
                  e
                );
              });
            y.globals = r;
            var b = [0, 0, 1, 1],
              w = x(
                "easing.Ease",
                function(t, e, n, i) {
                  (this._func = t),
                    (this._type = n || 0),
                    (this._power = i || 0),
                    (this._params = e ? b.concat(e) : b);
                },
                !0
              ),
              T = (w.map = {}),
              M = (w.register = function(t, e, n, i) {
                for (
                  var r,
                    a,
                    o,
                    s,
                    l = e.split(","),
                    c = l.length,
                    h = (n || "easeIn,easeOut,easeInOut").split(",");
                  --c > -1;

                )
                  for (
                    a = l[c],
                      r = i ? x("easing." + a, null, !0) : f.easing[a] || {},
                      o = h.length;
                    --o > -1;

                  )
                    (s = h[o]),
                      (T[a + "." + s] = T[s + a] = r[s] = t.getRatio
                        ? t
                        : t[s] || new t());
              });
            for (
              (s = w.prototype)._calcEnd = !1,
                s.getRatio = function(t) {
                  if (this._func)
                    return (
                      (this._params[0] = t),
                      this._func.apply(null, this._params)
                    );
                  var e = this._type,
                    n = this._power,
                    i =
                      1 === e
                        ? 1 - t
                        : 2 === e ? t : t < 0.5 ? 2 * t : 2 * (1 - t);
                  return (
                    1 === n
                      ? (i *= i)
                      : 2 === n
                        ? (i *= i * i)
                        : 3 === n
                          ? (i *= i * i * i)
                          : 4 === n && (i *= i * i * i * i),
                    1 === e ? 1 - i : 2 === e ? i : t < 0.5 ? i / 2 : 1 - i / 2
                  );
                },
                o = (a = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"])
                  .length;
              --o > -1;

            )
              (s = a[o] + ",Power" + o),
                M(new w(null, null, 1, o), s, "easeOut", !0),
                M(
                  new w(null, null, 2, o),
                  s,
                  "easeIn" + (0 === o ? ",easeNone" : "")
                ),
                M(new w(null, null, 3, o), s, "easeInOut");
            (T.linear = f.easing.Linear.easeIn),
              (T.swing = f.easing.Quad.easeInOut);
            var E = x("events.EventDispatcher", function(t) {
              (this._listeners = {}), (this._eventTarget = t || this);
            });
            ((s = E.prototype).addEventListener = function(t, e, n, i, r) {
              r = r || 0;
              var a,
                o,
                s = this._listeners[t],
                h = 0;
              for (
                this !== l || c || l.wake(),
                  null == s && (this._listeners[t] = s = []),
                  o = s.length;
                --o > -1;

              )
                (a = s[o]).c === e && a.s === n
                  ? s.splice(o, 1)
                  : 0 === h && a.pr < r && (h = o + 1);
              s.splice(h, 0, { c: e, s: n, up: i, pr: r });
            }),
              (s.removeEventListener = function(t, e) {
                var n,
                  i = this._listeners[t];
                if (i)
                  for (n = i.length; --n > -1; )
                    if (i[n].c === e) return void i.splice(n, 1);
              }),
              (s.dispatchEvent = function(t) {
                var e,
                  n,
                  i,
                  r = this._listeners[t];
                if (r)
                  for (
                    (e = r.length) > 1 && (r = r.slice(0)),
                      n = this._eventTarget;
                    --e > -1;

                  )
                    (i = r[e]) &&
                      (i.up
                        ? i.c.call(i.s || n, { type: t, target: n })
                        : i.c.call(i.s || n));
              });
            var S = t.requestAnimationFrame,
              L = t.cancelAnimationFrame,
              P =
                Date.now ||
                function() {
                  return new Date().getTime();
                },
              A = P();
            for (
              o = (a = ["ms", "moz", "webkit", "o"]).length;
              --o > -1 && !S;

            )
              (S = t[a[o] + "RequestAnimationFrame"]),
                (L =
                  t[a[o] + "CancelAnimationFrame"] ||
                  t[a[o] + "CancelRequestAnimationFrame"]);
            x("Ticker", function(t, e) {
              var n,
                r,
                a,
                o,
                s,
                h = this,
                u = P(),
                d = !(!1 === e || !S) && "auto",
                f = 500,
                p = 33,
                g = function(t) {
                  var e,
                    i,
                    l = P() - A;
                  l > f && (u += l - p),
                    (A += l),
                    (h.time = (A - u) / 1e3),
                    (e = h.time - s),
                    (!n || e > 0 || !0 === t) &&
                      (h.frame++,
                      (s += e + (e >= o ? 0.004 : o - e)),
                      (i = !0)),
                    !0 !== t && (a = r(g)),
                    i && h.dispatchEvent("tick");
                };
              E.call(h),
                (h.time = h.frame = 0),
                (h.tick = function() {
                  g(!0);
                }),
                (h.lagSmoothing = function(t, e) {
                  if (!arguments.length) return f < 1e10;
                  (f = t || 1e10), (p = Math.min(e, f, 0));
                }),
                (h.sleep = function() {
                  null != a &&
                    (d && L ? L(a) : clearTimeout(a),
                    (r = m),
                    (a = null),
                    h === l && (c = !1));
                }),
                (h.wake = function(t) {
                  null !== a
                    ? h.sleep()
                    : t
                      ? (u += -A + (A = P()))
                      : h.frame > 10 && (A = P() - f + 5),
                    (r =
                      0 === n
                        ? m
                        : d && S
                          ? S
                          : function(t) {
                              return setTimeout(
                                t,
                                (1e3 * (s - h.time) + 1) | 0
                              );
                            }),
                    h === l && (c = !0),
                    g(2);
                }),
                (h.fps = function(t) {
                  if (!arguments.length) return n;
                  (o = 1 / ((n = t) || 60)), (s = this.time + o), h.wake();
                }),
                (h.useRAF = function(t) {
                  if (!arguments.length) return d;
                  h.sleep(), (d = t), h.fps(n);
                }),
                h.fps(t),
                setTimeout(function() {
                  "auto" === d &&
                    h.frame < 5 &&
                    "hidden" !== (i || {}).visibilityState &&
                    h.useRAF(!1);
                }, 1500);
            }),
              ((s = f.Ticker.prototype = new f.events.EventDispatcher()).constructor =
                f.Ticker);
            var R = x("core.Animation", function(t, e) {
              if (
                ((this.vars = e = e || {}),
                (this._duration = this._totalDuration = t || 0),
                (this._delay = Number(e.delay) || 0),
                (this._timeScale = 1),
                (this._active = !0 === e.immediateRender),
                (this.data = e.data),
                (this._reversed = !0 === e.reversed),
                Z)
              ) {
                c || l.wake();
                var n = this.vars.useFrames ? q : Z;
                n.add(this, n._time), this.vars.paused && this.paused(!0);
              }
            });
            (l = R.ticker = new f.Ticker()),
              ((s = R.prototype)._dirty = s._gc = s._initted = s._paused = !1),
              (s._totalTime = s._time = 0),
              (s._rawPrevTime = -1),
              (s._next = s._last = s._onUpdate = s._timeline = s.timeline = null),
              (s._paused = !1);
            var C = function() {
              c &&
                P() - A > 2e3 &&
                ("hidden" !== (i || {}).visibilityState || !l.lagSmoothing()) &&
                l.wake();
              var t = setTimeout(C, 2e3);
              t.unref && t.unref();
            };
            C(),
              (s.play = function(t, e) {
                return (
                  null != t && this.seek(t, e), this.reversed(!1).paused(!1)
                );
              }),
              (s.pause = function(t, e) {
                return null != t && this.seek(t, e), this.paused(!0);
              }),
              (s.resume = function(t, e) {
                return null != t && this.seek(t, e), this.paused(!1);
              }),
              (s.seek = function(t, e) {
                return this.totalTime(Number(t), !1 !== e);
              }),
              (s.restart = function(t, e) {
                return this.reversed(!1)
                  .paused(!1)
                  .totalTime(t ? -this._delay : 0, !1 !== e, !0);
              }),
              (s.reverse = function(t, e) {
                return (
                  null != t && this.seek(t || this.totalDuration(), e),
                  this.reversed(!0).paused(!1)
                );
              }),
              (s.render = function(t, e, n) {}),
              (s.invalidate = function() {
                return (
                  (this._time = this._totalTime = 0),
                  (this._initted = this._gc = !1),
                  (this._rawPrevTime = -1),
                  (!this._gc && this.timeline) || this._enabled(!0),
                  this
                );
              }),
              (s.isActive = function() {
                var t,
                  e = this._timeline,
                  n = this._startTime;
                return (
                  !e ||
                  (!this._gc &&
                    !this._paused &&
                    e.isActive() &&
                    (t = e.rawTime(!0)) >= n &&
                    t < n + this.totalDuration() / this._timeScale - 1e-7)
                );
              }),
              (s._enabled = function(t, e) {
                return (
                  c || l.wake(),
                  (this._gc = !t),
                  (this._active = this.isActive()),
                  !0 !== e &&
                    (t && !this.timeline
                      ? this._timeline.add(this, this._startTime - this._delay)
                      : !t &&
                        this.timeline &&
                        this._timeline._remove(this, !0)),
                  !1
                );
              }),
              (s._kill = function(t, e) {
                return this._enabled(!1, !1);
              }),
              (s.kill = function(t, e) {
                return this._kill(t, e), this;
              }),
              (s._uncache = function(t) {
                for (var e = t ? this : this.timeline; e; )
                  (e._dirty = !0), (e = e.timeline);
                return this;
              }),
              (s._swapSelfInParams = function(t) {
                for (var e = t.length, n = t.concat(); --e > -1; )
                  "{self}" === t[e] && (n[e] = this);
                return n;
              }),
              (s._callback = function(t) {
                var e = this.vars,
                  n = e[t],
                  i = e[t + "Params"],
                  r = e[t + "Scope"] || e.callbackScope || this;
                switch (i ? i.length : 0) {
                  case 0:
                    n.call(r);
                    break;
                  case 1:
                    n.call(r, i[0]);
                    break;
                  case 2:
                    n.call(r, i[0], i[1]);
                    break;
                  default:
                    n.apply(r, i);
                }
              }),
              (s.eventCallback = function(t, e, n, i) {
                if ("on" === (t || "").substr(0, 2)) {
                  var r = this.vars;
                  if (1 === arguments.length) return r[t];
                  null == e
                    ? delete r[t]
                    : ((r[t] = e),
                      (r[t + "Params"] =
                        g(n) && -1 !== n.join("").indexOf("{self}")
                          ? this._swapSelfInParams(n)
                          : n),
                      (r[t + "Scope"] = i)),
                    "onUpdate" === t && (this._onUpdate = e);
                }
                return this;
              }),
              (s.delay = function(t) {
                return arguments.length
                  ? (this._timeline.smoothChildTiming &&
                      this.startTime(this._startTime + t - this._delay),
                    (this._delay = t),
                    this)
                  : this._delay;
              }),
              (s.duration = function(t) {
                return arguments.length
                  ? ((this._duration = this._totalDuration = t),
                    this._uncache(!0),
                    this._timeline.smoothChildTiming &&
                      this._time > 0 &&
                      this._time < this._duration &&
                      0 !== t &&
                      this.totalTime(
                        this._totalTime * (t / this._duration),
                        !0
                      ),
                    this)
                  : ((this._dirty = !1), this._duration);
              }),
              (s.totalDuration = function(t) {
                return (
                  (this._dirty = !1),
                  arguments.length ? this.duration(t) : this._totalDuration
                );
              }),
              (s.time = function(t, e) {
                return arguments.length
                  ? (this._dirty && this.totalDuration(),
                    this.totalTime(t > this._duration ? this._duration : t, e))
                  : this._time;
              }),
              (s.totalTime = function(t, e, n) {
                if ((c || l.wake(), !arguments.length)) return this._totalTime;
                if (this._timeline) {
                  if (
                    (t < 0 && !n && (t += this.totalDuration()),
                    this._timeline.smoothChildTiming)
                  ) {
                    this._dirty && this.totalDuration();
                    var i = this._totalDuration,
                      r = this._timeline;
                    if (
                      (t > i && !n && (t = i),
                      (this._startTime =
                        (this._paused ? this._pauseTime : r._time) -
                        (this._reversed ? i - t : t) / this._timeScale),
                      r._dirty || this._uncache(!1),
                      r._timeline)
                    )
                      for (; r._timeline; )
                        r._timeline._time !==
                          (r._startTime + r._totalTime) / r._timeScale &&
                          r.totalTime(r._totalTime, !0),
                          (r = r._timeline);
                  }
                  this._gc && this._enabled(!0, !1),
                    (this._totalTime === t && 0 !== this._duration) ||
                      (N.length && K(), this.render(t, e, !1), N.length && K());
                }
                return this;
              }),
              (s.progress = s.totalProgress = function(t, e) {
                var n = this.duration();
                return arguments.length
                  ? this.totalTime(n * t, e)
                  : n ? this._time / n : this.ratio;
              }),
              (s.startTime = function(t) {
                return arguments.length
                  ? (t !== this._startTime &&
                      ((this._startTime = t),
                      this.timeline &&
                        this.timeline._sortChildren &&
                        this.timeline.add(this, t - this._delay)),
                    this)
                  : this._startTime;
              }),
              (s.endTime = function(t) {
                return (
                  this._startTime +
                  (0 != t ? this.totalDuration() : this.duration()) /
                    this._timeScale
                );
              }),
              (s.timeScale = function(t) {
                if (!arguments.length) return this._timeScale;
                var e, n;
                for (
                  t = t || 1e-10,
                    this._timeline &&
                      this._timeline.smoothChildTiming &&
                      ((n =
                        (e = this._pauseTime) || 0 === e
                          ? e
                          : this._timeline.totalTime()),
                      (this._startTime =
                        n - (n - this._startTime) * this._timeScale / t)),
                    this._timeScale = t,
                    n = this.timeline;
                  n && n.timeline;

                )
                  (n._dirty = !0), n.totalDuration(), (n = n.timeline);
                return this;
              }),
              (s.reversed = function(t) {
                return arguments.length
                  ? (t != this._reversed &&
                      ((this._reversed = t),
                      this.totalTime(
                        this._timeline && !this._timeline.smoothChildTiming
                          ? this.totalDuration() - this._totalTime
                          : this._totalTime,
                        !0
                      )),
                    this)
                  : this._reversed;
              }),
              (s.paused = function(t) {
                if (!arguments.length) return this._paused;
                var e,
                  n,
                  i = this._timeline;
                return (
                  t != this._paused &&
                    i &&
                    (c || t || l.wake(),
                    (n = (e = i.rawTime()) - this._pauseTime),
                    !t &&
                      i.smoothChildTiming &&
                      ((this._startTime += n), this._uncache(!1)),
                    (this._pauseTime = t ? e : null),
                    (this._paused = t),
                    (this._active = this.isActive()),
                    !t &&
                      0 !== n &&
                      this._initted &&
                      this.duration() &&
                      ((e = i.smoothChildTiming
                        ? this._totalTime
                        : (e - this._startTime) / this._timeScale),
                      this.render(e, e === this._totalTime, !0))),
                  this._gc && !t && this._enabled(!0, !1),
                  this
                );
              });
            var D = x("core.SimpleTimeline", function(t) {
              R.call(this, 0, t),
                (this.autoRemoveChildren = this.smoothChildTiming = !0);
            });
            ((s = D.prototype = new R()).constructor = D),
              (s.kill()._gc = !1),
              (s._first = s._last = s._recent = null),
              (s._sortChildren = !1),
              (s.add = s.insert = function(t, e, n, i) {
                var r, a;
                if (
                  ((t._startTime = Number(e || 0) + t._delay),
                  t._paused &&
                    this !== t._timeline &&
                    (t._pauseTime =
                      this.rawTime() - (t._timeline.rawTime() - t._pauseTime)),
                  t.timeline && t.timeline._remove(t, !0),
                  (t.timeline = t._timeline = this),
                  t._gc && t._enabled(!0, !0),
                  (r = this._last),
                  this._sortChildren)
                )
                  for (a = t._startTime; r && r._startTime > a; ) r = r._prev;
                return (
                  r
                    ? ((t._next = r._next), (r._next = t))
                    : ((t._next = this._first), (this._first = t)),
                  t._next ? (t._next._prev = t) : (this._last = t),
                  (t._prev = r),
                  (this._recent = t),
                  this._timeline && this._uncache(!0),
                  this
                );
              }),
              (s._remove = function(t, e) {
                return (
                  t.timeline === this &&
                    (e || t._enabled(!1, !0),
                    t._prev
                      ? (t._prev._next = t._next)
                      : this._first === t && (this._first = t._next),
                    t._next
                      ? (t._next._prev = t._prev)
                      : this._last === t && (this._last = t._prev),
                    (t._next = t._prev = t.timeline = null),
                    t === this._recent && (this._recent = this._last),
                    this._timeline && this._uncache(!0)),
                  this
                );
              }),
              (s.render = function(t, e, n) {
                var i,
                  r = this._first;
                for (this._totalTime = this._time = this._rawPrevTime = t; r; )
                  (i = r._next),
                    (r._active ||
                      (t >= r._startTime && !r._paused && !r._gc)) &&
                      (r._reversed
                        ? r.render(
                            (r._dirty ? r.totalDuration() : r._totalDuration) -
                              (t - r._startTime) * r._timeScale,
                            e,
                            n
                          )
                        : r.render((t - r._startTime) * r._timeScale, e, n)),
                    (r = i);
              }),
              (s.rawTime = function() {
                return c || l.wake(), this._totalTime;
              });
            var O = x(
                "TweenLite",
                function(e, n, i) {
                  if (
                    (R.call(this, n, i),
                    (this.render = O.prototype.render),
                    null == e)
                  )
                    throw "Cannot tween a null target.";
                  this.target = e =
                    "string" != typeof e ? e : O.selector(e) || e;
                  var r,
                    a,
                    o,
                    s =
                      e.jquery ||
                      (e.length &&
                        e !== t &&
                        e[0] &&
                        (e[0] === t ||
                          (e[0].nodeType && e[0].style && !e.nodeType))),
                    l = this.vars.overwrite;
                  if (
                    ((this._overwrite = l =
                      null == l
                        ? Y[O.defaultOverwrite]
                        : "number" == typeof l ? l >> 0 : Y[l]),
                    (s || e instanceof Array || (e.push && g(e))) &&
                      "number" != typeof e[0])
                  )
                    for (
                      this._targets = o = p(e),
                        this._propLookup = [],
                        this._siblings = [],
                        r = 0;
                      r < o.length;
                      r++
                    )
                      (a = o[r])
                        ? "string" != typeof a
                          ? a.length &&
                            a !== t &&
                            a[0] &&
                            (a[0] === t ||
                              (a[0].nodeType && a[0].style && !a.nodeType))
                            ? (o.splice(r--, 1),
                              (this._targets = o = o.concat(p(a))))
                            : ((this._siblings[r] = Q(a, this, !1)),
                              1 === l &&
                                this._siblings[r].length > 1 &&
                                tt(a, this, null, 1, this._siblings[r]))
                          : "string" == typeof (a = o[r--] = O.selector(a)) &&
                            o.splice(r + 1, 1)
                        : o.splice(r--, 1);
                  else
                    (this._propLookup = {}),
                      (this._siblings = Q(e, this, !1)),
                      1 === l &&
                        this._siblings.length > 1 &&
                        tt(e, this, null, 1, this._siblings);
                  (this.vars.immediateRender ||
                    (0 === n &&
                      0 === this._delay &&
                      !1 !== this.vars.immediateRender)) &&
                    ((this._time = -1e-10),
                    this.render(Math.min(0, -this._delay)));
                },
                !0
              ),
              I = function(e) {
                return (
                  e &&
                  e.length &&
                  e !== t &&
                  e[0] &&
                  (e[0] === t || (e[0].nodeType && e[0].style && !e.nodeType))
                );
              };
            ((s = O.prototype = new R()).constructor = O),
              (s.kill()._gc = !1),
              (s.ratio = 0),
              (s._firstPT = s._targets = s._overwrittenProps = s._startAt = null),
              (s._notifyPluginsOfEnabled = s._lazy = !1),
              (O.version = "2.0.2"),
              (O.defaultEase = s._ease = new w(null, null, 1, 1)),
              (O.defaultOverwrite = "auto"),
              (O.ticker = l),
              (O.autoSleep = 120),
              (O.lagSmoothing = function(t, e) {
                l.lagSmoothing(t, e);
              }),
              (O.selector =
                t.$ ||
                t.jQuery ||
                function(e) {
                  var n = t.$ || t.jQuery;
                  return n
                    ? ((O.selector = n), n(e))
                    : (i || (i = t.document),
                      i
                        ? i.querySelectorAll
                          ? i.querySelectorAll(e)
                          : i.getElementById(
                              "#" === e.charAt(0) ? e.substr(1) : e
                            )
                        : e);
                });
            var N = [],
              U = {},
              F = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,
              z = /[\+-]=-?[\.\d]/,
              k = function(t) {
                for (var e, n = this._firstPT; n; )
                  (e = n.blob
                    ? 1 === t && null != this.end
                      ? this.end
                      : t ? this.join("") : this.start
                    : n.c * t + n.s),
                    n.m
                      ? (e = n.m.call(
                          this._tween,
                          e,
                          this._target || n.t,
                          this._tween
                        ))
                      : e < 1e-6 && e > -1e-6 && !n.blob && (e = 0),
                    n.f
                      ? n.fp ? n.t[n.p](n.fp, e) : n.t[n.p](e)
                      : (n.t[n.p] = e),
                    (n = n._next);
              },
              B = function(t, e, n, i) {
                var r,
                  a,
                  o,
                  s,
                  l,
                  c,
                  h,
                  u = [],
                  d = 0,
                  f = "",
                  p = 0;
                for (
                  u.start = t,
                    u.end = e,
                    t = u[0] = t + "",
                    e = u[1] = e + "",
                    n && (n(u), (t = u[0]), (e = u[1])),
                    u.length = 0,
                    r = t.match(F) || [],
                    a = e.match(F) || [],
                    i &&
                      ((i._next = null),
                      (i.blob = 1),
                      (u._firstPT = u._applyPT = i)),
                    l = a.length,
                    s = 0;
                  s < l;
                  s++
                )
                  (h = a[s]),
                    (f +=
                      (c = e.substr(d, e.indexOf(h, d) - d)) || !s ? c : ","),
                    (d += c.length),
                    p ? (p = (p + 1) % 5) : "rgba(" === c.substr(-5) && (p = 1),
                    h === r[s] || r.length <= s
                      ? (f += h)
                      : (f && (u.push(f), (f = "")),
                        (o = parseFloat(r[s])),
                        u.push(o),
                        (u._firstPT = {
                          _next: u._firstPT,
                          t: u,
                          p: u.length - 1,
                          s: o,
                          c:
                            ("=" === h.charAt(1)
                              ? parseInt(h.charAt(0) + "1", 10) *
                                parseFloat(h.substr(2))
                              : parseFloat(h) - o) || 0,
                          f: 0,
                          m: p && p < 4 ? Math.round : 0
                        })),
                    (d += h.length);
                return (
                  (f += e.substr(d)) && u.push(f),
                  (u.setRatio = k),
                  z.test(e) && (u.end = null),
                  u
                );
              },
              G = function(t, e, n, i, r, a, o, s, l) {
                "function" == typeof i && (i = i(l || 0, t));
                var c = typeof t[e],
                  h =
                    "function" !== c
                      ? ""
                      : e.indexOf("set") ||
                        "function" != typeof t["get" + e.substr(3)]
                        ? e
                        : "get" + e.substr(3),
                  u = "get" !== n ? n : h ? (o ? t[h](o) : t[h]()) : t[e],
                  d = "string" == typeof i && "=" === i.charAt(1),
                  f = {
                    t: t,
                    p: e,
                    s: u,
                    f: "function" === c,
                    pg: 0,
                    n: r || e,
                    m: a ? ("function" == typeof a ? a : Math.round) : 0,
                    pr: 0,
                    c: d
                      ? parseInt(i.charAt(0) + "1", 10) *
                        parseFloat(i.substr(2))
                      : parseFloat(i) - u || 0
                  };
                if (
                  (("number" != typeof u || ("number" != typeof i && !d)) &&
                    (o ||
                    isNaN(u) ||
                    (!d && isNaN(i)) ||
                    "boolean" == typeof u ||
                    "boolean" == typeof i
                      ? ((f.fp = o),
                        (f = {
                          t: B(
                            u,
                            d
                              ? parseFloat(f.s) +
                                f.c +
                                (f.s + "").replace(/[0-9\-\.]/g, "")
                              : i,
                            s || O.defaultStringFilter,
                            f
                          ),
                          p: "setRatio",
                          s: 0,
                          c: 1,
                          f: 2,
                          pg: 0,
                          n: r || e,
                          pr: 0,
                          m: 0
                        }))
                      : ((f.s = parseFloat(u)),
                        d || (f.c = parseFloat(i) - f.s || 0))),
                  f.c)
                )
                  return (
                    (f._next = this._firstPT) && (f._next._prev = f),
                    (this._firstPT = f),
                    f
                  );
              },
              V = (O._internals = {
                isArray: g,
                isSelector: I,
                lazyTweens: N,
                blobDif: B
              }),
              H = (O._plugins = {}),
              W = (V.tweenLookup = {}),
              X = 0,
              j = (V.reservedProps = {
                ease: 1,
                delay: 1,
                overwrite: 1,
                onComplete: 1,
                onCompleteParams: 1,
                onCompleteScope: 1,
                useFrames: 1,
                runBackwards: 1,
                startAt: 1,
                onUpdate: 1,
                onUpdateParams: 1,
                onUpdateScope: 1,
                onStart: 1,
                onStartParams: 1,
                onStartScope: 1,
                onReverseComplete: 1,
                onReverseCompleteParams: 1,
                onReverseCompleteScope: 1,
                onRepeat: 1,
                onRepeatParams: 1,
                onRepeatScope: 1,
                easeParams: 1,
                yoyo: 1,
                immediateRender: 1,
                repeat: 1,
                repeatDelay: 1,
                data: 1,
                paused: 1,
                reversed: 1,
                autoCSS: 1,
                lazy: 1,
                onOverwrite: 1,
                callbackScope: 1,
                stringFilter: 1,
                id: 1,
                yoyoEase: 1
              }),
              Y = {
                none: 0,
                all: 1,
                auto: 2,
                concurrent: 3,
                allOnStart: 4,
                preexisting: 5,
                true: 1,
                false: 0
              },
              q = (R._rootFramesTimeline = new D()),
              Z = (R._rootTimeline = new D()),
              J = 30,
              K = (V.lazyRender = function() {
                var t,
                  e = N.length;
                for (U = {}; --e > -1; )
                  (t = N[e]) &&
                    !1 !== t._lazy &&
                    (t.render(t._lazy[0], t._lazy[1], !0), (t._lazy = !1));
                N.length = 0;
              });
            (Z._startTime = l.time),
              (q._startTime = l.frame),
              (Z._active = q._active = !0),
              setTimeout(K, 1),
              (R._updateRoot = O.render = function() {
                var t, e, n;
                if (
                  (N.length && K(),
                  Z.render((l.time - Z._startTime) * Z._timeScale, !1, !1),
                  q.render((l.frame - q._startTime) * q._timeScale, !1, !1),
                  N.length && K(),
                  l.frame >= J)
                ) {
                  for (n in ((J = l.frame + (parseInt(O.autoSleep, 10) || 120)),
                  W)) {
                    for (t = (e = W[n].tweens).length; --t > -1; )
                      e[t]._gc && e.splice(t, 1);
                    0 === e.length && delete W[n];
                  }
                  if (
                    (!(n = Z._first) || n._paused) &&
                    O.autoSleep &&
                    !q._first &&
                    1 === l._listeners.tick.length
                  ) {
                    for (; n && n._paused; ) n = n._next;
                    n || l.sleep();
                  }
                }
              }),
              l.addEventListener("tick", R._updateRoot);
            var Q = function(t, e, n) {
                var i,
                  r,
                  a = t._gsTweenID;
                if (
                  (W[a || (t._gsTweenID = a = "t" + X++)] ||
                    (W[a] = { target: t, tweens: [] }),
                  e && (((i = W[a].tweens)[(r = i.length)] = e), n))
                )
                  for (; --r > -1; ) i[r] === e && i.splice(r, 1);
                return W[a].tweens;
              },
              $ = function(t, e, n, i) {
                var r,
                  a,
                  o = t.vars.onOverwrite;
                return (
                  o && (r = o(t, e, n, i)),
                  (o = O.onOverwrite) && (a = o(t, e, n, i)),
                  !1 !== r && !1 !== a
                );
              },
              tt = function(t, e, n, i, r) {
                var a, o, s, l;
                if (1 === i || i >= 4) {
                  for (l = r.length, a = 0; a < l; a++)
                    if ((s = r[a]) !== e)
                      s._gc || (s._kill(null, t, e) && (o = !0));
                    else if (5 === i) break;
                  return o;
                }
                var c,
                  h = e._startTime + 1e-10,
                  u = [],
                  d = 0,
                  f = 0 === e._duration;
                for (a = r.length; --a > -1; )
                  (s = r[a]) === e ||
                    s._gc ||
                    s._paused ||
                    (s._timeline !== e._timeline
                      ? ((c = c || et(e, 0, f)),
                        0 === et(s, c, f) && (u[d++] = s))
                      : s._startTime <= h &&
                        s._startTime + s.totalDuration() / s._timeScale > h &&
                        (((f || !s._initted) && h - s._startTime <= 2e-10) ||
                          (u[d++] = s)));
                for (a = d; --a > -1; )
                  if (
                    ((l = (s = u[a])._firstPT),
                    2 === i && s._kill(n, t, e) && (o = !0),
                    2 !== i || (!s._firstPT && s._initted && l))
                  ) {
                    if (2 !== i && !$(s, e)) continue;
                    s._enabled(!1, !1) && (o = !0);
                  }
                return o;
              },
              et = function(t, e, n) {
                for (
                  var i = t._timeline, r = i._timeScale, a = t._startTime;
                  i._timeline;

                ) {
                  if (((a += i._startTime), (r *= i._timeScale), i._paused))
                    return -100;
                  i = i._timeline;
                }
                return (a /= r) > e
                  ? a - e
                  : (n && a === e) || (!t._initted && a - e < 2e-10)
                    ? 1e-10
                    : (a += t.totalDuration() / t._timeScale / r) > e + 1e-10
                      ? 0
                      : a - e - 1e-10;
              };
            (s._init = function() {
              var t,
                e,
                n,
                i,
                r,
                a,
                o = this.vars,
                s = this._overwrittenProps,
                l = this._duration,
                c = !!o.immediateRender,
                h = o.ease;
              if (o.startAt) {
                for (i in (this._startAt &&
                  (this._startAt.render(-1, !0), this._startAt.kill()),
                (r = {}),
                o.startAt))
                  r[i] = o.startAt[i];
                if (
                  ((r.data = "isStart"),
                  (r.overwrite = !1),
                  (r.immediateRender = !0),
                  (r.lazy = c && !1 !== o.lazy),
                  (r.startAt = r.delay = null),
                  (r.onUpdate = o.onUpdate),
                  (r.onUpdateParams = o.onUpdateParams),
                  (r.onUpdateScope =
                    o.onUpdateScope || o.callbackScope || this),
                  (this._startAt = O.to(this.target || {}, 0, r)),
                  c)
                )
                  if (this._time > 0) this._startAt = null;
                  else if (0 !== l) return;
              } else if (o.runBackwards && 0 !== l)
                if (this._startAt)
                  this._startAt.render(-1, !0),
                    this._startAt.kill(),
                    (this._startAt = null);
                else {
                  for (i in (0 !== this._time && (c = !1), (n = {}), o))
                    (j[i] && "autoCSS" !== i) || (n[i] = o[i]);
                  if (
                    ((n.overwrite = 0),
                    (n.data = "isFromStart"),
                    (n.lazy = c && !1 !== o.lazy),
                    (n.immediateRender = c),
                    (this._startAt = O.to(this.target, 0, n)),
                    c)
                  ) {
                    if (0 === this._time) return;
                  } else
                    this._startAt._init(),
                      this._startAt._enabled(!1),
                      this.vars.immediateRender && (this._startAt = null);
                }
              if (
                ((this._ease = h = h
                  ? h instanceof w
                    ? h
                    : "function" == typeof h
                      ? new w(h, o.easeParams)
                      : T[h] || O.defaultEase
                  : O.defaultEase),
                o.easeParams instanceof Array &&
                  h.config &&
                  (this._ease = h.config.apply(h, o.easeParams)),
                (this._easeType = this._ease._type),
                (this._easePower = this._ease._power),
                (this._firstPT = null),
                this._targets)
              )
                for (a = this._targets.length, t = 0; t < a; t++)
                  this._initProps(
                    this._targets[t],
                    (this._propLookup[t] = {}),
                    this._siblings[t],
                    s ? s[t] : null,
                    t
                  ) && (e = !0);
              else
                e = this._initProps(
                  this.target,
                  this._propLookup,
                  this._siblings,
                  s,
                  0
                );
              if (
                (e && O._onPluginEvent("_onInitAllProps", this),
                s &&
                  (this._firstPT ||
                    ("function" != typeof this.target &&
                      this._enabled(!1, !1))),
                o.runBackwards)
              )
                for (n = this._firstPT; n; )
                  (n.s += n.c), (n.c = -n.c), (n = n._next);
              (this._onUpdate = o.onUpdate), (this._initted = !0);
            }),
              (s._initProps = function(e, n, i, r, a) {
                var o, s, l, c, h, u;
                if (null == e) return !1;
                for (o in (U[e._gsTweenID] && K(),
                this.vars.css ||
                  (e.style &&
                    e !== t &&
                    e.nodeType &&
                    H.css &&
                    !1 !== this.vars.autoCSS &&
                    (function(t, e) {
                      var n,
                        i = {};
                      for (n in t)
                        j[n] ||
                          (n in e &&
                            "transform" !== n &&
                            "x" !== n &&
                            "y" !== n &&
                            "width" !== n &&
                            "height" !== n &&
                            "className" !== n &&
                            "border" !== n) ||
                          !(!H[n] || (H[n] && H[n]._autoCSS)) ||
                          ((i[n] = t[n]), delete t[n]);
                      t.css = i;
                    })(this.vars, e)),
                this.vars))
                  if (((u = this.vars[o]), j[o]))
                    u &&
                      (u instanceof Array || (u.push && g(u))) &&
                      -1 !== u.join("").indexOf("{self}") &&
                      (this.vars[o] = u = this._swapSelfInParams(u, this));
                  else if (
                    H[o] &&
                    (c = new H[o]())._onInitTween(e, this.vars[o], this, a)
                  ) {
                    for (
                      this._firstPT = h = {
                        _next: this._firstPT,
                        t: c,
                        p: "setRatio",
                        s: 0,
                        c: 1,
                        f: 1,
                        n: o,
                        pg: 1,
                        pr: c._priority,
                        m: 0
                      },
                        s = c._overwriteProps.length;
                      --s > -1;

                    )
                      n[c._overwriteProps[s]] = this._firstPT;
                    (c._priority || c._onInitAllProps) && (l = !0),
                      (c._onDisable || c._onEnable) &&
                        (this._notifyPluginsOfEnabled = !0),
                      h._next && (h._next._prev = h);
                  } else
                    n[o] = G.call(
                      this,
                      e,
                      o,
                      "get",
                      u,
                      o,
                      0,
                      null,
                      this.vars.stringFilter,
                      a
                    );
                return r && this._kill(r, e)
                  ? this._initProps(e, n, i, r, a)
                  : this._overwrite > 1 &&
                    this._firstPT &&
                    i.length > 1 &&
                    tt(e, this, n, this._overwrite, i)
                    ? (this._kill(n, e), this._initProps(e, n, i, r, a))
                    : (this._firstPT &&
                        ((!1 !== this.vars.lazy && this._duration) ||
                          (this.vars.lazy && !this._duration)) &&
                        (U[e._gsTweenID] = !0),
                      l);
              }),
              (s.render = function(t, e, n) {
                var i,
                  r,
                  a,
                  o,
                  s = this._time,
                  l = this._duration,
                  c = this._rawPrevTime;
                if (t >= l - 1e-7 && t >= 0)
                  (this._totalTime = this._time = l),
                    (this.ratio = this._ease._calcEnd
                      ? this._ease.getRatio(1)
                      : 1),
                    this._reversed ||
                      ((i = !0),
                      (r = "onComplete"),
                      (n = n || this._timeline.autoRemoveChildren)),
                    0 === l &&
                      (this._initted || !this.vars.lazy || n) &&
                      (this._startTime === this._timeline._duration && (t = 0),
                      (c < 0 ||
                        (t <= 0 && t >= -1e-7) ||
                        (1e-10 === c && "isPause" !== this.data)) &&
                        c !== t &&
                        ((n = !0), c > 1e-10 && (r = "onReverseComplete")),
                      (this._rawPrevTime = o = !e || t || c === t ? t : 1e-10));
                else if (t < 1e-7)
                  (this._totalTime = this._time = 0),
                    (this.ratio = this._ease._calcEnd
                      ? this._ease.getRatio(0)
                      : 0),
                    (0 !== s || (0 === l && c > 0)) &&
                      ((r = "onReverseComplete"), (i = this._reversed)),
                    t < 0 &&
                      ((this._active = !1),
                      0 === l &&
                        (this._initted || !this.vars.lazy || n) &&
                        (c >= 0 &&
                          (1e-10 !== c || "isPause" !== this.data) &&
                          (n = !0),
                        (this._rawPrevTime = o =
                          !e || t || c === t ? t : 1e-10))),
                    (!this._initted ||
                      (this._startAt && this._startAt.progress())) &&
                      (n = !0);
                else if (((this._totalTime = this._time = t), this._easeType)) {
                  var h = t / l,
                    u = this._easeType,
                    d = this._easePower;
                  (1 === u || (3 === u && h >= 0.5)) && (h = 1 - h),
                    3 === u && (h *= 2),
                    1 === d
                      ? (h *= h)
                      : 2 === d
                        ? (h *= h * h)
                        : 3 === d
                          ? (h *= h * h * h)
                          : 4 === d && (h *= h * h * h * h),
                    (this.ratio =
                      1 === u
                        ? 1 - h
                        : 2 === u ? h : t / l < 0.5 ? h / 2 : 1 - h / 2);
                } else this.ratio = this._ease.getRatio(t / l);
                if (this._time !== s || n) {
                  if (!this._initted) {
                    if ((this._init(), !this._initted || this._gc)) return;
                    if (
                      !n &&
                      this._firstPT &&
                      ((!1 !== this.vars.lazy && this._duration) ||
                        (this.vars.lazy && !this._duration))
                    )
                      return (
                        (this._time = this._totalTime = s),
                        (this._rawPrevTime = c),
                        N.push(this),
                        void (this._lazy = [t, e])
                      );
                    this._time && !i
                      ? (this.ratio = this._ease.getRatio(this._time / l))
                      : i &&
                        this._ease._calcEnd &&
                        (this.ratio = this._ease.getRatio(
                          0 === this._time ? 0 : 1
                        ));
                  }
                  for (
                    !1 !== this._lazy && (this._lazy = !1),
                      this._active ||
                        (!this._paused &&
                          this._time !== s &&
                          t >= 0 &&
                          (this._active = !0)),
                      0 === s &&
                        (this._startAt &&
                          (t >= 0
                            ? this._startAt.render(t, !0, n)
                            : r || (r = "_dummyGS")),
                        this.vars.onStart &&
                          ((0 === this._time && 0 !== l) ||
                            e ||
                            this._callback("onStart"))),
                      a = this._firstPT;
                    a;

                  )
                    a.f
                      ? a.t[a.p](a.c * this.ratio + a.s)
                      : (a.t[a.p] = a.c * this.ratio + a.s),
                      (a = a._next);
                  this._onUpdate &&
                    (t < 0 &&
                      this._startAt &&
                      -1e-4 !== t &&
                      this._startAt.render(t, !0, n),
                    e ||
                      ((this._time !== s || i || n) &&
                        this._callback("onUpdate"))),
                    r &&
                      ((this._gc && !n) ||
                        (t < 0 &&
                          this._startAt &&
                          !this._onUpdate &&
                          -1e-4 !== t &&
                          this._startAt.render(t, !0, n),
                        i &&
                          (this._timeline.autoRemoveChildren &&
                            this._enabled(!1, !1),
                          (this._active = !1)),
                        !e && this.vars[r] && this._callback(r),
                        0 === l &&
                          1e-10 === this._rawPrevTime &&
                          1e-10 !== o &&
                          (this._rawPrevTime = 0)));
                }
              }),
              (s._kill = function(t, e, n) {
                if (
                  ("all" === t && (t = null),
                  null == t && (null == e || e === this.target))
                )
                  return (this._lazy = !1), this._enabled(!1, !1);
                e =
                  "string" != typeof e
                    ? e || this._targets || this.target
                    : O.selector(e) || e;
                var i,
                  r,
                  a,
                  o,
                  s,
                  l,
                  c,
                  h,
                  u,
                  d =
                    n &&
                    this._time &&
                    n._startTime === this._startTime &&
                    this._timeline === n._timeline,
                  f = this._firstPT;
                if ((g(e) || I(e)) && "number" != typeof e[0])
                  for (i = e.length; --i > -1; )
                    this._kill(t, e[i], n) && (l = !0);
                else {
                  if (this._targets) {
                    for (i = this._targets.length; --i > -1; )
                      if (e === this._targets[i]) {
                        (s = this._propLookup[i] || {}),
                          (this._overwrittenProps =
                            this._overwrittenProps || []),
                          (r = this._overwrittenProps[i] = t
                            ? this._overwrittenProps[i] || {}
                            : "all");
                        break;
                      }
                  } else {
                    if (e !== this.target) return !1;
                    (s = this._propLookup),
                      (r = this._overwrittenProps = t
                        ? this._overwrittenProps || {}
                        : "all");
                  }
                  if (s) {
                    if (
                      ((c = t || s),
                      (h =
                        t !== r &&
                        "all" !== r &&
                        t !== s &&
                        ("object" != typeof t || !t._tempKill)),
                      n && (O.onOverwrite || this.vars.onOverwrite))
                    ) {
                      for (a in c) s[a] && (u || (u = []), u.push(a));
                      if ((u || !t) && !$(this, n, e, u)) return !1;
                    }
                    for (a in c)
                      (o = s[a]) &&
                        (d &&
                          (o.f ? o.t[o.p](o.s) : (o.t[o.p] = o.s), (l = !0)),
                        o.pg && o.t._kill(c) && (l = !0),
                        (o.pg && 0 !== o.t._overwriteProps.length) ||
                          (o._prev
                            ? (o._prev._next = o._next)
                            : o === this._firstPT && (this._firstPT = o._next),
                          o._next && (o._next._prev = o._prev),
                          (o._next = o._prev = null)),
                        delete s[a]),
                        h && (r[a] = 1);
                    !this._firstPT &&
                      this._initted &&
                      f &&
                      this._enabled(!1, !1);
                  }
                }
                return l;
              }),
              (s.invalidate = function() {
                return (
                  this._notifyPluginsOfEnabled &&
                    O._onPluginEvent("_onDisable", this),
                  (this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null),
                  (this._notifyPluginsOfEnabled = this._active = this._lazy = !1),
                  (this._propLookup = this._targets ? {} : []),
                  R.prototype.invalidate.call(this),
                  this.vars.immediateRender &&
                    ((this._time = -1e-10),
                    this.render(Math.min(0, -this._delay))),
                  this
                );
              }),
              (s._enabled = function(t, e) {
                if ((c || l.wake(), t && this._gc)) {
                  var n,
                    i = this._targets;
                  if (i)
                    for (n = i.length; --n > -1; )
                      this._siblings[n] = Q(i[n], this, !0);
                  else this._siblings = Q(this.target, this, !0);
                }
                return (
                  R.prototype._enabled.call(this, t, e),
                  !(!this._notifyPluginsOfEnabled || !this._firstPT) &&
                    O._onPluginEvent(t ? "_onEnable" : "_onDisable", this)
                );
              }),
              (O.to = function(t, e, n) {
                return new O(t, e, n);
              }),
              (O.from = function(t, e, n) {
                return (
                  (n.runBackwards = !0),
                  (n.immediateRender = 0 != n.immediateRender),
                  new O(t, e, n)
                );
              }),
              (O.fromTo = function(t, e, n, i) {
                return (
                  (i.startAt = n),
                  (i.immediateRender =
                    0 != i.immediateRender && 0 != n.immediateRender),
                  new O(t, e, i)
                );
              }),
              (O.delayedCall = function(t, e, n, i, r) {
                return new O(e, 0, {
                  delay: t,
                  onComplete: e,
                  onCompleteParams: n,
                  callbackScope: i,
                  onReverseComplete: e,
                  onReverseCompleteParams: n,
                  immediateRender: !1,
                  lazy: !1,
                  useFrames: r,
                  overwrite: 0
                });
              }),
              (O.set = function(t, e) {
                return new O(t, 0, e);
              }),
              (O.getTweensOf = function(t, e) {
                if (null == t) return [];
                var n, i, r, a;
                if (
                  ((t = "string" != typeof t ? t : O.selector(t) || t),
                  (g(t) || I(t)) && "number" != typeof t[0])
                ) {
                  for (n = t.length, i = []; --n > -1; )
                    i = i.concat(O.getTweensOf(t[n], e));
                  for (n = i.length; --n > -1; )
                    for (a = i[n], r = n; --r > -1; )
                      a === i[r] && i.splice(n, 1);
                } else if (t._gsTweenID)
                  for (n = (i = Q(t).concat()).length; --n > -1; )
                    (i[n]._gc || (e && !i[n].isActive())) && i.splice(n, 1);
                return i || [];
              }),
              (O.killTweensOf = O.killDelayedCallsTo = function(t, e, n) {
                "object" == typeof e && ((n = e), (e = !1));
                for (var i = O.getTweensOf(t, e), r = i.length; --r > -1; )
                  i[r]._kill(n, t);
              });
            var nt = x(
              "plugins.TweenPlugin",
              function(t, e) {
                (this._overwriteProps = (t || "").split(",")),
                  (this._propName = this._overwriteProps[0]),
                  (this._priority = e || 0),
                  (this._super = nt.prototype);
              },
              !0
            );
            if (
              ((s = nt.prototype),
              (nt.version = "1.19.0"),
              (nt.API = 2),
              (s._firstPT = null),
              (s._addTween = G),
              (s.setRatio = k),
              (s._kill = function(t) {
                var e,
                  n = this._overwriteProps,
                  i = this._firstPT;
                if (null != t[this._propName]) this._overwriteProps = [];
                else
                  for (e = n.length; --e > -1; )
                    null != t[n[e]] && n.splice(e, 1);
                for (; i; )
                  null != t[i.n] &&
                    (i._next && (i._next._prev = i._prev),
                    i._prev
                      ? ((i._prev._next = i._next), (i._prev = null))
                      : this._firstPT === i && (this._firstPT = i._next)),
                    (i = i._next);
                return !1;
              }),
              (s._mod = s._roundProps = function(t) {
                for (var e, n = this._firstPT; n; )
                  (e =
                    t[this._propName] ||
                    (null != n.n &&
                      t[n.n.split(this._propName + "_").join("")])) &&
                    "function" == typeof e &&
                    (2 === n.f ? (n.t._applyPT.m = e) : (n.m = e)),
                    (n = n._next);
              }),
              (O._onPluginEvent = function(t, e) {
                var n,
                  i,
                  r,
                  a,
                  o,
                  s = e._firstPT;
                if ("_onInitAllProps" === t) {
                  for (; s; ) {
                    for (o = s._next, i = r; i && i.pr > s.pr; ) i = i._next;
                    (s._prev = i ? i._prev : a) ? (s._prev._next = s) : (r = s),
                      (s._next = i) ? (i._prev = s) : (a = s),
                      (s = o);
                  }
                  s = e._firstPT = r;
                }
                for (; s; )
                  s.pg && "function" == typeof s.t[t] && s.t[t]() && (n = !0),
                    (s = s._next);
                return n;
              }),
              (nt.activate = function(t) {
                for (var e = t.length; --e > -1; )
                  t[e].API === nt.API && (H[new t[e]()._propName] = t[e]);
                return !0;
              }),
              (y.plugin = function(t) {
                if (!(t && t.propName && t.init && t.API))
                  throw "illegal plugin definition.";
                var e,
                  n = t.propName,
                  i = t.priority || 0,
                  r = t.overwriteProps,
                  a = {
                    init: "_onInitTween",
                    set: "setRatio",
                    kill: "_kill",
                    round: "_mod",
                    mod: "_mod",
                    initAll: "_onInitAllProps"
                  },
                  o = x(
                    "plugins." +
                      n.charAt(0).toUpperCase() +
                      n.substr(1) +
                      "Plugin",
                    function() {
                      nt.call(this, n, i), (this._overwriteProps = r || []);
                    },
                    !0 === t.global
                  ),
                  s = (o.prototype = new nt(n));
                for (e in ((s.constructor = o), (o.API = t.API), a))
                  "function" == typeof t[e] && (s[a[e]] = t[e]);
                return (o.version = t.version), nt.activate([o]), o;
              }),
              (a = t._gsQueue))
            ) {
              for (o = 0; o < a.length; o++) a[o]();
              for (s in v)
                v[s].func ||
                  t.console.log("GSAP encountered missing dependency: " + s);
            }
            return (c = !1), O;
          })(r),
          o = r.GreenSockGlobals,
          s = o.com.greensock,
          l = s.core.SimpleTimeline,
          c = s.core.Animation,
          h = o.Ease,
          u = (o.Linear, o.Power1, o.Power2, o.Power3, o.Power4, o.TweenPlugin);
        s.events.EventDispatcher;
      }.call(this, n(49)(t), n(34)));
    },
    function(t, e, n) {
      "use strict";
      var i = n(2);
      /*!
 * VERSION: 2.0.2
 * DATE: 2018-08-27
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2018, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 *
 * @author: Jack Doyle, jack@greensock.com
 **/ i.e._gsDefine(
        "TweenMax",
        ["core.Animation", "core.SimpleTimeline", "TweenLite"],
        function() {
          var t = function(t) {
              var e,
                n = [],
                i = t.length;
              for (e = 0; e !== i; n.push(t[e++]));
              return n;
            },
            e = function(t, e, n) {
              var i,
                r,
                a = t.cycle;
              for (i in a)
                (r = a[i]),
                  (t[i] =
                    "function" == typeof r ? r(n, e[n]) : r[n % r.length]);
              delete t.cycle;
            },
            n = function(t, e, r) {
              i.f.call(this, t, e, r),
                (this._cycle = 0),
                (this._yoyo = !0 === this.vars.yoyo || !!this.vars.yoyoEase),
                (this._repeat = this.vars.repeat || 0),
                (this._repeatDelay = this.vars.repeatDelay || 0),
                this._repeat && this._uncache(!0),
                (this.render = n.prototype.render);
            },
            r = i.f._internals,
            a = r.isSelector,
            o = r.isArray,
            s = (n.prototype = i.f.to({}, 0.1, {})),
            l = [];
          (n.version = "2.0.2"),
            (s.constructor = n),
            (s.kill()._gc = !1),
            (n.killTweensOf = n.killDelayedCallsTo = i.f.killTweensOf),
            (n.getTweensOf = i.f.getTweensOf),
            (n.lagSmoothing = i.f.lagSmoothing),
            (n.ticker = i.f.ticker),
            (n.render = i.f.render),
            (s.invalidate = function() {
              return (
                (this._yoyo = !0 === this.vars.yoyo || !!this.vars.yoyoEase),
                (this._repeat = this.vars.repeat || 0),
                (this._repeatDelay = this.vars.repeatDelay || 0),
                (this._yoyoEase = null),
                this._uncache(!0),
                i.f.prototype.invalidate.call(this)
              );
            }),
            (s.updateTo = function(t, e) {
              var n,
                r = this.ratio,
                a = this.vars.immediateRender || t.immediateRender;
              for (n in (e &&
                this._startTime < this._timeline._time &&
                ((this._startTime = this._timeline._time),
                this._uncache(!1),
                this._gc
                  ? this._enabled(!0, !1)
                  : this._timeline.insert(this, this._startTime - this._delay)),
              t))
                this.vars[n] = t[n];
              if (this._initted || a)
                if (e) (this._initted = !1), a && this.render(0, !0, !0);
                else if (
                  (this._gc && this._enabled(!0, !1),
                  this._notifyPluginsOfEnabled &&
                    this._firstPT &&
                    i.f._onPluginEvent("_onDisable", this),
                  this._time / this._duration > 0.998)
                ) {
                  var o = this._totalTime;
                  this.render(0, !0, !1),
                    (this._initted = !1),
                    this.render(o, !0, !1);
                } else if (
                  ((this._initted = !1), this._init(), this._time > 0 || a)
                )
                  for (var s, l = 1 / (1 - r), c = this._firstPT; c; )
                    (s = c.s + c.c), (c.c *= l), (c.s = s - c.c), (c = c._next);
              return this;
            }),
            (s.render = function(t, e, n) {
              this._initted ||
                (0 === this._duration && this.vars.repeat && this.invalidate());
              var a,
                o,
                s,
                l,
                c,
                h,
                u,
                d,
                f,
                p = this._dirty ? this.totalDuration() : this._totalDuration,
                m = this._time,
                g = this._totalTime,
                v = this._cycle,
                _ = this._duration,
                y = this._rawPrevTime;
              if (
                (t >= p - 1e-7 && t >= 0
                  ? ((this._totalTime = p),
                    (this._cycle = this._repeat),
                    this._yoyo && 0 != (1 & this._cycle)
                      ? ((this._time = 0),
                        (this.ratio = this._ease._calcEnd
                          ? this._ease.getRatio(0)
                          : 0))
                      : ((this._time = _),
                        (this.ratio = this._ease._calcEnd
                          ? this._ease.getRatio(1)
                          : 1)),
                    this._reversed ||
                      ((a = !0),
                      (o = "onComplete"),
                      (n = n || this._timeline.autoRemoveChildren)),
                    0 === _ &&
                      (this._initted || !this.vars.lazy || n) &&
                      (this._startTime === this._timeline._duration && (t = 0),
                      (y < 0 ||
                        (t <= 0 && t >= -1e-7) ||
                        (1e-10 === y && "isPause" !== this.data)) &&
                        y !== t &&
                        ((n = !0), y > 1e-10 && (o = "onReverseComplete")),
                      (this._rawPrevTime = d = !e || t || y === t ? t : 1e-10)))
                  : t < 1e-7
                    ? ((this._totalTime = this._time = this._cycle = 0),
                      (this.ratio = this._ease._calcEnd
                        ? this._ease.getRatio(0)
                        : 0),
                      (0 !== g || (0 === _ && y > 0)) &&
                        ((o = "onReverseComplete"), (a = this._reversed)),
                      t < 0 &&
                        ((this._active = !1),
                        0 === _ &&
                          (this._initted || !this.vars.lazy || n) &&
                          (y >= 0 && (n = !0),
                          (this._rawPrevTime = d =
                            !e || t || y === t ? t : 1e-10))),
                      this._initted || (n = !0))
                    : ((this._totalTime = this._time = t),
                      0 !== this._repeat &&
                        ((l = _ + this._repeatDelay),
                        (this._cycle = (this._totalTime / l) >> 0),
                        0 !== this._cycle &&
                          this._cycle === this._totalTime / l &&
                          g <= t &&
                          this._cycle--,
                        (this._time = this._totalTime - this._cycle * l),
                        this._yoyo &&
                          0 != (1 & this._cycle) &&
                          ((this._time = _ - this._time),
                          (f = this._yoyoEase || this.vars.yoyoEase) &&
                            (this._yoyoEase ||
                              (!0 !== f || this._initted
                                ? (this._yoyoEase = f =
                                    !0 === f
                                      ? this._ease
                                      : f instanceof i.b ? f : i.b.map[f])
                                : ((f = this.vars.ease),
                                  (this._yoyoEase = f = f
                                    ? f instanceof i.b
                                      ? f
                                      : "function" == typeof f
                                        ? new i.b(f, this.vars.easeParams)
                                        : i.b.map[f] || i.f.defaultEase
                                    : i.f.defaultEase))),
                            (this.ratio = f
                              ? 1 - f.getRatio((_ - this._time) / _)
                              : 0))),
                        this._time > _
                          ? (this._time = _)
                          : this._time < 0 && (this._time = 0)),
                      this._easeType && !f
                        ? ((c = this._time / _),
                          (1 === (h = this._easeType) ||
                            (3 === h && c >= 0.5)) &&
                            (c = 1 - c),
                          3 === h && (c *= 2),
                          1 === (u = this._easePower)
                            ? (c *= c)
                            : 2 === u
                              ? (c *= c * c)
                              : 3 === u
                                ? (c *= c * c * c)
                                : 4 === u && (c *= c * c * c * c),
                          1 === h
                            ? (this.ratio = 1 - c)
                            : 2 === h
                              ? (this.ratio = c)
                              : this._time / _ < 0.5
                                ? (this.ratio = c / 2)
                                : (this.ratio = 1 - c / 2))
                        : f ||
                          (this.ratio = this._ease.getRatio(this._time / _))),
                m !== this._time || n || v !== this._cycle)
              ) {
                if (!this._initted) {
                  if ((this._init(), !this._initted || this._gc)) return;
                  if (
                    !n &&
                    this._firstPT &&
                    ((!1 !== this.vars.lazy && this._duration) ||
                      (this.vars.lazy && !this._duration))
                  )
                    return (
                      (this._time = m),
                      (this._totalTime = g),
                      (this._rawPrevTime = y),
                      (this._cycle = v),
                      r.lazyTweens.push(this),
                      void (this._lazy = [t, e])
                    );
                  !this._time || a || f
                    ? a &&
                      this._ease._calcEnd &&
                      !f &&
                      (this.ratio = this._ease.getRatio(
                        0 === this._time ? 0 : 1
                      ))
                    : (this.ratio = this._ease.getRatio(this._time / _));
                }
                for (
                  !1 !== this._lazy && (this._lazy = !1),
                    this._active ||
                      (!this._paused &&
                        this._time !== m &&
                        t >= 0 &&
                        (this._active = !0)),
                    0 === g &&
                      (2 === this._initted && t > 0 && this._init(),
                      this._startAt &&
                        (t >= 0
                          ? this._startAt.render(t, !0, n)
                          : o || (o = "_dummyGS")),
                      this.vars.onStart &&
                        ((0 === this._totalTime && 0 !== _) ||
                          e ||
                          this._callback("onStart"))),
                    s = this._firstPT;
                  s;

                )
                  s.f
                    ? s.t[s.p](s.c * this.ratio + s.s)
                    : (s.t[s.p] = s.c * this.ratio + s.s),
                    (s = s._next);
                this._onUpdate &&
                  (t < 0 &&
                    this._startAt &&
                    this._startTime &&
                    this._startAt.render(t, !0, n),
                  e ||
                    ((this._totalTime !== g || o) &&
                      this._callback("onUpdate"))),
                  this._cycle !== v &&
                    (e ||
                      this._gc ||
                      (this.vars.onRepeat && this._callback("onRepeat"))),
                  o &&
                    ((this._gc && !n) ||
                      (t < 0 &&
                        this._startAt &&
                        !this._onUpdate &&
                        this._startTime &&
                        this._startAt.render(t, !0, n),
                      a &&
                        (this._timeline.autoRemoveChildren &&
                          this._enabled(!1, !1),
                        (this._active = !1)),
                      !e && this.vars[o] && this._callback(o),
                      0 === _ &&
                        1e-10 === this._rawPrevTime &&
                        1e-10 !== d &&
                        (this._rawPrevTime = 0)));
              } else
                g !== this._totalTime &&
                  this._onUpdate &&
                  (e || this._callback("onUpdate"));
            }),
            (n.to = function(t, e, i) {
              return new n(t, e, i);
            }),
            (n.from = function(t, e, i) {
              return (
                (i.runBackwards = !0),
                (i.immediateRender = 0 != i.immediateRender),
                new n(t, e, i)
              );
            }),
            (n.fromTo = function(t, e, i, r) {
              return (
                (r.startAt = i),
                (r.immediateRender =
                  0 != r.immediateRender && 0 != i.immediateRender),
                new n(t, e, r)
              );
            }),
            (n.staggerTo = n.allTo = function(r, s, c, h, u, d, f) {
              h = h || 0;
              var p,
                m,
                g,
                v,
                _ = 0,
                y = [],
                x = function() {
                  c.onComplete &&
                    c.onComplete.apply(c.onCompleteScope || this, arguments),
                    u.apply(f || c.callbackScope || this, d || l);
                },
                b = c.cycle,
                w = c.startAt && c.startAt.cycle;
              for (
                o(r) ||
                  ("string" == typeof r && (r = i.f.selector(r) || r),
                  a(r) && (r = t(r))),
                  r = r || [],
                  h < 0 && ((r = t(r)).reverse(), (h *= -1)),
                  p = r.length - 1,
                  g = 0;
                g <= p;
                g++
              ) {
                for (v in ((m = {}), c)) m[v] = c[v];
                if (
                  (b &&
                    (e(m, r, g),
                    null != m.duration &&
                      ((s = m.duration), delete m.duration)),
                  w)
                ) {
                  for (v in ((w = m.startAt = {}), c.startAt))
                    w[v] = c.startAt[v];
                  e(m.startAt, r, g);
                }
                (m.delay = _ + (m.delay || 0)),
                  g === p && u && (m.onComplete = x),
                  (y[g] = new n(r[g], s, m)),
                  (_ += h);
              }
              return y;
            }),
            (n.staggerFrom = n.allFrom = function(t, e, i, r, a, o, s) {
              return (
                (i.runBackwards = !0),
                (i.immediateRender = 0 != i.immediateRender),
                n.staggerTo(t, e, i, r, a, o, s)
              );
            }),
            (n.staggerFromTo = n.allFromTo = function(t, e, i, r, a, o, s, l) {
              return (
                (r.startAt = i),
                (r.immediateRender =
                  0 != r.immediateRender && 0 != i.immediateRender),
                n.staggerTo(t, e, r, a, o, s, l)
              );
            }),
            (n.delayedCall = function(t, e, i, r, a) {
              return new n(e, 0, {
                delay: t,
                onComplete: e,
                onCompleteParams: i,
                callbackScope: r,
                onReverseComplete: e,
                onReverseCompleteParams: i,
                immediateRender: !1,
                useFrames: a,
                overwrite: 0
              });
            }),
            (n.set = function(t, e) {
              return new n(t, 0, e);
            }),
            (n.isTweening = function(t) {
              return i.f.getTweensOf(t, !0).length > 0;
            });
          var c = function(t, e) {
              for (var n = [], r = 0, a = t._first; a; )
                a instanceof i.f
                  ? (n[r++] = a)
                  : (e && (n[r++] = a), (r = (n = n.concat(c(a, e))).length)),
                  (a = a._next);
              return n;
            },
            h = (n.getAllTweens = function(t) {
              return c(i.a._rootTimeline, t).concat(
                c(i.a._rootFramesTimeline, t)
              );
            });
          (n.killAll = function(t, e, n, r) {
            null == e && (e = !0), null == n && (n = !0);
            var a,
              o,
              s,
              l = h(0 != r),
              c = l.length,
              u = e && n && r;
            for (s = 0; s < c; s++)
              (o = l[s]),
                (u ||
                  o instanceof i.c ||
                  ((a = o.target === o.vars.onComplete) && n) ||
                  (e && !a)) &&
                  (t
                    ? o.totalTime(o._reversed ? 0 : o.totalDuration())
                    : o._enabled(!1, !1));
          }),
            (n.killChildTweensOf = function(e, s) {
              if (null != e) {
                var l,
                  c,
                  h,
                  u,
                  d,
                  f = r.tweenLookup;
                if (
                  ("string" == typeof e && (e = i.f.selector(e) || e),
                  a(e) && (e = t(e)),
                  o(e))
                )
                  for (u = e.length; --u > -1; ) n.killChildTweensOf(e[u], s);
                else {
                  for (h in ((l = []), f))
                    for (c = f[h].target.parentNode; c; )
                      c === e && (l = l.concat(f[h].tweens)),
                        (c = c.parentNode);
                  for (d = l.length, u = 0; u < d; u++)
                    s && l[u].totalTime(l[u].totalDuration()),
                      l[u]._enabled(!1, !1);
                }
              }
            });
          var u = function(t, e, n, r) {
            (e = !1 !== e), (n = !1 !== n);
            for (
              var a, o, s = h((r = !1 !== r)), l = e && n && r, c = s.length;
              --c > -1;

            )
              (o = s[c]),
                (l ||
                  o instanceof i.c ||
                  ((a = o.target === o.vars.onComplete) && n) ||
                  (e && !a)) &&
                  o.paused(t);
          };
          return (
            (n.pauseAll = function(t, e, n) {
              u(!0, t, e, n);
            }),
            (n.resumeAll = function(t, e, n) {
              u(!1, t, e, n);
            }),
            (n.globalTimeScale = function(t) {
              var e = i.a._rootTimeline,
                n = i.f.ticker.time;
              return arguments.length
                ? ((t = t || 1e-10),
                  (e._startTime = n - (n - e._startTime) * e._timeScale / t),
                  (e = i.a._rootFramesTimeline),
                  (n = i.f.ticker.frame),
                  (e._startTime = n - (n - e._startTime) * e._timeScale / t),
                  (e._timeScale = i.a._rootTimeline._timeScale = t),
                  t)
                : e._timeScale;
            }),
            (s.progress = function(t, e) {
              return arguments.length
                ? this.totalTime(
                    this.duration() *
                      (this._yoyo && 0 != (1 & this._cycle) ? 1 - t : t) +
                      this._cycle * (this._duration + this._repeatDelay),
                    e
                  )
                : this._time / this.duration();
            }),
            (s.totalProgress = function(t, e) {
              return arguments.length
                ? this.totalTime(this.totalDuration() * t, e)
                : this._totalTime / this.totalDuration();
            }),
            (s.time = function(t, e) {
              return arguments.length
                ? (this._dirty && this.totalDuration(),
                  t > this._duration && (t = this._duration),
                  this._yoyo && 0 != (1 & this._cycle)
                    ? (t =
                        this._duration -
                        t +
                        this._cycle * (this._duration + this._repeatDelay))
                    : 0 !== this._repeat &&
                      (t += this._cycle * (this._duration + this._repeatDelay)),
                  this.totalTime(t, e))
                : this._time;
            }),
            (s.duration = function(t) {
              return arguments.length
                ? i.a.prototype.duration.call(this, t)
                : this._duration;
            }),
            (s.totalDuration = function(t) {
              return arguments.length
                ? -1 === this._repeat
                  ? this
                  : this.duration(
                      (t - this._repeat * this._repeatDelay) /
                        (this._repeat + 1)
                    )
                : (this._dirty &&
                    ((this._totalDuration =
                      -1 === this._repeat
                        ? 999999999999
                        : this._duration * (this._repeat + 1) +
                          this._repeatDelay * this._repeat),
                    (this._dirty = !1)),
                  this._totalDuration);
            }),
            (s.repeat = function(t) {
              return arguments.length
                ? ((this._repeat = t), this._uncache(!0))
                : this._repeat;
            }),
            (s.repeatDelay = function(t) {
              return arguments.length
                ? ((this._repeatDelay = t), this._uncache(!0))
                : this._repeatDelay;
            }),
            (s.yoyo = function(t) {
              return arguments.length ? ((this._yoyo = t), this) : this._yoyo;
            }),
            n
          );
        },
        !0
      );
      var r = i.g.TweenMax;
      /*!
 * VERSION: 2.0.2
 * DATE: 2018-08-27
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2018, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 *
 * @author: Jack Doyle, jack@greensock.com
 */
      i.e._gsDefine(
        "plugins.CSSPlugin",
        ["plugins.TweenPlugin", "TweenLite"],
        function() {
          var t,
            e,
            n,
            r,
            a = function() {
              i.d.call(this, "css"),
                (this._overwriteProps.length = 0),
                (this.setRatio = a.prototype.setRatio);
            },
            o = i.e._gsDefine.globals,
            s = {},
            l = (a.prototype = new i.d("css"));
          (l.constructor = a),
            (a.version = "2.0.2"),
            (a.API = 2),
            (a.defaultTransformPerspective = 0),
            (a.defaultSkewType = "compensated"),
            (a.defaultSmoothOrigin = !0),
            (l = "px"),
            (a.suffixMap = {
              top: l,
              right: l,
              bottom: l,
              left: l,
              width: l,
              height: l,
              fontSize: l,
              padding: l,
              margin: l,
              perspective: l,
              lineHeight: ""
            });
          var c,
            h,
            u,
            d,
            f,
            p,
            m,
            g,
            v = /(?:\-|\.|\b)(\d|\.|e\-)+/g,
            _ = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,
            y = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,
            x = /(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g,
            b = /(?:\d|\-|\+|=|#|\.)*/g,
            w = /opacity *= *([^)]*)/i,
            T = /opacity:([^;]*)/i,
            M = /alpha\(opacity *=.+?\)/i,
            E = /^(rgb|hsl)/,
            S = /([A-Z])/g,
            L = /-([a-z])/gi,
            P = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,
            A = function(t, e) {
              return e.toUpperCase();
            },
            R = /(?:Left|Right|Width)/i,
            C = /(M11|M12|M21|M22)=[\d\-\.e]+/gi,
            D = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,
            O = /,(?=[^\)]*(?:\(|$))/gi,
            I = /[\s,\(]/i,
            N = Math.PI / 180,
            U = 180 / Math.PI,
            F = {},
            z = { style: {} },
            k = i.e.document || {
              createElement: function() {
                return z;
              }
            },
            B = function(t, e) {
              return k.createElementNS
                ? k.createElementNS(e || "http://www.w3.org/1999/xhtml", t)
                : k.createElement(t);
            },
            G = B("div"),
            V = B("img"),
            H = (a._internals = { _specialProps: s }),
            W = (i.e.navigator || {}).userAgent || "",
            X = (function() {
              var t = W.indexOf("Android"),
                e = B("a");
              return (
                (u =
                  -1 !== W.indexOf("Safari") &&
                  -1 === W.indexOf("Chrome") &&
                  (-1 === t || parseFloat(W.substr(t + 8, 2)) > 3)),
                (f =
                  u && parseFloat(W.substr(W.indexOf("Version/") + 8, 2)) < 6),
                (d = -1 !== W.indexOf("Firefox")),
                (/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(W) ||
                  /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(W)) &&
                  (p = parseFloat(RegExp.$1)),
                !!e &&
                  ((e.style.cssText = "top:1px;opacity:.55;"),
                  /^0.55/.test(e.style.opacity))
              );
            })(),
            j = function(t) {
              return w.test(
                "string" == typeof t
                  ? t
                  : (t.currentStyle ? t.currentStyle.filter : t.style.filter) ||
                    ""
              )
                ? parseFloat(RegExp.$1) / 100
                : 1;
            },
            Y = function(t) {
              i.e.console && console.log(t);
            },
            q = "",
            Z = "",
            J = function(t, e) {
              var n,
                i,
                r = (e = e || G).style;
              if (void 0 !== r[t]) return t;
              for (
                t = t.charAt(0).toUpperCase() + t.substr(1),
                  n = ["O", "Moz", "ms", "Ms", "Webkit"],
                  i = 5;
                --i > -1 && void 0 === r[n[i] + t];

              );
              return i >= 0
                ? ((q = "-" + (Z = 3 === i ? "ms" : n[i]).toLowerCase() + "-"),
                  Z + t)
                : null;
            },
            K = ("undefined" != typeof window
              ? window
              : k.defaultView || { getComputedStyle: function() {} }
            ).getComputedStyle,
            Q = (a.getStyle = function(t, e, n, i, r) {
              var a;
              return X || "opacity" !== e
                ? (!i && t.style[e]
                    ? (a = t.style[e])
                    : (n = n || K(t))
                      ? (a =
                          n[e] ||
                          n.getPropertyValue(e) ||
                          n.getPropertyValue(e.replace(S, "-$1").toLowerCase()))
                      : t.currentStyle && (a = t.currentStyle[e]),
                  null == r ||
                  (a && "none" !== a && "auto" !== a && "auto auto" !== a)
                    ? a
                    : r)
                : j(t);
            }),
            $ = (H.convertToPixels = function(t, e, n, r, o) {
              if ("px" === r || (!r && "lineHeight" !== e)) return n;
              if ("auto" === r || !n) return 0;
              var s,
                l,
                c,
                h = R.test(e),
                u = t,
                d = G.style,
                f = n < 0,
                p = 1 === n;
              if ((f && (n = -n), p && (n *= 100), "lineHeight" !== e || r))
                if ("%" === r && -1 !== e.indexOf("border"))
                  s = n / 100 * (h ? t.clientWidth : t.clientHeight);
                else {
                  if (
                    ((d.cssText =
                      "border:0 solid red;position:" +
                      Q(t, "position") +
                      ";line-height:0;"),
                    "%" !== r &&
                      u.appendChild &&
                      "v" !== r.charAt(0) &&
                      "rem" !== r)
                  )
                    d[h ? "borderLeftWidth" : "borderTopWidth"] = n + r;
                  else {
                    if (
                      ((u = t.parentNode || k.body),
                      -1 !== Q(u, "display").indexOf("flex") &&
                        (d.position = "absolute"),
                      (l = u._gsCache),
                      (c = i.f.ticker.frame),
                      l && h && l.time === c)
                    )
                      return l.width * n / 100;
                    d[h ? "width" : "height"] = n + r;
                  }
                  u.appendChild(G),
                    (s = parseFloat(G[h ? "offsetWidth" : "offsetHeight"])),
                    u.removeChild(G),
                    h &&
                      "%" === r &&
                      !1 !== a.cacheWidths &&
                      (((l = u._gsCache = u._gsCache || {}).time = c),
                      (l.width = s / n * 100)),
                    0 !== s || o || (s = $(t, e, n, r, !0));
                }
              else
                (l = K(t).lineHeight),
                  (t.style.lineHeight = n),
                  (s = parseFloat(K(t).lineHeight)),
                  (t.style.lineHeight = l);
              return p && (s /= 100), f ? -s : s;
            }),
            tt = (H.calculateOffset = function(t, e, n) {
              if ("absolute" !== Q(t, "position", n)) return 0;
              var i = "left" === e ? "Left" : "Top",
                r = Q(t, "margin" + i, n);
              return (
                t["offset" + i] -
                ($(t, e, parseFloat(r), r.replace(b, "")) || 0)
              );
            }),
            et = function(t, e) {
              var n,
                i,
                r,
                a = {};
              if ((e = e || K(t, null)))
                if ((n = e.length))
                  for (; --n > -1; )
                    (-1 !== (r = e[n]).indexOf("-transform") && Dt !== r) ||
                      (a[r.replace(L, A)] = e.getPropertyValue(r));
                else
                  for (n in e)
                    (-1 !== n.indexOf("Transform") && Ct !== n) ||
                      (a[n] = e[n]);
              else if ((e = t.currentStyle || t.style))
                for (n in e)
                  "string" == typeof n &&
                    void 0 === a[n] &&
                    (a[n.replace(L, A)] = e[n]);
              return (
                X || (a.opacity = j(t)),
                (i = Xt(t, e, !1)),
                (a.rotation = i.rotation),
                (a.skewX = i.skewX),
                (a.scaleX = i.scaleX),
                (a.scaleY = i.scaleY),
                (a.x = i.x),
                (a.y = i.y),
                It &&
                  ((a.z = i.z),
                  (a.rotationX = i.rotationX),
                  (a.rotationY = i.rotationY),
                  (a.scaleZ = i.scaleZ)),
                a.filters && delete a.filters,
                a
              );
            },
            nt = function(t, e, n, i, r) {
              var a,
                o,
                s,
                l = {},
                c = t.style;
              for (o in n)
                "cssText" !== o &&
                  "length" !== o &&
                  isNaN(o) &&
                  (e[o] !== (a = n[o]) || (r && r[o])) &&
                  -1 === o.indexOf("Origin") &&
                  (("number" != typeof a && "string" != typeof a) ||
                    ((l[o] =
                      "auto" !== a || ("left" !== o && "top" !== o)
                        ? ("" !== a && "auto" !== a && "none" !== a) ||
                          "string" != typeof e[o] ||
                          "" === e[o].replace(x, "")
                          ? a
                          : 0
                        : tt(t, o)),
                    void 0 !== c[o] && (s = new vt(c, o, c[o], s))));
              if (i) for (o in i) "className" !== o && (l[o] = i[o]);
              return { difs: l, firstMPT: s };
            },
            it = { width: ["Left", "Right"], height: ["Top", "Bottom"] },
            rt = ["marginLeft", "marginRight", "marginTop", "marginBottom"],
            at = function(t, e, n) {
              if ("svg" === (t.nodeName + "").toLowerCase())
                return (n || K(t))[e] || 0;
              if (t.getCTM && Vt(t)) return t.getBBox()[e] || 0;
              var i = parseFloat(
                  "width" === e ? t.offsetWidth : t.offsetHeight
                ),
                r = it[e],
                a = r.length;
              for (n = n || K(t, null); --a > -1; )
                (i -= parseFloat(Q(t, "padding" + r[a], n, !0)) || 0),
                  (i -=
                    parseFloat(Q(t, "border" + r[a] + "Width", n, !0)) || 0);
              return i;
            },
            ot = function(t, e) {
              if ("contain" === t || "auto" === t || "auto auto" === t)
                return t + " ";
              (null != t && "" !== t) || (t = "0 0");
              var n,
                i = t.split(" "),
                r =
                  -1 !== t.indexOf("left")
                    ? "0%"
                    : -1 !== t.indexOf("right") ? "100%" : i[0],
                a =
                  -1 !== t.indexOf("top")
                    ? "0%"
                    : -1 !== t.indexOf("bottom") ? "100%" : i[1];
              if (i.length > 3 && !e) {
                for (
                  i = t
                    .split(", ")
                    .join(",")
                    .split(","),
                    t = [],
                    n = 0;
                  n < i.length;
                  n++
                )
                  t.push(ot(i[n]));
                return t.join(",");
              }
              return (
                null == a
                  ? (a = "center" === r ? "50%" : "0")
                  : "center" === a && (a = "50%"),
                ("center" === r ||
                  (isNaN(parseFloat(r)) && -1 === (r + "").indexOf("="))) &&
                  (r = "50%"),
                (t = r + " " + a + (i.length > 2 ? " " + i[2] : "")),
                e &&
                  ((e.oxp = -1 !== r.indexOf("%")),
                  (e.oyp = -1 !== a.indexOf("%")),
                  (e.oxr = "=" === r.charAt(1)),
                  (e.oyr = "=" === a.charAt(1)),
                  (e.ox = parseFloat(r.replace(x, ""))),
                  (e.oy = parseFloat(a.replace(x, ""))),
                  (e.v = t)),
                e || t
              );
            },
            st = function(t, e) {
              return (
                "function" == typeof t && (t = t(g, m)),
                "string" == typeof t && "=" === t.charAt(1)
                  ? parseInt(t.charAt(0) + "1", 10) * parseFloat(t.substr(2))
                  : parseFloat(t) - parseFloat(e) || 0
              );
            },
            lt = function(t, e) {
              "function" == typeof t && (t = t(g, m));
              var n = "string" == typeof t && "=" === t.charAt(1);
              return (
                "string" == typeof t &&
                  "v" === t.charAt(t.length - 2) &&
                  (t =
                    (n ? t.substr(0, 2) : 0) +
                    window[
                      "inner" + ("vh" === t.substr(-2) ? "Height" : "Width")
                    ] *
                      (parseFloat(n ? t.substr(2) : t) / 100)),
                null == t
                  ? e
                  : n
                    ? parseInt(t.charAt(0) + "1", 10) *
                        parseFloat(t.substr(2)) +
                      e
                    : parseFloat(t) || 0
              );
            },
            ct = function(t, e, n, i) {
              var r, a, o, s;
              return (
                "function" == typeof t && (t = t(g, m)),
                null == t
                  ? (o = e)
                  : "number" == typeof t
                    ? (o = t)
                    : (360,
                      (r = t.split("_")),
                      (a =
                        ((s = "=" === t.charAt(1))
                          ? parseInt(t.charAt(0) + "1", 10) *
                            parseFloat(r[0].substr(2))
                          : parseFloat(r[0])) *
                          (-1 === t.indexOf("rad") ? 1 : U) -
                        (s ? 0 : e)),
                      r.length &&
                        (i && (i[n] = e + a),
                        -1 !== t.indexOf("short") &&
                          (a %= 360) !== a % 180 &&
                          (a = a < 0 ? a + 360 : a - 360),
                        -1 !== t.indexOf("_cw") && a < 0
                          ? (a =
                              (a + 3599999999640) % 360 - 360 * ((a / 360) | 0))
                          : -1 !== t.indexOf("ccw") &&
                            a > 0 &&
                            (a =
                              (a - 3599999999640) % 360 -
                              360 * ((a / 360) | 0))),
                      (o = e + a)),
                o < 1e-6 && o > -1e-6 && (o = 0),
                o
              );
            },
            ht = {
              aqua: [0, 255, 255],
              lime: [0, 255, 0],
              silver: [192, 192, 192],
              black: [0, 0, 0],
              maroon: [128, 0, 0],
              teal: [0, 128, 128],
              blue: [0, 0, 255],
              navy: [0, 0, 128],
              white: [255, 255, 255],
              fuchsia: [255, 0, 255],
              olive: [128, 128, 0],
              yellow: [255, 255, 0],
              orange: [255, 165, 0],
              gray: [128, 128, 128],
              purple: [128, 0, 128],
              green: [0, 128, 0],
              red: [255, 0, 0],
              pink: [255, 192, 203],
              cyan: [0, 255, 255],
              transparent: [255, 255, 255, 0]
            },
            ut = function(t, e, n) {
              return (
                (255 *
                  (6 * (t = t < 0 ? t + 1 : t > 1 ? t - 1 : t) < 1
                    ? e + (n - e) * t * 6
                    : t < 0.5
                      ? n
                      : 3 * t < 2 ? e + (n - e) * (2 / 3 - t) * 6 : e) +
                  0.5) |
                0
              );
            },
            dt = (a.parseColor = function(t, e) {
              var n, i, r, a, o, s, l, c, h, u, d;
              if (t)
                if ("number" == typeof t)
                  n = [t >> 16, (t >> 8) & 255, 255 & t];
                else {
                  if (
                    ("," === t.charAt(t.length - 1) &&
                      (t = t.substr(0, t.length - 1)),
                    ht[t])
                  )
                    n = ht[t];
                  else if ("#" === t.charAt(0))
                    4 === t.length &&
                      ((i = t.charAt(1)),
                      (r = t.charAt(2)),
                      (a = t.charAt(3)),
                      (t = "#" + i + i + r + r + a + a)),
                      (n = [
                        (t = parseInt(t.substr(1), 16)) >> 16,
                        (t >> 8) & 255,
                        255 & t
                      ]);
                  else if ("hsl" === t.substr(0, 3))
                    if (((n = d = t.match(v)), e)) {
                      if (-1 !== t.indexOf("=")) return t.match(_);
                    } else
                      (o = (Number(n[0]) % 360) / 360),
                        (s = Number(n[1]) / 100),
                        (i =
                          2 * (l = Number(n[2]) / 100) -
                          (r = l <= 0.5 ? l * (s + 1) : l + s - l * s)),
                        n.length > 3 && (n[3] = Number(n[3])),
                        (n[0] = ut(o + 1 / 3, i, r)),
                        (n[1] = ut(o, i, r)),
                        (n[2] = ut(o - 1 / 3, i, r));
                  else n = t.match(v) || ht.transparent;
                  (n[0] = Number(n[0])),
                    (n[1] = Number(n[1])),
                    (n[2] = Number(n[2])),
                    n.length > 3 && (n[3] = Number(n[3]));
                }
              else n = ht.black;
              return (
                e &&
                  !d &&
                  ((i = n[0] / 255),
                  (r = n[1] / 255),
                  (a = n[2] / 255),
                  (l = ((c = Math.max(i, r, a)) + (h = Math.min(i, r, a))) / 2),
                  c === h
                    ? (o = s = 0)
                    : ((u = c - h),
                      (s = l > 0.5 ? u / (2 - c - h) : u / (c + h)),
                      (o =
                        c === i
                          ? (r - a) / u + (r < a ? 6 : 0)
                          : c === r ? (a - i) / u + 2 : (i - r) / u + 4),
                      (o *= 60)),
                  (n[0] = (o + 0.5) | 0),
                  (n[1] = (100 * s + 0.5) | 0),
                  (n[2] = (100 * l + 0.5) | 0)),
                n
              );
            }),
            ft = function(t, e) {
              var n,
                i,
                r,
                a = t.match(pt) || [],
                o = 0,
                s = "";
              if (!a.length) return t;
              for (n = 0; n < a.length; n++)
                (i = a[n]),
                  (o +=
                    (r = t.substr(o, t.indexOf(i, o) - o)).length + i.length),
                  3 === (i = dt(i, e)).length && i.push(1),
                  (s +=
                    r +
                    (e
                      ? "hsla(" + i[0] + "," + i[1] + "%," + i[2] + "%," + i[3]
                      : "rgba(" + i.join(",")) +
                    ")");
              return s + t.substr(o);
            },
            pt =
              "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";
          for (l in ht) pt += "|" + l + "\\b";
          (pt = new RegExp(pt + ")", "gi")),
            (a.colorStringFilter = function(t) {
              var e,
                n = t[0] + " " + t[1];
              pt.test(n) &&
                ((e = -1 !== n.indexOf("hsl(") || -1 !== n.indexOf("hsla(")),
                (t[0] = ft(t[0], e)),
                (t[1] = ft(t[1], e))),
                (pt.lastIndex = 0);
            }),
            i.f.defaultStringFilter ||
              (i.f.defaultStringFilter = a.colorStringFilter);
          var mt = function(t, e, n, i) {
              if (null == t)
                return function(t) {
                  return t;
                };
              var r,
                a = e ? (t.match(pt) || [""])[0] : "",
                o =
                  t
                    .split(a)
                    .join("")
                    .match(y) || [],
                s = t.substr(0, t.indexOf(o[0])),
                l = ")" === t.charAt(t.length - 1) ? ")" : "",
                c = -1 !== t.indexOf(" ") ? " " : ",",
                h = o.length,
                u = h > 0 ? o[0].replace(v, "") : "";
              return h
                ? (r = e
                    ? function(t) {
                        var e, d, f, p;
                        if ("number" == typeof t) t += u;
                        else if (i && O.test(t)) {
                          for (
                            p = t.replace(O, "|").split("|"), f = 0;
                            f < p.length;
                            f++
                          )
                            p[f] = r(p[f]);
                          return p.join(",");
                        }
                        if (
                          ((e = (t.match(pt) || [a])[0]),
                          (f = (d =
                            t
                              .split(e)
                              .join("")
                              .match(y) || []).length),
                          h > f--)
                        )
                          for (; ++f < h; )
                            d[f] = n ? d[((f - 1) / 2) | 0] : o[f];
                        return (
                          s +
                          d.join(c) +
                          c +
                          e +
                          l +
                          (-1 !== t.indexOf("inset") ? " inset" : "")
                        );
                      }
                    : function(t) {
                        var e, a, d;
                        if ("number" == typeof t) t += u;
                        else if (i && O.test(t)) {
                          for (
                            a = t.replace(O, "|").split("|"), d = 0;
                            d < a.length;
                            d++
                          )
                            a[d] = r(a[d]);
                          return a.join(",");
                        }
                        if (((d = (e = t.match(y) || []).length), h > d--))
                          for (; ++d < h; )
                            e[d] = n ? e[((d - 1) / 2) | 0] : o[d];
                        return s + e.join(c) + l;
                      })
                : function(t) {
                    return t;
                  };
            },
            gt = function(t) {
              return (
                (t = t.split(",")),
                function(e, n, i, r, a, o, s) {
                  var l,
                    c = (n + "").split(" ");
                  for (s = {}, l = 0; l < 4; l++)
                    s[t[l]] = c[l] = c[l] || c[((l - 1) / 2) >> 0];
                  return r.parse(e, s, a, o);
                }
              );
            },
            vt = ((H._setPluginRatio = function(t) {
              this.plugin.setRatio(t);
              for (
                var e, n, i, r, a, o = this.data, s = o.proxy, l = o.firstMPT;
                l;

              )
                (e = s[l.v]),
                  l.r ? (e = l.r(e)) : e < 1e-6 && e > -1e-6 && (e = 0),
                  (l.t[l.p] = e),
                  (l = l._next);
              if (
                (o.autoRotate &&
                  (o.autoRotate.rotation = o.mod
                    ? o.mod.call(this._tween, s.rotation, this.t, this._tween)
                    : s.rotation),
                1 === t || 0 === t)
              )
                for (l = o.firstMPT, a = 1 === t ? "e" : "b"; l; ) {
                  if ((n = l.t).type) {
                    if (1 === n.type) {
                      for (r = n.xs0 + n.s + n.xs1, i = 1; i < n.l; i++)
                        r += n["xn" + i] + n["xs" + (i + 1)];
                      n[a] = r;
                    }
                  } else n[a] = n.s + n.xs0;
                  l = l._next;
                }
            }),
            function(t, e, n, i, r) {
              (this.t = t),
                (this.p = e),
                (this.v = n),
                (this.r = r),
                i && ((i._prev = this), (this._next = i));
            }),
            _t = ((H._parseToProxy = function(t, e, n, i, r, a) {
              var o,
                s,
                l,
                c,
                h,
                u = i,
                d = {},
                f = {},
                p = n._transform,
                m = F;
              for (
                n._transform = null,
                  F = e,
                  i = h = n.parse(t, e, i, r),
                  F = m,
                  a &&
                    ((n._transform = p),
                    u && ((u._prev = null), u._prev && (u._prev._next = null)));
                i && i !== u;

              ) {
                if (
                  i.type <= 1 &&
                  ((f[(s = i.p)] = i.s + i.c),
                  (d[s] = i.s),
                  a || ((c = new vt(i, "s", s, c, i.r)), (i.c = 0)),
                  1 === i.type)
                )
                  for (o = i.l; --o > 0; )
                    (l = "xn" + o),
                      (f[(s = i.p + "_" + l)] = i.data[l]),
                      (d[s] = i[l]),
                      a || (c = new vt(i, l, s, c, i.rxp[l]));
                i = i._next;
              }
              return { proxy: d, end: f, firstMPT: c, pt: h };
            }),
            (H.CSSPropTween = function(e, n, i, a, o, s, l, c, h, u, d) {
              (this.t = e),
                (this.p = n),
                (this.s = i),
                (this.c = a),
                (this.n = l || n),
                e instanceof _t || r.push(this.n),
                (this.r = c ? ("function" == typeof c ? c : Math.round) : c),
                (this.type = s || 0),
                h && ((this.pr = h), (t = !0)),
                (this.b = void 0 === u ? i : u),
                (this.e = void 0 === d ? i + a : d),
                o && ((this._next = o), (o._prev = this));
            })),
            yt = function(t, e, n, i, r, a) {
              var o = new _t(t, e, n, i - n, r, -1, a);
              return (o.b = n), (o.e = o.xs0 = i), o;
            },
            xt = (a.parseComplex = function(t, e, n, i, r, o, s, l, h, u) {
              (n = n || o || ""),
                "function" == typeof i && (i = i(g, m)),
                (s = new _t(t, e, 0, 0, s, u ? 2 : 1, null, !1, l, n, i)),
                (i += ""),
                r &&
                  pt.test(i + n) &&
                  ((i = [n, i]),
                  a.colorStringFilter(i),
                  (n = i[0]),
                  (i = i[1]));
              var d,
                f,
                p,
                y,
                x,
                b,
                w,
                T,
                M,
                E,
                S,
                L,
                P,
                A = n
                  .split(", ")
                  .join(",")
                  .split(" "),
                R = i
                  .split(", ")
                  .join(",")
                  .split(" "),
                C = A.length,
                D = !1 !== c;
              for (
                (-1 === i.indexOf(",") && -1 === n.indexOf(",")) ||
                  (-1 !== (i + n).indexOf("rgb") ||
                  -1 !== (i + n).indexOf("hsl")
                    ? ((A = A.join(" ")
                        .replace(O, ", ")
                        .split(" ")),
                      (R = R.join(" ")
                        .replace(O, ", ")
                        .split(" ")))
                    : ((A = A.join(" ")
                        .split(",")
                        .join(", ")
                        .split(" ")),
                      (R = R.join(" ")
                        .split(",")
                        .join(", ")
                        .split(" "))),
                  (C = A.length)),
                  C !== R.length && (C = (A = (o || "").split(" ")).length),
                  s.plugin = h,
                  s.setRatio = u,
                  pt.lastIndex = 0,
                  d = 0;
                d < C;
                d++
              )
                if (
                  ((y = A[d]), (x = R[d] + ""), (T = parseFloat(y)) || 0 === T)
                )
                  s.appendXtra(
                    "",
                    T,
                    st(x, T),
                    x.replace(_, ""),
                    !(!D || -1 === x.indexOf("px")) && Math.round,
                    !0
                  );
                else if (r && pt.test(y))
                  (L = ")" + ((L = x.indexOf(")") + 1) ? x.substr(L) : "")),
                    (P = -1 !== x.indexOf("hsl") && X),
                    (E = x),
                    (y = dt(y, P)),
                    (x = dt(x, P)),
                    (M = y.length + x.length > 6) && !X && 0 === x[3]
                      ? ((s["xs" + s.l] += s.l
                          ? " transparent"
                          : "transparent"),
                        (s.e = s.e.split(R[d]).join("transparent")))
                      : (X || (M = !1),
                        P
                          ? s
                              .appendXtra(
                                E.substr(0, E.indexOf("hsl")) +
                                  (M ? "hsla(" : "hsl("),
                                y[0],
                                st(x[0], y[0]),
                                ",",
                                !1,
                                !0
                              )
                              .appendXtra("", y[1], st(x[1], y[1]), "%,", !1)
                              .appendXtra(
                                "",
                                y[2],
                                st(x[2], y[2]),
                                M ? "%," : "%" + L,
                                !1
                              )
                          : s
                              .appendXtra(
                                E.substr(0, E.indexOf("rgb")) +
                                  (M ? "rgba(" : "rgb("),
                                y[0],
                                x[0] - y[0],
                                ",",
                                Math.round,
                                !0
                              )
                              .appendXtra(
                                "",
                                y[1],
                                x[1] - y[1],
                                ",",
                                Math.round
                              )
                              .appendXtra(
                                "",
                                y[2],
                                x[2] - y[2],
                                M ? "," : L,
                                Math.round
                              ),
                        M &&
                          ((y = y.length < 4 ? 1 : y[3]),
                          s.appendXtra(
                            "",
                            y,
                            (x.length < 4 ? 1 : x[3]) - y,
                            L,
                            !1
                          ))),
                    (pt.lastIndex = 0);
                else if ((b = y.match(v))) {
                  if (!(w = x.match(_)) || w.length !== b.length) return s;
                  for (p = 0, f = 0; f < b.length; f++)
                    (S = b[f]),
                      (E = y.indexOf(S, p)),
                      s.appendXtra(
                        y.substr(p, E - p),
                        Number(S),
                        st(w[f], S),
                        "",
                        !(!D || "px" !== y.substr(E + S.length, 2)) &&
                          Math.round,
                        0 === f
                      ),
                      (p = E + S.length);
                  s["xs" + s.l] += y.substr(p);
                } else s["xs" + s.l] += s.l || s["xs" + s.l] ? " " + x : x;
              if (-1 !== i.indexOf("=") && s.data) {
                for (L = s.xs0 + s.data.s, d = 1; d < s.l; d++)
                  L += s["xs" + d] + s.data["xn" + d];
                s.e = L + s["xs" + d];
              }
              return s.l || ((s.type = -1), (s.xs0 = s.e)), s.xfirst || s;
            }),
            bt = 9;
          for ((l = _t.prototype).l = l.pr = 0; --bt > 0; )
            (l["xn" + bt] = 0), (l["xs" + bt] = "");
          (l.xs0 = ""),
            (l._next = l._prev = l.xfirst = l.data = l.plugin = l.setRatio = l.rxp = null),
            (l.appendXtra = function(t, e, n, i, r, a) {
              var o = this,
                s = o.l;
              return (
                (o["xs" + s] += a && (s || o["xs" + s]) ? " " + t : t || ""),
                n || 0 === s || o.plugin
                  ? (o.l++,
                    (o.type = o.setRatio ? 2 : 1),
                    (o["xs" + o.l] = i || ""),
                    s > 0
                      ? ((o.data["xn" + s] = e + n),
                        (o.rxp["xn" + s] = r),
                        (o["xn" + s] = e),
                        o.plugin ||
                          ((o.xfirst = new _t(
                            o,
                            "xn" + s,
                            e,
                            n,
                            o.xfirst || o,
                            0,
                            o.n,
                            r,
                            o.pr
                          )),
                          (o.xfirst.xs0 = 0)),
                        o)
                      : ((o.data = { s: e + n }),
                        (o.rxp = {}),
                        (o.s = e),
                        (o.c = n),
                        (o.r = r),
                        o))
                  : ((o["xs" + s] += e + (i || "")), o)
              );
            });
          var wt = function(t, e) {
              (e = e || {}),
                (this.p = (e.prefix && J(t)) || t),
                (s[t] = s[this.p] = this),
                (this.format =
                  e.formatter ||
                  mt(e.defaultValue, e.color, e.collapsible, e.multi)),
                e.parser && (this.parse = e.parser),
                (this.clrs = e.color),
                (this.multi = e.multi),
                (this.keyword = e.keyword),
                (this.dflt = e.defaultValue),
                (this.pr = e.priority || 0);
            },
            Tt = (H._registerComplexSpecialProp = function(t, e, n) {
              "object" != typeof e && (e = { parser: n });
              var i,
                r = t.split(","),
                a = e.defaultValue;
              for (n = n || [a], i = 0; i < r.length; i++)
                (e.prefix = 0 === i && e.prefix),
                  (e.defaultValue = n[i] || a),
                  new wt(r[i], e);
            }),
            Mt = (H._registerPluginProp = function(t) {
              if (!s[t]) {
                var e = t.charAt(0).toUpperCase() + t.substr(1) + "Plugin";
                Tt(t, {
                  parser: function(t, n, i, r, a, l, c) {
                    var h = o.com.greensock.plugins[e];
                    return h
                      ? (h._cssRegister(), s[i].parse(t, n, i, r, a, l, c))
                      : (Y("Error: " + e + " js file not loaded."), a);
                  }
                });
              }
            });
          ((l = wt.prototype).parseComplex = function(t, e, n, i, r, a) {
            var o,
              s,
              l,
              c,
              h,
              u,
              d = this.keyword;
            if (
              (this.multi &&
                (O.test(n) || O.test(e)
                  ? ((s = e.replace(O, "|").split("|")),
                    (l = n.replace(O, "|").split("|")))
                  : d && ((s = [e]), (l = [n]))),
              l)
            ) {
              for (
                c = l.length > s.length ? l.length : s.length, o = 0;
                o < c;
                o++
              )
                (e = s[o] = s[o] || this.dflt),
                  (n = l[o] = l[o] || this.dflt),
                  d &&
                    (h = e.indexOf(d)) !== (u = n.indexOf(d)) &&
                    (-1 === u
                      ? (s[o] = s[o].split(d).join(""))
                      : -1 === h && (s[o] += " " + d));
              (e = s.join(", ")), (n = l.join(", "));
            }
            return xt(t, this.p, e, n, this.clrs, this.dflt, i, this.pr, r, a);
          }),
            (l.parse = function(t, e, i, r, a, o, s) {
              return this.parseComplex(
                t.style,
                this.format(Q(t, this.p, n, !1, this.dflt)),
                this.format(e),
                a,
                o
              );
            }),
            (a.registerSpecialProp = function(t, e, n) {
              Tt(t, {
                parser: function(t, i, r, a, o, s, l) {
                  var c = new _t(t, r, 0, 0, o, 2, r, !1, n);
                  return (c.plugin = s), (c.setRatio = e(t, i, a._tween, r)), c;
                },
                priority: n
              });
            }),
            (a.useSVGTransformAttr = !0);
          var Et,
            St,
            Lt,
            Pt,
            At,
            Rt = "scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(
              ","
            ),
            Ct = J("transform"),
            Dt = q + "transform",
            Ot = J("transformOrigin"),
            It = null !== J("perspective"),
            Nt = (H.Transform = function() {
              (this.perspective =
                parseFloat(a.defaultTransformPerspective) || 0),
                (this.force3D =
                  !(!1 === a.defaultForce3D || !It) &&
                  (a.defaultForce3D || "auto"));
            }),
            Ut = i.e.SVGElement,
            Ft = function(t, e, n) {
              var i,
                r = k.createElementNS("http://www.w3.org/2000/svg", t),
                a = /([a-z])([A-Z])/g;
              for (i in n)
                r.setAttributeNS(
                  null,
                  i.replace(a, "$1-$2").toLowerCase(),
                  n[i]
                );
              return e.appendChild(r), r;
            },
            zt = k.documentElement || {},
            kt = ((At = p || (/Android/i.test(W) && !i.e.chrome)),
            k.createElementNS &&
              !At &&
              ((St = Ft("svg", zt)),
              (Pt = (Lt = Ft("rect", St, {
                width: 100,
                height: 50,
                x: 100
              })).getBoundingClientRect().width),
              (Lt.style[Ot] = "50% 50%"),
              (Lt.style[Ct] = "scaleX(0.5)"),
              (At = Pt === Lt.getBoundingClientRect().width && !(d && It)),
              zt.removeChild(St)),
            At),
            Bt = function(t, e, n, i, r, o) {
              var s,
                l,
                c,
                h,
                u,
                d,
                f,
                p,
                m,
                g,
                v,
                _,
                y,
                x,
                b = t._gsTransform,
                w = Wt(t, !0);
              b && ((y = b.xOrigin), (x = b.yOrigin)),
                (!i || (s = i.split(" ")).length < 2) &&
                  (0 === (f = t.getBBox()).x &&
                    0 === f.y &&
                    f.width + f.height === 0 &&
                    (f = {
                      x:
                        parseFloat(
                          t.hasAttribute("x")
                            ? t.getAttribute("x")
                            : t.hasAttribute("cx") ? t.getAttribute("cx") : 0
                        ) || 0,
                      y:
                        parseFloat(
                          t.hasAttribute("y")
                            ? t.getAttribute("y")
                            : t.hasAttribute("cy") ? t.getAttribute("cy") : 0
                        ) || 0,
                      width: 0,
                      height: 0
                    }),
                  (s = [
                    (-1 !== (e = ot(e).split(" "))[0].indexOf("%")
                      ? parseFloat(e[0]) / 100 * f.width
                      : parseFloat(e[0])) + f.x,
                    (-1 !== e[1].indexOf("%")
                      ? parseFloat(e[1]) / 100 * f.height
                      : parseFloat(e[1])) + f.y
                  ])),
                (n.xOrigin = h = parseFloat(s[0])),
                (n.yOrigin = u = parseFloat(s[1])),
                i &&
                  w !== Ht &&
                  ((d = w[0]),
                  (f = w[1]),
                  (p = w[2]),
                  (m = w[3]),
                  (g = w[4]),
                  (v = w[5]),
                  (_ = d * m - f * p) &&
                    ((l = h * (m / _) + u * (-p / _) + (p * v - m * g) / _),
                    (c = h * (-f / _) + u * (d / _) - (d * v - f * g) / _),
                    (h = n.xOrigin = s[0] = l),
                    (u = n.yOrigin = s[1] = c))),
                b &&
                  (o &&
                    ((n.xOffset = b.xOffset), (n.yOffset = b.yOffset), (b = n)),
                  r || (!1 !== r && !1 !== a.defaultSmoothOrigin)
                    ? ((l = h - y),
                      (c = u - x),
                      (b.xOffset += l * w[0] + c * w[2] - l),
                      (b.yOffset += l * w[1] + c * w[3] - c))
                    : (b.xOffset = b.yOffset = 0)),
                o || t.setAttribute("data-svg-origin", s.join(" "));
            },
            Gt = function(t) {
              var e,
                n = B(
                  "svg",
                  (this.ownerSVGElement &&
                    this.ownerSVGElement.getAttribute("xmlns")) ||
                    "http://www.w3.org/2000/svg"
                ),
                i = this.parentNode,
                r = this.nextSibling,
                a = this.style.cssText;
              if (
                (zt.appendChild(n),
                n.appendChild(this),
                (this.style.display = "block"),
                t)
              )
                try {
                  (e = this.getBBox()),
                    (this._originalGetBBox = this.getBBox),
                    (this.getBBox = Gt);
                } catch (t) {}
              else this._originalGetBBox && (e = this._originalGetBBox());
              return (
                r ? i.insertBefore(this, r) : i.appendChild(this),
                zt.removeChild(n),
                (this.style.cssText = a),
                e
              );
            },
            Vt = function(t) {
              return !(
                !Ut ||
                !t.getCTM ||
                (t.parentNode && !t.ownerSVGElement) ||
                !(function(t) {
                  try {
                    return t.getBBox();
                  } catch (e) {
                    return Gt.call(t, !0);
                  }
                })(t)
              );
            },
            Ht = [1, 0, 0, 1, 0, 0],
            Wt = function(t, e) {
              var n,
                i,
                r,
                a,
                o,
                s,
                l = t._gsTransform || new Nt(),
                c = t.style;
              if (
                (Ct
                  ? (i = Q(t, Dt, null, !0))
                  : t.currentStyle &&
                    (i =
                      (i = t.currentStyle.filter.match(C)) && 4 === i.length
                        ? [
                            i[0].substr(4),
                            Number(i[2].substr(4)),
                            Number(i[1].substr(4)),
                            i[3].substr(4),
                            l.x || 0,
                            l.y || 0
                          ].join(",")
                        : ""),
                (n = !i || "none" === i || "matrix(1, 0, 0, 1, 0, 0)" === i),
                !Ct ||
                  (!(s = !K(t) || "none" === K(t).display) && t.parentNode) ||
                  (s && ((a = c.display), (c.display = "block")),
                  t.parentNode || ((o = 1), zt.appendChild(t)),
                  (n =
                    !(i = Q(t, Dt, null, !0)) ||
                    "none" === i ||
                    "matrix(1, 0, 0, 1, 0, 0)" === i),
                  a ? (c.display = a) : s && Zt(c, "display"),
                  o && zt.removeChild(t)),
                (l.svg || (t.getCTM && Vt(t))) &&
                  (n &&
                    -1 !== (c[Ct] + "").indexOf("matrix") &&
                    ((i = c[Ct]), (n = 0)),
                  (r = t.getAttribute("transform")),
                  n &&
                    r &&
                    ((i =
                      "matrix(" +
                      (r = t.transform.baseVal.consolidate().matrix).a +
                      "," +
                      r.b +
                      "," +
                      r.c +
                      "," +
                      r.d +
                      "," +
                      r.e +
                      "," +
                      r.f +
                      ")"),
                    (n = 0))),
                n)
              )
                return Ht;
              for (r = (i || "").match(v) || [], bt = r.length; --bt > -1; )
                (a = Number(r[bt])),
                  (r[bt] = (o = a - (a |= 0))
                    ? ((1e5 * o + (o < 0 ? -0.5 : 0.5)) | 0) / 1e5 + a
                    : a);
              return e && r.length > 6
                ? [r[0], r[1], r[4], r[5], r[12], r[13]]
                : r;
            },
            Xt = (H.getTransform = function(t, e, n, r) {
              if (t._gsTransform && n && !r) return t._gsTransform;
              var o,
                s,
                l,
                c,
                h,
                u,
                d = (n && t._gsTransform) || new Nt(),
                f = d.scaleX < 0,
                p =
                  (It &&
                    (parseFloat(Q(t, Ot, e, !1, "0 0 0").split(" ")[2]) ||
                      d.zOrigin)) ||
                  0,
                m = parseFloat(a.defaultTransformPerspective) || 0;
              if (
                ((d.svg = !(!t.getCTM || !Vt(t))),
                d.svg &&
                  (Bt(
                    t,
                    Q(t, Ot, e, !1, "50% 50%") + "",
                    d,
                    t.getAttribute("data-svg-origin")
                  ),
                  (Et = a.useSVGTransformAttr || kt)),
                (o = Wt(t)) !== Ht)
              ) {
                if (16 === o.length) {
                  var g,
                    v,
                    _,
                    y,
                    x,
                    b = o[0],
                    w = o[1],
                    T = o[2],
                    M = o[3],
                    E = o[4],
                    S = o[5],
                    L = o[6],
                    P = o[7],
                    A = o[8],
                    R = o[9],
                    C = o[10],
                    D = o[12],
                    O = o[13],
                    I = o[14],
                    N = o[11],
                    F = Math.atan2(L, C);
                  d.zOrigin &&
                    ((D = A * (I = -d.zOrigin) - o[12]),
                    (O = R * I - o[13]),
                    (I = C * I + d.zOrigin - o[14])),
                    (d.rotationX = F * U),
                    F &&
                      ((g = E * (y = Math.cos(-F)) + A * (x = Math.sin(-F))),
                      (v = S * y + R * x),
                      (_ = L * y + C * x),
                      (A = E * -x + A * y),
                      (R = S * -x + R * y),
                      (C = L * -x + C * y),
                      (N = P * -x + N * y),
                      (E = g),
                      (S = v),
                      (L = _)),
                    (F = Math.atan2(-T, C)),
                    (d.rotationY = F * U),
                    F &&
                      ((v = w * (y = Math.cos(-F)) - R * (x = Math.sin(-F))),
                      (_ = T * y - C * x),
                      (R = w * x + R * y),
                      (C = T * x + C * y),
                      (N = M * x + N * y),
                      (b = g = b * y - A * x),
                      (w = v),
                      (T = _)),
                    (F = Math.atan2(w, b)),
                    (d.rotation = F * U),
                    F &&
                      ((g = b * (y = Math.cos(F)) + w * (x = Math.sin(F))),
                      (v = E * y + S * x),
                      (_ = A * y + R * x),
                      (w = w * y - b * x),
                      (S = S * y - E * x),
                      (R = R * y - A * x),
                      (b = g),
                      (E = v),
                      (A = _)),
                    d.rotationX &&
                      Math.abs(d.rotationX) + Math.abs(d.rotation) > 359.9 &&
                      ((d.rotationX = d.rotation = 0),
                      (d.rotationY = 180 - d.rotationY)),
                    (F = Math.atan2(E, S)),
                    (d.scaleX =
                      ((1e5 * Math.sqrt(b * b + w * w + T * T) + 0.5) | 0) /
                      1e5),
                    (d.scaleY =
                      ((1e5 * Math.sqrt(S * S + L * L) + 0.5) | 0) / 1e5),
                    (d.scaleZ =
                      ((1e5 * Math.sqrt(A * A + R * R + C * C) + 0.5) | 0) /
                      1e5),
                    (b /= d.scaleX),
                    (E /= d.scaleY),
                    (w /= d.scaleX),
                    (S /= d.scaleY),
                    Math.abs(F) > 2e-5
                      ? ((d.skewX = F * U),
                        (E = 0),
                        "simple" !== d.skewType &&
                          (d.scaleY *= 1 / Math.cos(F)))
                      : (d.skewX = 0),
                    (d.perspective = N ? 1 / (N < 0 ? -N : N) : 0),
                    (d.x = D),
                    (d.y = O),
                    (d.z = I),
                    d.svg &&
                      ((d.x -= d.xOrigin - (d.xOrigin * b - d.yOrigin * E)),
                      (d.y -= d.yOrigin - (d.yOrigin * w - d.xOrigin * S)));
                } else if (
                  !It ||
                  r ||
                  !o.length ||
                  d.x !== o[4] ||
                  d.y !== o[5] ||
                  (!d.rotationX && !d.rotationY)
                ) {
                  var z = o.length >= 6,
                    k = z ? o[0] : 1,
                    B = o[1] || 0,
                    G = o[2] || 0,
                    V = z ? o[3] : 1;
                  (d.x = o[4] || 0),
                    (d.y = o[5] || 0),
                    (l = Math.sqrt(k * k + B * B)),
                    (c = Math.sqrt(V * V + G * G)),
                    (h = k || B ? Math.atan2(B, k) * U : d.rotation || 0),
                    (u = G || V ? Math.atan2(G, V) * U + h : d.skewX || 0),
                    (d.scaleX = l),
                    (d.scaleY = c),
                    (d.rotation = h),
                    (d.skewX = u),
                    It &&
                      ((d.rotationX = d.rotationY = d.z = 0),
                      (d.perspective = m),
                      (d.scaleZ = 1)),
                    d.svg &&
                      ((d.x -= d.xOrigin - (d.xOrigin * k + d.yOrigin * G)),
                      (d.y -= d.yOrigin - (d.xOrigin * B + d.yOrigin * V)));
                }
                for (s in (Math.abs(d.skewX) > 90 &&
                  Math.abs(d.skewX) < 270 &&
                  (f
                    ? ((d.scaleX *= -1),
                      (d.skewX += d.rotation <= 0 ? 180 : -180),
                      (d.rotation += d.rotation <= 0 ? 180 : -180))
                    : ((d.scaleY *= -1),
                      (d.skewX += d.skewX <= 0 ? 180 : -180))),
                (d.zOrigin = p),
                d))
                  d[s] < 2e-5 && d[s] > -2e-5 && (d[s] = 0);
              }
              return (
                n &&
                  ((t._gsTransform = d),
                  d.svg &&
                    (Et && t.style[Ct]
                      ? i.f.delayedCall(0.001, function() {
                          Zt(t.style, Ct);
                        })
                      : !Et &&
                        t.getAttribute("transform") &&
                        i.f.delayedCall(0.001, function() {
                          t.removeAttribute("transform");
                        }))),
                d
              );
            }),
            jt = function(t) {
              var e,
                n,
                i = this.data,
                r = -i.rotation * N,
                a = r + i.skewX * N,
                o = ((Math.cos(r) * i.scaleX * 1e5) | 0) / 1e5,
                s = ((Math.sin(r) * i.scaleX * 1e5) | 0) / 1e5,
                l = ((Math.sin(a) * -i.scaleY * 1e5) | 0) / 1e5,
                c = ((Math.cos(a) * i.scaleY * 1e5) | 0) / 1e5,
                h = this.t.style,
                u = this.t.currentStyle;
              if (u) {
                (n = s), (s = -l), (l = -n), (e = u.filter), (h.filter = "");
                var d,
                  f,
                  m = this.t.offsetWidth,
                  g = this.t.offsetHeight,
                  v = "absolute" !== u.position,
                  _ =
                    "progid:DXImageTransform.Microsoft.Matrix(M11=" +
                    o +
                    ", M12=" +
                    s +
                    ", M21=" +
                    l +
                    ", M22=" +
                    c,
                  y = i.x + m * i.xPercent / 100,
                  x = i.y + g * i.yPercent / 100;
                if (
                  (null != i.ox &&
                    ((y +=
                      (d = (i.oxp ? m * i.ox * 0.01 : i.ox) - m / 2) -
                      (d * o +
                        (f = (i.oyp ? g * i.oy * 0.01 : i.oy) - g / 2) * s)),
                    (x += f - (d * l + f * c))),
                  (_ += v
                    ? ", Dx=" +
                      ((d = m / 2) - (d * o + (f = g / 2) * s) + y) +
                      ", Dy=" +
                      (f - (d * l + f * c) + x) +
                      ")"
                    : ", sizingMethod='auto expand')"),
                  -1 !== e.indexOf("DXImageTransform.Microsoft.Matrix(")
                    ? (h.filter = e.replace(D, _))
                    : (h.filter = _ + " " + e),
                  (0 !== t && 1 !== t) ||
                    (1 === o &&
                      0 === s &&
                      0 === l &&
                      1 === c &&
                      ((v && -1 === _.indexOf("Dx=0, Dy=0")) ||
                        (w.test(e) && 100 !== parseFloat(RegExp.$1)) ||
                        (-1 === e.indexOf(e.indexOf("Alpha")) &&
                          h.removeAttribute("filter")))),
                  !v)
                ) {
                  var T,
                    M,
                    E,
                    S = p < 8 ? 1 : -1;
                  for (
                    d = i.ieOffsetX || 0,
                      f = i.ieOffsetY || 0,
                      i.ieOffsetX = Math.round(
                        (m - ((o < 0 ? -o : o) * m + (s < 0 ? -s : s) * g)) /
                          2 +
                          y
                      ),
                      i.ieOffsetY = Math.round(
                        (g - ((c < 0 ? -c : c) * g + (l < 0 ? -l : l) * m)) /
                          2 +
                          x
                      ),
                      bt = 0;
                    bt < 4;
                    bt++
                  )
                    (E =
                      (n =
                        -1 !== (T = u[(M = rt[bt])]).indexOf("px")
                          ? parseFloat(T)
                          : $(this.t, M, parseFloat(T), T.replace(b, "")) ||
                            0) !== i[M]
                        ? bt < 2 ? -i.ieOffsetX : -i.ieOffsetY
                        : bt < 2 ? d - i.ieOffsetX : f - i.ieOffsetY),
                      (h[M] =
                        (i[M] = Math.round(
                          n - E * (0 === bt || 2 === bt ? 1 : S)
                        )) + "px");
                }
              }
            },
            Yt = (H.set3DTransformRatio = H.setTransformRatio = function(t) {
              var e,
                n,
                i,
                r,
                a,
                o,
                s,
                l,
                c,
                h,
                u,
                f,
                p,
                m,
                g,
                v,
                _,
                y,
                x,
                b,
                w = this.data,
                T = this.t.style,
                M = w.rotation,
                E = w.rotationX,
                S = w.rotationY,
                L = w.scaleX,
                P = w.scaleY,
                A = w.scaleZ,
                R = w.x,
                C = w.y,
                D = w.z,
                O = w.svg,
                I = w.perspective,
                U = w.force3D,
                F = w.skewY,
                z = w.skewX;
              if (
                (F && ((z += F), (M += F)),
                !(
                  (((1 !== t && 0 !== t) ||
                    "auto" !== U ||
                    (this.tween._totalTime !== this.tween._totalDuration &&
                      this.tween._totalTime)) &&
                    U) ||
                  D ||
                  I ||
                  S ||
                  E ||
                  1 !== A
                ) ||
                  (Et && O) ||
                  !It)
              )
                M || z || O
                  ? ((M *= N),
                    (b = z * N),
                    1e5,
                    (n = Math.cos(M) * L),
                    (a = Math.sin(M) * L),
                    (i = Math.sin(M - b) * -P),
                    (o = Math.cos(M - b) * P),
                    b &&
                      "simple" === w.skewType &&
                      ((e = Math.tan(b - F * N)),
                      (i *= e = Math.sqrt(1 + e * e)),
                      (o *= e),
                      F &&
                        ((e = Math.tan(F * N)),
                        (n *= e = Math.sqrt(1 + e * e)),
                        (a *= e))),
                    O &&
                      ((R +=
                        w.xOrigin -
                        (w.xOrigin * n + w.yOrigin * i) +
                        w.xOffset),
                      (C +=
                        w.yOrigin -
                        (w.xOrigin * a + w.yOrigin * o) +
                        w.yOffset),
                      Et &&
                        (w.xPercent || w.yPercent) &&
                        ((g = this.t.getBBox()),
                        (R += 0.01 * w.xPercent * g.width),
                        (C += 0.01 * w.yPercent * g.height)),
                      R < (g = 1e-6) && R > -g && (R = 0),
                      C < g && C > -g && (C = 0)),
                    (x =
                      ((1e5 * n) | 0) / 1e5 +
                      "," +
                      ((1e5 * a) | 0) / 1e5 +
                      "," +
                      ((1e5 * i) | 0) / 1e5 +
                      "," +
                      ((1e5 * o) | 0) / 1e5 +
                      "," +
                      R +
                      "," +
                      C +
                      ")"),
                    O && Et
                      ? this.t.setAttribute("transform", "matrix(" + x)
                      : (T[Ct] =
                          (w.xPercent || w.yPercent
                            ? "translate(" +
                              w.xPercent +
                              "%," +
                              w.yPercent +
                              "%) matrix("
                            : "matrix(") + x))
                  : (T[Ct] =
                      (w.xPercent || w.yPercent
                        ? "translate(" +
                          w.xPercent +
                          "%," +
                          w.yPercent +
                          "%) matrix("
                        : "matrix(") +
                      L +
                      ",0,0," +
                      P +
                      "," +
                      R +
                      "," +
                      C +
                      ")");
              else {
                if (
                  (d &&
                    (L < (g = 1e-4) && L > -g && (L = A = 2e-5),
                    P < g && P > -g && (P = A = 2e-5),
                    !I || w.z || w.rotationX || w.rotationY || (I = 0)),
                  M || z)
                )
                  (M *= N),
                    (v = n = Math.cos(M)),
                    (_ = a = Math.sin(M)),
                    z &&
                      ((M -= z * N),
                      (v = Math.cos(M)),
                      (_ = Math.sin(M)),
                      "simple" === w.skewType &&
                        ((e = Math.tan((z - F) * N)),
                        (v *= e = Math.sqrt(1 + e * e)),
                        (_ *= e),
                        w.skewY &&
                          ((e = Math.tan(F * N)),
                          (n *= e = Math.sqrt(1 + e * e)),
                          (a *= e)))),
                    (i = -_),
                    (o = v);
                else {
                  if (!(S || E || 1 !== A || I || O))
                    return void (T[Ct] =
                      (w.xPercent || w.yPercent
                        ? "translate(" +
                          w.xPercent +
                          "%," +
                          w.yPercent +
                          "%) translate3d("
                        : "translate3d(") +
                      R +
                      "px," +
                      C +
                      "px," +
                      D +
                      "px)" +
                      (1 !== L || 1 !== P
                        ? " scale(" + L + "," + P + ")"
                        : ""));
                  (n = o = 1), (i = a = 0);
                }
                (h = 1),
                  (r = s = l = c = u = f = 0),
                  (p = I ? -1 / I : 0),
                  (m = w.zOrigin),
                  (g = 1e-6),
                  ",",
                  "0",
                  (M = S * N) &&
                    ((v = Math.cos(M)),
                    (l = -(_ = Math.sin(M))),
                    (u = p * -_),
                    (r = n * _),
                    (s = a * _),
                    (h = v),
                    (p *= v),
                    (n *= v),
                    (a *= v)),
                  (M = E * N) &&
                    ((e = i * (v = Math.cos(M)) + r * (_ = Math.sin(M))),
                    (y = o * v + s * _),
                    (c = h * _),
                    (f = p * _),
                    (r = i * -_ + r * v),
                    (s = o * -_ + s * v),
                    (h *= v),
                    (p *= v),
                    (i = e),
                    (o = y)),
                  1 !== A && ((r *= A), (s *= A), (h *= A), (p *= A)),
                  1 !== P && ((i *= P), (o *= P), (c *= P), (f *= P)),
                  1 !== L && ((n *= L), (a *= L), (l *= L), (u *= L)),
                  (m || O) &&
                    (m && ((R += r * -m), (C += s * -m), (D += h * -m + m)),
                    O &&
                      ((R +=
                        w.xOrigin -
                        (w.xOrigin * n + w.yOrigin * i) +
                        w.xOffset),
                      (C +=
                        w.yOrigin -
                        (w.xOrigin * a + w.yOrigin * o) +
                        w.yOffset)),
                    R < g && R > -g && (R = "0"),
                    C < g && C > -g && (C = "0"),
                    D < g && D > -g && (D = 0)),
                  (x =
                    w.xPercent || w.yPercent
                      ? "translate(" +
                        w.xPercent +
                        "%," +
                        w.yPercent +
                        "%) matrix3d("
                      : "matrix3d("),
                  (x +=
                    (n < g && n > -g ? "0" : n) +
                    "," +
                    (a < g && a > -g ? "0" : a) +
                    "," +
                    (l < g && l > -g ? "0" : l)),
                  (x +=
                    "," +
                    (u < g && u > -g ? "0" : u) +
                    "," +
                    (i < g && i > -g ? "0" : i) +
                    "," +
                    (o < g && o > -g ? "0" : o)),
                  E || S || 1 !== A
                    ? ((x +=
                        "," +
                        (c < g && c > -g ? "0" : c) +
                        "," +
                        (f < g && f > -g ? "0" : f) +
                        "," +
                        (r < g && r > -g ? "0" : r)),
                      (x +=
                        "," +
                        (s < g && s > -g ? "0" : s) +
                        "," +
                        (h < g && h > -g ? "0" : h) +
                        "," +
                        (p < g && p > -g ? "0" : p) +
                        ","))
                    : (x += ",0,0,0,0,1,0,"),
                  (x +=
                    R + "," + C + "," + D + "," + (I ? 1 + -D / I : 1) + ")"),
                  (T[Ct] = x);
              }
            });
          ((l =
            Nt.prototype).x = l.y = l.z = l.skewX = l.skewY = l.rotation = l.rotationX = l.rotationY = l.zOrigin = l.xPercent = l.yPercent = l.xOffset = l.yOffset = 0),
            (l.scaleX = l.scaleY = l.scaleZ = 1),
            Tt(
              "transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin",
              {
                parser: function(t, e, i, r, o, s, l) {
                  if (r._lastParsedTransform === l) return o;
                  r._lastParsedTransform = l;
                  var c,
                    h = l.scale && "function" == typeof l.scale ? l.scale : 0;
                  "function" == typeof l[i] && ((c = l[i]), (l[i] = e)),
                    h && (l.scale = h(g, t));
                  var u,
                    d,
                    f,
                    p,
                    v,
                    _,
                    y,
                    x,
                    b,
                    w = t._gsTransform,
                    T = t.style,
                    M = Rt.length,
                    E = l,
                    S = {},
                    L = Xt(t, n, !0, E.parseTransform),
                    P =
                      E.transform &&
                      ("function" == typeof E.transform
                        ? E.transform(g, m)
                        : E.transform);
                  if (
                    ((L.skewType =
                      E.skewType || L.skewType || a.defaultSkewType),
                    (r._transform = L),
                    "rotationZ" in E && (E.rotation = E.rotationZ),
                    P && "string" == typeof P && Ct)
                  )
                    ((d = G.style)[Ct] = P),
                      (d.display = "block"),
                      (d.position = "absolute"),
                      -1 !== P.indexOf("%") &&
                        ((d.width = Q(t, "width")),
                        (d.height = Q(t, "height"))),
                      k.body.appendChild(G),
                      (u = Xt(G, null, !1)),
                      "simple" === L.skewType &&
                        (u.scaleY *= Math.cos(u.skewX * N)),
                      L.svg &&
                        ((_ = L.xOrigin),
                        (y = L.yOrigin),
                        (u.x -= L.xOffset),
                        (u.y -= L.yOffset),
                        (E.transformOrigin || E.svgOrigin) &&
                          ((P = {}),
                          Bt(
                            t,
                            ot(E.transformOrigin),
                            P,
                            E.svgOrigin,
                            E.smoothOrigin,
                            !0
                          ),
                          (_ = P.xOrigin),
                          (y = P.yOrigin),
                          (u.x -= P.xOffset - L.xOffset),
                          (u.y -= P.yOffset - L.yOffset)),
                        (_ || y) &&
                          ((x = Wt(G, !0)),
                          (u.x -= _ - (_ * x[0] + y * x[2])),
                          (u.y -= y - (_ * x[1] + y * x[3])))),
                      k.body.removeChild(G),
                      u.perspective || (u.perspective = L.perspective),
                      null != E.xPercent &&
                        (u.xPercent = lt(E.xPercent, L.xPercent)),
                      null != E.yPercent &&
                        (u.yPercent = lt(E.yPercent, L.yPercent));
                  else if ("object" == typeof E) {
                    if (
                      ((u = {
                        scaleX: lt(
                          null != E.scaleX ? E.scaleX : E.scale,
                          L.scaleX
                        ),
                        scaleY: lt(
                          null != E.scaleY ? E.scaleY : E.scale,
                          L.scaleY
                        ),
                        scaleZ: lt(E.scaleZ, L.scaleZ),
                        x: lt(E.x, L.x),
                        y: lt(E.y, L.y),
                        z: lt(E.z, L.z),
                        xPercent: lt(E.xPercent, L.xPercent),
                        yPercent: lt(E.yPercent, L.yPercent),
                        perspective: lt(E.transformPerspective, L.perspective)
                      }),
                      null != (v = E.directionalRotation))
                    )
                      if ("object" == typeof v) for (d in v) E[d] = v[d];
                      else E.rotation = v;
                    "string" == typeof E.x &&
                      -1 !== E.x.indexOf("%") &&
                      ((u.x = 0), (u.xPercent = lt(E.x, L.xPercent))),
                      "string" == typeof E.y &&
                        -1 !== E.y.indexOf("%") &&
                        ((u.y = 0), (u.yPercent = lt(E.y, L.yPercent))),
                      (u.rotation = ct(
                        "rotation" in E
                          ? E.rotation
                          : "shortRotation" in E
                            ? E.shortRotation + "_short"
                            : L.rotation,
                        L.rotation,
                        "rotation",
                        S
                      )),
                      It &&
                        ((u.rotationX = ct(
                          "rotationX" in E
                            ? E.rotationX
                            : "shortRotationX" in E
                              ? E.shortRotationX + "_short"
                              : L.rotationX || 0,
                          L.rotationX,
                          "rotationX",
                          S
                        )),
                        (u.rotationY = ct(
                          "rotationY" in E
                            ? E.rotationY
                            : "shortRotationY" in E
                              ? E.shortRotationY + "_short"
                              : L.rotationY || 0,
                          L.rotationY,
                          "rotationY",
                          S
                        ))),
                      (u.skewX = ct(E.skewX, L.skewX)),
                      (u.skewY = ct(E.skewY, L.skewY));
                  }
                  for (
                    It &&
                      null != E.force3D &&
                      ((L.force3D = E.force3D), (p = !0)),
                      (f =
                        L.force3D ||
                        L.z ||
                        L.rotationX ||
                        L.rotationY ||
                        u.z ||
                        u.rotationX ||
                        u.rotationY ||
                        u.perspective) ||
                        null == E.scale ||
                        (u.scaleZ = 1);
                    --M > -1;

                  )
                    ((P = u[(b = Rt[M])] - L[b]) > 1e-6 ||
                      P < -1e-6 ||
                      null != E[b] ||
                      null != F[b]) &&
                      ((p = !0),
                      (o = new _t(L, b, L[b], P, o)),
                      b in S && (o.e = S[b]),
                      (o.xs0 = 0),
                      (o.plugin = s),
                      r._overwriteProps.push(o.n));
                  return (
                    (P = E.transformOrigin),
                    L.svg &&
                      (P || E.svgOrigin) &&
                      ((_ = L.xOffset),
                      (y = L.yOffset),
                      Bt(t, ot(P), u, E.svgOrigin, E.smoothOrigin),
                      (o = yt(
                        L,
                        "xOrigin",
                        (w ? L : u).xOrigin,
                        u.xOrigin,
                        o,
                        "transformOrigin"
                      )),
                      (o = yt(
                        L,
                        "yOrigin",
                        (w ? L : u).yOrigin,
                        u.yOrigin,
                        o,
                        "transformOrigin"
                      )),
                      (_ === L.xOffset && y === L.yOffset) ||
                        ((o = yt(
                          L,
                          "xOffset",
                          w ? _ : L.xOffset,
                          L.xOffset,
                          o,
                          "transformOrigin"
                        )),
                        (o = yt(
                          L,
                          "yOffset",
                          w ? y : L.yOffset,
                          L.yOffset,
                          o,
                          "transformOrigin"
                        ))),
                      (P = "0px 0px")),
                    (P || (It && f && L.zOrigin)) &&
                      (Ct
                        ? ((p = !0),
                          (b = Ot),
                          (P = (P || Q(t, b, n, !1, "50% 50%")) + ""),
                          ((o = new _t(
                            T,
                            b,
                            0,
                            0,
                            o,
                            -1,
                            "transformOrigin"
                          )).b =
                            T[b]),
                          (o.plugin = s),
                          It
                            ? ((d = L.zOrigin),
                              (P = P.split(" ")),
                              (L.zOrigin =
                                (P.length > 2 && (0 === d || "0px" !== P[2])
                                  ? parseFloat(P[2])
                                  : d) || 0),
                              (o.xs0 = o.e =
                                P[0] + " " + (P[1] || "50%") + " 0px"),
                              ((o = new _t(
                                L,
                                "zOrigin",
                                0,
                                0,
                                o,
                                -1,
                                o.n
                              )).b = d),
                              (o.xs0 = o.e = L.zOrigin))
                            : (o.xs0 = o.e = P))
                        : ot(P + "", L)),
                    p &&
                      (r._transformType =
                        (L.svg && Et) || (!f && 3 !== this._transformType)
                          ? 2
                          : 3),
                    c && (l[i] = c),
                    h && (l.scale = h),
                    o
                  );
                },
                prefix: !0
              }
            ),
            Tt("boxShadow", {
              defaultValue: "0px 0px 0px 0px #999",
              prefix: !0,
              color: !0,
              multi: !0,
              keyword: "inset"
            }),
            Tt("borderRadius", {
              defaultValue: "0px",
              parser: function(t, i, r, a, o, s) {
                i = this.format(i);
                var l,
                  c,
                  h,
                  u,
                  d,
                  f,
                  p,
                  m,
                  g,
                  v,
                  _,
                  y,
                  x,
                  b,
                  w,
                  T,
                  M = [
                    "borderTopLeftRadius",
                    "borderTopRightRadius",
                    "borderBottomRightRadius",
                    "borderBottomLeftRadius"
                  ],
                  E = t.style;
                for (
                  g = parseFloat(t.offsetWidth),
                    v = parseFloat(t.offsetHeight),
                    l = i.split(" "),
                    c = 0;
                  c < M.length;
                  c++
                )
                  this.p.indexOf("border") && (M[c] = J(M[c])),
                    -1 !== (d = u = Q(t, M[c], n, !1, "0px")).indexOf(" ") &&
                      ((u = d.split(" ")), (d = u[0]), (u = u[1])),
                    (f = h = l[c]),
                    (p = parseFloat(d)),
                    (y = d.substr((p + "").length)),
                    (x = "=" === f.charAt(1))
                      ? ((m = parseInt(f.charAt(0) + "1", 10)),
                        (f = f.substr(2)),
                        (m *= parseFloat(f)),
                        (_ = f.substr((m + "").length - (m < 0 ? 1 : 0)) || ""))
                      : ((m = parseFloat(f)), (_ = f.substr((m + "").length))),
                    "" === _ && (_ = e[r] || y),
                    _ !== y &&
                      ((b = $(t, "borderLeft", p, y)),
                      (w = $(t, "borderTop", p, y)),
                      "%" === _
                        ? ((d = b / g * 100 + "%"), (u = w / v * 100 + "%"))
                        : "em" === _
                          ? ((d = b / (T = $(t, "borderLeft", 1, "em")) + "em"),
                            (u = w / T + "em"))
                          : ((d = b + "px"), (u = w + "px")),
                      x &&
                        ((f = parseFloat(d) + m + _),
                        (h = parseFloat(u) + m + _))),
                    (o = xt(E, M[c], d + " " + u, f + " " + h, !1, "0px", o));
                return o;
              },
              prefix: !0,
              formatter: mt("0px 0px 0px 0px", !1, !0)
            }),
            Tt(
              "borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius",
              {
                defaultValue: "0px",
                parser: function(t, e, i, r, a, o) {
                  return xt(
                    t.style,
                    i,
                    this.format(Q(t, i, n, !1, "0px 0px")),
                    this.format(e),
                    !1,
                    "0px",
                    a
                  );
                },
                prefix: !0,
                formatter: mt("0px 0px", !1, !0)
              }
            ),
            Tt("backgroundPosition", {
              defaultValue: "0 0",
              parser: function(t, e, i, r, a, o) {
                var s,
                  l,
                  c,
                  h,
                  u,
                  d,
                  f = "background-position",
                  m = n || K(t, null),
                  g = this.format(
                    (m
                      ? p
                        ? m.getPropertyValue(f + "-x") +
                          " " +
                          m.getPropertyValue(f + "-y")
                        : m.getPropertyValue(f)
                      : t.currentStyle.backgroundPositionX +
                        " " +
                        t.currentStyle.backgroundPositionY) || "0 0"
                  ),
                  v = this.format(e);
                if (
                  (-1 !== g.indexOf("%")) != (-1 !== v.indexOf("%")) &&
                  v.split(",").length < 2 &&
                  (d = Q(t, "backgroundImage").replace(P, "")) &&
                  "none" !== d
                ) {
                  for (
                    s = g.split(" "),
                      l = v.split(" "),
                      V.setAttribute("src", d),
                      c = 2;
                    --c > -1;

                  )
                    (h = -1 !== (g = s[c]).indexOf("%")) !==
                      (-1 !== l[c].indexOf("%")) &&
                      ((u =
                        0 === c
                          ? t.offsetWidth - V.width
                          : t.offsetHeight - V.height),
                      (s[c] = h
                        ? parseFloat(g) / 100 * u + "px"
                        : parseFloat(g) / u * 100 + "%"));
                  g = s.join(" ");
                }
                return this.parseComplex(t.style, g, v, a, o);
              },
              formatter: ot
            }),
            Tt("backgroundSize", {
              defaultValue: "0 0",
              formatter: function(t) {
                return "co" === (t += "").substr(0, 2)
                  ? t
                  : ot(-1 === t.indexOf(" ") ? t + " " + t : t);
              }
            }),
            Tt("perspective", { defaultValue: "0px", prefix: !0 }),
            Tt("perspectiveOrigin", { defaultValue: "50% 50%", prefix: !0 }),
            Tt("transformStyle", { prefix: !0 }),
            Tt("backfaceVisibility", { prefix: !0 }),
            Tt("userSelect", { prefix: !0 }),
            Tt("margin", {
              parser: gt("marginTop,marginRight,marginBottom,marginLeft")
            }),
            Tt("padding", {
              parser: gt("paddingTop,paddingRight,paddingBottom,paddingLeft")
            }),
            Tt("clip", {
              defaultValue: "rect(0px,0px,0px,0px)",
              parser: function(t, e, i, r, a, o) {
                var s, l, c;
                return (
                  p < 9
                    ? ((l = t.currentStyle),
                      (c = p < 8 ? " " : ","),
                      (s =
                        "rect(" +
                        l.clipTop +
                        c +
                        l.clipRight +
                        c +
                        l.clipBottom +
                        c +
                        l.clipLeft +
                        ")"),
                      (e = this.format(e)
                        .split(",")
                        .join(c)))
                    : ((s = this.format(Q(t, this.p, n, !1, this.dflt))),
                      (e = this.format(e))),
                  this.parseComplex(t.style, s, e, a, o)
                );
              }
            }),
            Tt("textShadow", {
              defaultValue: "0px 0px 0px #999",
              color: !0,
              multi: !0
            }),
            Tt("autoRound,strictUnits", {
              parser: function(t, e, n, i, r) {
                return r;
              }
            }),
            Tt("border", {
              defaultValue: "0px solid #000",
              parser: function(t, e, i, r, a, o) {
                var s = Q(t, "borderTopWidth", n, !1, "0px"),
                  l = this.format(e).split(" "),
                  c = l[0].replace(b, "");
                return (
                  "px" !== c &&
                    (s = parseFloat(s) / $(t, "borderTopWidth", 1, c) + c),
                  this.parseComplex(
                    t.style,
                    this.format(
                      s +
                        " " +
                        Q(t, "borderTopStyle", n, !1, "solid") +
                        " " +
                        Q(t, "borderTopColor", n, !1, "#000")
                    ),
                    l.join(" "),
                    a,
                    o
                  )
                );
              },
              color: !0,
              formatter: function(t) {
                var e = t.split(" ");
                return (
                  e[0] +
                  " " +
                  (e[1] || "solid") +
                  " " +
                  (t.match(pt) || ["#000"])[0]
                );
              }
            }),
            Tt("borderWidth", {
              parser: gt(
                "borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth"
              )
            }),
            Tt("float,cssFloat,styleFloat", {
              parser: function(t, e, n, i, r, a) {
                var o = t.style,
                  s = "cssFloat" in o ? "cssFloat" : "styleFloat";
                return new _t(o, s, 0, 0, r, -1, n, !1, 0, o[s], e);
              }
            });
          var qt = function(t) {
            var e,
              n = this.t,
              i = n.filter || Q(this.data, "filter") || "",
              r = (this.s + this.c * t) | 0;
            100 === r &&
              (-1 === i.indexOf("atrix(") &&
              -1 === i.indexOf("radient(") &&
              -1 === i.indexOf("oader(")
                ? (n.removeAttribute("filter"), (e = !Q(this.data, "filter")))
                : ((n.filter = i.replace(M, "")), (e = !0))),
              e ||
                (this.xn1 && (n.filter = i = i || "alpha(opacity=" + r + ")"),
                -1 === i.indexOf("pacity")
                  ? (0 === r && this.xn1) ||
                    (n.filter = i + " alpha(opacity=" + r + ")")
                  : (n.filter = i.replace(w, "opacity=" + r)));
          };
          Tt("opacity,alpha,autoAlpha", {
            defaultValue: "1",
            parser: function(t, e, i, r, a, o) {
              var s = parseFloat(Q(t, "opacity", n, !1, "1")),
                l = t.style,
                c = "autoAlpha" === i;
              return (
                "string" == typeof e &&
                  "=" === e.charAt(1) &&
                  (e =
                    ("-" === e.charAt(0) ? -1 : 1) * parseFloat(e.substr(2)) +
                    s),
                c &&
                  1 === s &&
                  "hidden" === Q(t, "visibility", n) &&
                  0 !== e &&
                  (s = 0),
                X
                  ? (a = new _t(l, "opacity", s, e - s, a))
                  : (((a = new _t(
                      l,
                      "opacity",
                      100 * s,
                      100 * (e - s),
                      a
                    )).xn1 = c ? 1 : 0),
                    (l.zoom = 1),
                    (a.type = 2),
                    (a.b = "alpha(opacity=" + a.s + ")"),
                    (a.e = "alpha(opacity=" + (a.s + a.c) + ")"),
                    (a.data = t),
                    (a.plugin = o),
                    (a.setRatio = qt)),
                c &&
                  (((a = new _t(
                    l,
                    "visibility",
                    0,
                    0,
                    a,
                    -1,
                    null,
                    !1,
                    0,
                    0 !== s ? "inherit" : "hidden",
                    0 === e ? "hidden" : "inherit"
                  )).xs0 =
                    "inherit"),
                  r._overwriteProps.push(a.n),
                  r._overwriteProps.push(i)),
                a
              );
            }
          });
          var Zt = function(t, e) {
              e &&
                (t.removeProperty
                  ? (("ms" !== e.substr(0, 2) && "webkit" !== e.substr(0, 6)) ||
                      (e = "-" + e),
                    t.removeProperty(e.replace(S, "-$1").toLowerCase()))
                  : t.removeAttribute(e));
            },
            Jt = function(t) {
              if (((this.t._gsClassPT = this), 1 === t || 0 === t)) {
                this.t.setAttribute("class", 0 === t ? this.b : this.e);
                for (var e = this.data, n = this.t.style; e; )
                  e.v ? (n[e.p] = e.v) : Zt(n, e.p), (e = e._next);
                1 === t &&
                  this.t._gsClassPT === this &&
                  (this.t._gsClassPT = null);
              } else
                this.t.getAttribute("class") !== this.e &&
                  this.t.setAttribute("class", this.e);
            };
          Tt("className", {
            parser: function(e, i, r, a, o, s, l) {
              var c,
                h,
                u,
                d,
                f,
                p = e.getAttribute("class") || "",
                m = e.style.cssText;
              if (
                (((o = a._classNamePT = new _t(
                  e,
                  r,
                  0,
                  0,
                  o,
                  2
                )).setRatio = Jt),
                (o.pr = -11),
                (t = !0),
                (o.b = p),
                (h = et(e, n)),
                (u = e._gsClassPT))
              ) {
                for (d = {}, f = u.data; f; ) (d[f.p] = 1), (f = f._next);
                u.setRatio(1);
              }
              return (
                (e._gsClassPT = o),
                (o.e =
                  "=" !== i.charAt(1)
                    ? i
                    : p.replace(
                        new RegExp("(?:\\s|^)" + i.substr(2) + "(?![\\w-])"),
                        ""
                      ) + ("+" === i.charAt(0) ? " " + i.substr(2) : "")),
                e.setAttribute("class", o.e),
                (c = nt(e, h, et(e), l, d)),
                e.setAttribute("class", p),
                (o.data = c.firstMPT),
                (e.style.cssText = m),
                (o = o.xfirst = a.parse(e, c.difs, o, s))
              );
            }
          });
          var Kt = function(t) {
            if (
              (1 === t || 0 === t) &&
              this.data._totalTime === this.data._totalDuration &&
              "isFromStart" !== this.data.data
            ) {
              var e,
                n,
                i,
                r,
                a,
                o = this.t.style,
                l = s.transform.parse;
              if ("all" === this.e) (o.cssText = ""), (r = !0);
              else
                for (
                  i = (e = this.e
                    .split(" ")
                    .join("")
                    .split(",")).length;
                  --i > -1;

                )
                  (n = e[i]),
                    s[n] &&
                      (s[n].parse === l
                        ? (r = !0)
                        : (n = "transformOrigin" === n ? Ot : s[n].p)),
                    Zt(o, n);
              r &&
                (Zt(o, Ct),
                (a = this.t._gsTransform) &&
                  (a.svg &&
                    (this.t.removeAttribute("data-svg-origin"),
                    this.t.removeAttribute("transform")),
                  delete this.t._gsTransform));
            }
          };
          for (
            Tt("clearProps", {
              parser: function(e, n, i, r, a) {
                return (
                  ((a = new _t(e, i, 0, 0, a, 2)).setRatio = Kt),
                  (a.e = n),
                  (a.pr = -10),
                  (a.data = r._tween),
                  (t = !0),
                  a
                );
              }
            }),
              l = "bezier,throwProps,physicsProps,physics2D".split(","),
              bt = l.length;
            bt--;

          )
            Mt(l[bt]);
          ((l =
            a.prototype)._firstPT = l._lastParsedTransform = l._transform = null),
            (l._onInitTween = function(i, o, l, d) {
              if (!i.nodeType) return !1;
              (this._target = m = i),
                (this._tween = l),
                (this._vars = o),
                (g = d),
                (c = o.autoRound),
                (t = !1),
                (e = o.suffixMap || a.suffixMap),
                (n = K(i, "")),
                (r = this._overwriteProps);
              var p,
                v,
                _,
                y,
                x,
                b,
                w,
                M,
                E,
                S = i.style;
              if (
                (h &&
                  "" === S.zIndex &&
                  (("auto" !== (p = Q(i, "zIndex", n)) && "" !== p) ||
                    this._addLazySet(S, "zIndex", 0)),
                "string" == typeof o &&
                  ((y = S.cssText),
                  (p = et(i, n)),
                  (S.cssText = y + ";" + o),
                  (p = nt(i, p, et(i)).difs),
                  !X && T.test(o) && (p.opacity = parseFloat(RegExp.$1)),
                  (o = p),
                  (S.cssText = y)),
                o.className
                  ? (this._firstPT = v = s.className.parse(
                      i,
                      o.className,
                      "className",
                      this,
                      null,
                      null,
                      o
                    ))
                  : (this._firstPT = v = this.parse(i, o, null)),
                this._transformType)
              ) {
                for (
                  E = 3 === this._transformType,
                    Ct
                      ? u &&
                        ((h = !0),
                        "" === S.zIndex &&
                          (("auto" !== (w = Q(i, "zIndex", n)) && "" !== w) ||
                            this._addLazySet(S, "zIndex", 0)),
                        f &&
                          this._addLazySet(
                            S,
                            "WebkitBackfaceVisibility",
                            this._vars.WebkitBackfaceVisibility ||
                              (E ? "visible" : "hidden")
                          ))
                      : (S.zoom = 1),
                    _ = v;
                  _ && _._next;

                )
                  _ = _._next;
                (M = new _t(i, "transform", 0, 0, null, 2)),
                  this._linkCSSP(M, null, _),
                  (M.setRatio = Ct ? Yt : jt),
                  (M.data = this._transform || Xt(i, n, !0)),
                  (M.tween = l),
                  (M.pr = -1),
                  r.pop();
              }
              if (t) {
                for (; v; ) {
                  for (b = v._next, _ = y; _ && _.pr > v.pr; ) _ = _._next;
                  (v._prev = _ ? _._prev : x) ? (v._prev._next = v) : (y = v),
                    (v._next = _) ? (_._prev = v) : (x = v),
                    (v = b);
                }
                this._firstPT = y;
              }
              return !0;
            }),
            (l.parse = function(t, i, r, a) {
              var o,
                l,
                h,
                u,
                d,
                f,
                p,
                v,
                _,
                y,
                x = t.style;
              for (o in i) {
                if (
                  ("function" == typeof (f = i[o]) && (f = f(g, m)), (l = s[o]))
                )
                  r = l.parse(t, f, o, this, r, a, i);
                else {
                  if ("--" === o.substr(0, 2)) {
                    this._tween._propLookup[o] = this._addTween.call(
                      this._tween,
                      t.style,
                      "setProperty",
                      K(t).getPropertyValue(o) + "",
                      f + "",
                      o,
                      !1,
                      o
                    );
                    continue;
                  }
                  (d = Q(t, o, n) + ""),
                    (_ = "string" == typeof f),
                    "color" === o ||
                    "fill" === o ||
                    "stroke" === o ||
                    -1 !== o.indexOf("Color") ||
                    (_ && E.test(f))
                      ? (_ ||
                          (f =
                            ((f = dt(f)).length > 3 ? "rgba(" : "rgb(") +
                            f.join(",") +
                            ")"),
                        (r = xt(x, o, d, f, !0, "transparent", r, 0, a)))
                      : _ && I.test(f)
                        ? (r = xt(x, o, d, f, !0, null, r, 0, a))
                        : ((p =
                            (h = parseFloat(d)) || 0 === h
                              ? d.substr((h + "").length)
                              : ""),
                          ("" !== d && "auto" !== d) ||
                            ("width" === o || "height" === o
                              ? ((h = at(t, o, n)), (p = "px"))
                              : "left" === o || "top" === o
                                ? ((h = tt(t, o, n)), (p = "px"))
                                : ((h = "opacity" !== o ? 0 : 1), (p = ""))),
                          (y = _ && "=" === f.charAt(1))
                            ? ((u = parseInt(f.charAt(0) + "1", 10)),
                              (f = f.substr(2)),
                              (u *= parseFloat(f)),
                              (v = f.replace(b, "")))
                            : ((u = parseFloat(f)),
                              (v = _ ? f.replace(b, "") : "")),
                          "" === v && (v = o in e ? e[o] : p),
                          (f = u || 0 === u ? (y ? u + h : u) + v : i[o]),
                          p !== v &&
                            (("" === v && "lineHeight" !== o) ||
                              ((u || 0 === u) &&
                                h &&
                                ((h = $(t, o, h, p)),
                                "%" === v
                                  ? ((h /= $(t, o, 100, "%") / 100),
                                    !0 !== i.strictUnits && (d = h + "%"))
                                  : "em" === v ||
                                    "rem" === v ||
                                    "vw" === v ||
                                    "vh" === v
                                    ? (h /= $(t, o, 1, v))
                                    : "px" !== v &&
                                      ((u = $(t, o, u, v)), (v = "px")),
                                y && (u || 0 === u) && (f = u + h + v)))),
                          y && (u += h),
                          (!h && 0 !== h) || (!u && 0 !== u)
                            ? void 0 !== x[o] &&
                              (f || (f + "" != "NaN" && null != f))
                              ? ((r = new _t(
                                  x,
                                  o,
                                  u || h || 0,
                                  0,
                                  r,
                                  -1,
                                  o,
                                  !1,
                                  0,
                                  d,
                                  f
                                )).xs0 =
                                  "none" !== f ||
                                  ("display" !== o && -1 === o.indexOf("Style"))
                                    ? f
                                    : d)
                              : Y("invalid " + o + " tween value: " + i[o])
                            : ((r = new _t(
                                x,
                                o,
                                h,
                                u - h,
                                r,
                                0,
                                o,
                                !1 !== c && ("px" === v || "zIndex" === o),
                                0,
                                d,
                                f
                              )).xs0 = v));
                }
                a && r && !r.plugin && (r.plugin = a);
              }
              return r;
            }),
            (l.setRatio = function(t) {
              var e,
                n,
                i,
                r = this._firstPT;
              if (
                1 !== t ||
                (this._tween._time !== this._tween._duration &&
                  0 !== this._tween._time)
              )
                if (
                  t ||
                  (this._tween._time !== this._tween._duration &&
                    0 !== this._tween._time) ||
                  -1e-6 === this._tween._rawPrevTime
                )
                  for (; r; ) {
                    if (
                      ((e = r.c * t + r.s),
                      r.r ? (e = r.r(e)) : e < 1e-6 && e > -1e-6 && (e = 0),
                      r.type)
                    )
                      if (1 === r.type)
                        if (2 === (i = r.l))
                          r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2;
                        else if (3 === i)
                          r.t[r.p] =
                            r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3;
                        else if (4 === i)
                          r.t[r.p] =
                            r.xs0 +
                            e +
                            r.xs1 +
                            r.xn1 +
                            r.xs2 +
                            r.xn2 +
                            r.xs3 +
                            r.xn3 +
                            r.xs4;
                        else if (5 === i)
                          r.t[r.p] =
                            r.xs0 +
                            e +
                            r.xs1 +
                            r.xn1 +
                            r.xs2 +
                            r.xn2 +
                            r.xs3 +
                            r.xn3 +
                            r.xs4 +
                            r.xn4 +
                            r.xs5;
                        else {
                          for (n = r.xs0 + e + r.xs1, i = 1; i < r.l; i++)
                            n += r["xn" + i] + r["xs" + (i + 1)];
                          r.t[r.p] = n;
                        }
                      else
                        -1 === r.type
                          ? (r.t[r.p] = r.xs0)
                          : r.setRatio && r.setRatio(t);
                    else r.t[r.p] = e + r.xs0;
                    r = r._next;
                  }
                else
                  for (; r; )
                    2 !== r.type ? (r.t[r.p] = r.b) : r.setRatio(t),
                      (r = r._next);
              else
                for (; r; ) {
                  if (2 !== r.type)
                    if (r.r && -1 !== r.type)
                      if (((e = r.r(r.s + r.c)), r.type)) {
                        if (1 === r.type) {
                          for (
                            i = r.l, n = r.xs0 + e + r.xs1, i = 1;
                            i < r.l;
                            i++
                          )
                            n += r["xn" + i] + r["xs" + (i + 1)];
                          r.t[r.p] = n;
                        }
                      } else r.t[r.p] = e + r.xs0;
                    else r.t[r.p] = r.e;
                  else r.setRatio(t);
                  r = r._next;
                }
            }),
            (l._enableTransforms = function(t) {
              (this._transform = this._transform || Xt(this._target, n, !0)),
                (this._transformType =
                  (this._transform.svg && Et) ||
                  (!t && 3 !== this._transformType)
                    ? 2
                    : 3);
            });
          var Qt = function(t) {
            (this.t[this.p] = this.e),
              this.data._linkCSSP(this, this._next, null, !0);
          };
          (l._addLazySet = function(t, e, n) {
            var i = (this._firstPT = new _t(t, e, 0, 0, this._firstPT, 2));
            (i.e = n), (i.setRatio = Qt), (i.data = this);
          }),
            (l._linkCSSP = function(t, e, n, i) {
              return (
                t &&
                  (e && (e._prev = t),
                  t._next && (t._next._prev = t._prev),
                  t._prev
                    ? (t._prev._next = t._next)
                    : this._firstPT === t &&
                      ((this._firstPT = t._next), (i = !0)),
                  n
                    ? (n._next = t)
                    : i || null !== this._firstPT || (this._firstPT = t),
                  (t._next = e),
                  (t._prev = n)),
                t
              );
            }),
            (l._mod = function(t) {
              for (var e = this._firstPT; e; )
                "function" == typeof t[e.p] && (e.r = t[e.p]), (e = e._next);
            }),
            (l._kill = function(t) {
              var e,
                n,
                r,
                a = t;
              if (t.autoAlpha || t.alpha) {
                for (n in ((a = {}), t)) a[n] = t[n];
                (a.opacity = 1), a.autoAlpha && (a.visibility = 1);
              }
              for (
                t.className &&
                  (e = this._classNamePT) &&
                  ((r = e.xfirst) && r._prev
                    ? this._linkCSSP(r._prev, e._next, r._prev._prev)
                    : r === this._firstPT && (this._firstPT = e._next),
                  e._next && this._linkCSSP(e._next, e._next._next, r._prev),
                  (this._classNamePT = null)),
                  e = this._firstPT;
                e;

              )
                e.plugin &&
                  e.plugin !== n &&
                  e.plugin._kill &&
                  (e.plugin._kill(t), (n = e.plugin)),
                  (e = e._next);
              return i.d.prototype._kill.call(this, a);
            });
          var $t = function(t, e, n) {
            var i, r, a, o;
            if (t.slice) for (r = t.length; --r > -1; ) $t(t[r], e, n);
            else
              for (r = (i = t.childNodes).length; --r > -1; )
                (o = (a = i[r]).type),
                  a.style && (e.push(et(a)), n && n.push(a)),
                  (1 !== o && 9 !== o && 11 !== o) ||
                    !a.childNodes.length ||
                    $t(a, e, n);
          };
          return (
            (a.cascadeTo = function(t, e, n) {
              var r,
                a,
                o,
                s,
                l = i.f.to(t, e, n),
                c = [l],
                h = [],
                u = [],
                d = [],
                f = i.f._internals.reservedProps;
              for (
                t = l._targets || l.target,
                  $t(t, h, d),
                  l.render(e, !0, !0),
                  $t(t, u),
                  l.render(0, !0, !0),
                  l._enabled(!0),
                  r = d.length;
                --r > -1;

              )
                if ((a = nt(d[r], h[r], u[r])).firstMPT) {
                  for (o in ((a = a.difs), n)) f[o] && (a[o] = n[o]);
                  for (o in ((s = {}), a)) s[o] = h[r][o];
                  c.push(i.f.fromTo(d[r], e, s, a));
                }
              return c;
            }),
            i.d.activate([a]),
            a
          );
        },
        !0
      );
      var a = i.g.CSSPlugin,
        o = i.e._gsDefine.plugin({
          propName: "attr",
          API: 2,
          version: "0.6.1",
          init: function(t, e, n, i) {
            var r, a;
            if ("function" != typeof t.setAttribute) return !1;
            for (r in e)
              "function" == typeof (a = e[r]) && (a = a(i, t)),
                this._addTween(
                  t,
                  "setAttribute",
                  t.getAttribute(r) + "",
                  a + "",
                  r,
                  !1,
                  r
                ),
                this._overwriteProps.push(r);
            return !0;
          }
        }),
        s = i.e._gsDefine.plugin({
          propName: "roundProps",
          version: "1.7.0",
          priority: -1,
          API: 2,
          init: function(t, e, n) {
            return (this._tween = n), !0;
          }
        }),
        l = function(t) {
          var e = t < 1 ? Math.pow(10, (t + "").length - 2) : 1;
          return function(n) {
            return ((Math.round(n / t) * t * e) | 0) / e;
          };
        },
        c = function(t, e) {
          for (; t; ) t.f || t.blob || (t.m = e || Math.round), (t = t._next);
        },
        h = s.prototype;
      /*!
 * VERSION: 0.6.1
 * DATE: 2018-08-27
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2018, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 *
 * @author: Jack Doyle, jack@greensock.com
 */ (h._onInitAllProps = function() {
        var t,
          e,
          n,
          i,
          r = this._tween,
          a = r.vars.roundProps,
          o = {},
          s = r._propLookup.roundProps;
        if ("object" != typeof a || a.push)
          for (
            "string" == typeof a && (a = a.split(",")), n = a.length;
            --n > -1;

          )
            o[a[n]] = Math.round;
        else for (i in a) o[i] = l(a[i]);
        for (i in o)
          for (t = r._firstPT; t; )
            (e = t._next),
              t.pg
                ? t.t._mod(o)
                : t.n === i &&
                  (2 === t.f && t.t
                    ? c(t.t._firstPT, o[i])
                    : (this._add(t.t, i, t.s, t.c, o[i]),
                      e && (e._prev = t._prev),
                      t._prev
                        ? (t._prev._next = e)
                        : r._firstPT === t && (r._firstPT = e),
                      (t._next = t._prev = null),
                      (r._propLookup[i] = s))),
              (t = e);
        return !1;
      }),
        (h._add = function(t, e, n, i, r) {
          this._addTween(t, e, n, n + i, e, r || Math.round),
            this._overwriteProps.push(e);
        });
      /*!
 * VERSION: 0.3.1
 * DATE: 2018-08-27
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2018, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 *
 * @author: Jack Doyle, jack@greensock.com
 **/
      var u = i.e._gsDefine.plugin({
        propName: "directionalRotation",
        version: "0.3.1",
        API: 2,
        init: function(t, e, n, i) {
          "object" != typeof e && (e = { rotation: e }), (this.finals = {});
          var r,
            a,
            o,
            s,
            l,
            c,
            h = !0 === e.useRadians ? 2 * Math.PI : 360;
          for (r in e)
            "useRadians" !== r &&
              ("function" == typeof (s = e[r]) && (s = s(i, t)),
              (a = (c = (s + "").split("_"))[0]),
              (o = parseFloat(
                "function" != typeof t[r]
                  ? t[r]
                  : t[
                      r.indexOf("set") ||
                      "function" != typeof t["get" + r.substr(3)]
                        ? r
                        : "get" + r.substr(3)
                    ]()
              )),
              (l =
                (s = this.finals[r] =
                  "string" == typeof a && "=" === a.charAt(1)
                    ? o + parseInt(a.charAt(0) + "1", 10) * Number(a.substr(2))
                    : Number(a) || 0) - o),
              c.length &&
                (-1 !== (a = c.join("_")).indexOf("short") &&
                  (l %= h) !== l % (h / 2) &&
                  (l = l < 0 ? l + h : l - h),
                -1 !== a.indexOf("_cw") && l < 0
                  ? (l = (l + 9999999999 * h) % h - ((l / h) | 0) * h)
                  : -1 !== a.indexOf("ccw") &&
                    l > 0 &&
                    (l = (l - 9999999999 * h) % h - ((l / h) | 0) * h)),
              (l > 1e-6 || l < -1e-6) &&
                (this._addTween(t, r, o, o + l, r),
                this._overwriteProps.push(r)));
          return !0;
        },
        set: function(t) {
          var e;
          if (1 !== t) this._super.setRatio.call(this, t);
          else
            for (e = this._firstPT; e; )
              e.f ? e.t[e.p](this.finals[e.p]) : (e.t[e.p] = this.finals[e.p]),
                (e = e._next);
        }
      });
      (u._autoCSS = !0),
        /*!
 * VERSION: 2.0.2
 * DATE: 2018-08-27
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2018, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 *
 * @author: Jack Doyle, jack@greensock.com
 */
        i.e._gsDefine(
          "TimelineLite",
          ["core.Animation", "core.SimpleTimeline", "TweenLite"],
          function() {
            var t = function(t) {
                i.c.call(this, t),
                  (this._labels = {}),
                  (this.autoRemoveChildren =
                    !0 === this.vars.autoRemoveChildren),
                  (this.smoothChildTiming = !0 === this.vars.smoothChildTiming),
                  (this._sortChildren = !0),
                  (this._onUpdate = this.vars.onUpdate);
                var e,
                  n,
                  r = this.vars;
                for (n in r)
                  (e = r[n]),
                    a(e) &&
                      -1 !== e.join("").indexOf("{self}") &&
                      (r[n] = this._swapSelfInParams(e));
                a(r.tweens) && this.add(r.tweens, 0, r.align, r.stagger);
              },
              e = i.f._internals,
              n = (t._internals = {}),
              r = e.isSelector,
              a = e.isArray,
              o = e.lazyTweens,
              s = e.lazyRender,
              l = i.e._gsDefine.globals,
              c = function(t) {
                var e,
                  n = {};
                for (e in t) n[e] = t[e];
                return n;
              },
              h = function(t, e, n) {
                var i,
                  r,
                  a = t.cycle;
                for (i in a)
                  (r = a[i]),
                    (t[i] =
                      "function" == typeof r ? r(n, e[n]) : r[n % r.length]);
                delete t.cycle;
              },
              u = (n.pauseCallback = function() {}),
              d = function(t) {
                var e,
                  n = [],
                  i = t.length;
                for (e = 0; e !== i; n.push(t[e++]));
                return n;
              },
              f = (t.prototype = new i.c());
            return (
              (t.version = "2.0.2"),
              (f.constructor = t),
              (f.kill()._gc = f._forcingPlayhead = f._hasPause = !1),
              (f.to = function(t, e, n, r) {
                var a = (n.repeat && l.TweenMax) || i.f;
                return e ? this.add(new a(t, e, n), r) : this.set(t, n, r);
              }),
              (f.from = function(t, e, n, r) {
                return this.add(
                  ((n.repeat && l.TweenMax) || i.f).from(t, e, n),
                  r
                );
              }),
              (f.fromTo = function(t, e, n, r, a) {
                var o = (r.repeat && l.TweenMax) || i.f;
                return e
                  ? this.add(o.fromTo(t, e, n, r), a)
                  : this.set(t, r, a);
              }),
              (f.staggerTo = function(e, n, a, o, s, l, u, f) {
                var p,
                  m,
                  g = new t({
                    onComplete: l,
                    onCompleteParams: u,
                    callbackScope: f,
                    smoothChildTiming: this.smoothChildTiming
                  }),
                  v = a.cycle;
                for (
                  "string" == typeof e && (e = i.f.selector(e) || e),
                    r((e = e || [])) && (e = d(e)),
                    (o = o || 0) < 0 && ((e = d(e)).reverse(), (o *= -1)),
                    m = 0;
                  m < e.length;
                  m++
                )
                  (p = c(a)).startAt &&
                    ((p.startAt = c(p.startAt)),
                    p.startAt.cycle && h(p.startAt, e, m)),
                    v &&
                      (h(p, e, m),
                      null != p.duration &&
                        ((n = p.duration), delete p.duration)),
                    g.to(e[m], n, p, m * o);
                return this.add(g, s);
              }),
              (f.staggerFrom = function(t, e, n, i, r, a, o, s) {
                return (
                  (n.immediateRender = 0 != n.immediateRender),
                  (n.runBackwards = !0),
                  this.staggerTo(t, e, n, i, r, a, o, s)
                );
              }),
              (f.staggerFromTo = function(t, e, n, i, r, a, o, s, l) {
                return (
                  (i.startAt = n),
                  (i.immediateRender =
                    0 != i.immediateRender && 0 != n.immediateRender),
                  this.staggerTo(t, e, i, r, a, o, s, l)
                );
              }),
              (f.call = function(t, e, n, r) {
                return this.add(i.f.delayedCall(0, t, e, n), r);
              }),
              (f.set = function(t, e, n) {
                return (
                  (n = this._parseTimeOrLabel(n, 0, !0)),
                  null == e.immediateRender &&
                    (e.immediateRender = n === this._time && !this._paused),
                  this.add(new i.f(t, 0, e), n)
                );
              }),
              (t.exportRoot = function(e, n) {
                null == (e = e || {}).smoothChildTiming &&
                  (e.smoothChildTiming = !0);
                var r,
                  a,
                  o,
                  s,
                  l = new t(e),
                  c = l._timeline;
                for (
                  null == n && (n = !0),
                    c._remove(l, !0),
                    l._startTime = 0,
                    l._rawPrevTime = l._time = l._totalTime = c._time,
                    o = c._first;
                  o;

                )
                  (s = o._next),
                    (n && o instanceof i.f && o.target === o.vars.onComplete) ||
                      ((a = o._startTime - o._delay) < 0 && (r = 1),
                      l.add(o, a)),
                    (o = s);
                return c.add(l, 0), r && l.totalDuration(), l;
              }),
              (f.add = function(e, n, r, o) {
                var s, l, c, h, u, d;
                if (
                  ("number" != typeof n &&
                    (n = this._parseTimeOrLabel(n, 0, !0, e)),
                  !(e instanceof i.a))
                ) {
                  if (e instanceof Array || (e && e.push && a(e))) {
                    for (
                      r = r || "normal", o = o || 0, s = n, l = e.length, c = 0;
                      c < l;
                      c++
                    )
                      a((h = e[c])) && (h = new t({ tweens: h })),
                        this.add(h, s),
                        "string" != typeof h &&
                          "function" != typeof h &&
                          ("sequence" === r
                            ? (s =
                                h._startTime + h.totalDuration() / h._timeScale)
                            : "start" === r && (h._startTime -= h.delay())),
                        (s += o);
                    return this._uncache(!0);
                  }
                  if ("string" == typeof e) return this.addLabel(e, n);
                  if ("function" != typeof e)
                    throw "Cannot add " +
                      e +
                      " into the timeline; it is not a tween, timeline, function, or string.";
                  e = i.f.delayedCall(0, e);
                }
                if (
                  (i.c.prototype.add.call(this, e, n),
                  e._time &&
                    ((s = Math.max(
                      0,
                      Math.min(
                        e.totalDuration(),
                        (this.rawTime() - e._startTime) * e._timeScale
                      )
                    )),
                    Math.abs(s - e._totalTime) > 1e-5 && e.render(s, !1, !1)),
                  (this._gc || this._time === this._duration) &&
                    !this._paused &&
                    this._duration < this.duration())
                )
                  for (d = (u = this).rawTime() > e._startTime; u._timeline; )
                    d && u._timeline.smoothChildTiming
                      ? u.totalTime(u._totalTime, !0)
                      : u._gc && u._enabled(!0, !1),
                      (u = u._timeline);
                return this;
              }),
              (f.remove = function(t) {
                if (t instanceof i.a) {
                  this._remove(t, !1);
                  var e = (t._timeline = t.vars.useFrames
                    ? i.a._rootFramesTimeline
                    : i.a._rootTimeline);
                  return (
                    (t._startTime =
                      (t._paused ? t._pauseTime : e._time) -
                      (t._reversed
                        ? t.totalDuration() - t._totalTime
                        : t._totalTime) /
                        t._timeScale),
                    this
                  );
                }
                if (t instanceof Array || (t && t.push && a(t))) {
                  for (var n = t.length; --n > -1; ) this.remove(t[n]);
                  return this;
                }
                return "string" == typeof t
                  ? this.removeLabel(t)
                  : this.kill(null, t);
              }),
              (f._remove = function(t, e) {
                return (
                  i.c.prototype._remove.call(this, t, e),
                  this._last
                    ? this._time > this.duration() &&
                      ((this._time = this._duration),
                      (this._totalTime = this._totalDuration))
                    : (this._time = this._totalTime = this._duration = this._totalDuration = 0),
                  this
                );
              }),
              (f.append = function(t, e) {
                return this.add(t, this._parseTimeOrLabel(null, e, !0, t));
              }),
              (f.insert = f.insertMultiple = function(t, e, n, i) {
                return this.add(t, e || 0, n, i);
              }),
              (f.appendMultiple = function(t, e, n, i) {
                return this.add(
                  t,
                  this._parseTimeOrLabel(null, e, !0, t),
                  n,
                  i
                );
              }),
              (f.addLabel = function(t, e) {
                return (this._labels[t] = this._parseTimeOrLabel(e)), this;
              }),
              (f.addPause = function(t, e, n, r) {
                var a = i.f.delayedCall(0, u, n, r || this);
                return (
                  (a.vars.onComplete = a.vars.onReverseComplete = e),
                  (a.data = "isPause"),
                  (this._hasPause = !0),
                  this.add(a, t)
                );
              }),
              (f.removeLabel = function(t) {
                return delete this._labels[t], this;
              }),
              (f.getLabelTime = function(t) {
                return null != this._labels[t] ? this._labels[t] : -1;
              }),
              (f._parseTimeOrLabel = function(t, e, n, r) {
                var o, s;
                if (r instanceof i.a && r.timeline === this) this.remove(r);
                else if (r && (r instanceof Array || (r.push && a(r))))
                  for (s = r.length; --s > -1; )
                    r[s] instanceof i.a &&
                      r[s].timeline === this &&
                      this.remove(r[s]);
                if (
                  ((o =
                    "number" != typeof t || e
                      ? this.duration() > 99999999999
                        ? this.recent().endTime(!1)
                        : this._duration
                      : 0),
                  "string" == typeof e)
                )
                  return this._parseTimeOrLabel(
                    e,
                    n && "number" == typeof t && null == this._labels[e]
                      ? t - o
                      : 0,
                    n
                  );
                if (
                  ((e = e || 0),
                  "string" != typeof t ||
                    (!isNaN(t) && null == this._labels[t]))
                )
                  null == t && (t = o);
                else {
                  if (-1 === (s = t.indexOf("=")))
                    return null == this._labels[t]
                      ? n ? (this._labels[t] = o + e) : e
                      : this._labels[t] + e;
                  (e =
                    parseInt(t.charAt(s - 1) + "1", 10) *
                    Number(t.substr(s + 1))),
                    (t =
                      s > 1
                        ? this._parseTimeOrLabel(t.substr(0, s - 1), 0, n)
                        : o);
                }
                return Number(t) + e;
              }),
              (f.seek = function(t, e) {
                return this.totalTime(
                  "number" == typeof t ? t : this._parseTimeOrLabel(t),
                  !1 !== e
                );
              }),
              (f.stop = function() {
                return this.paused(!0);
              }),
              (f.gotoAndPlay = function(t, e) {
                return this.play(t, e);
              }),
              (f.gotoAndStop = function(t, e) {
                return this.pause(t, e);
              }),
              (f.render = function(t, e, n) {
                this._gc && this._enabled(!0, !1);
                var i,
                  r,
                  a,
                  l,
                  c,
                  h,
                  u,
                  d = this._time,
                  f = this._dirty ? this.totalDuration() : this._totalDuration,
                  p = this._startTime,
                  m = this._timeScale,
                  g = this._paused;
                if (
                  (d !== this._time && (t += this._time - d),
                  t >= f - 1e-7 && t >= 0)
                )
                  (this._totalTime = this._time = f),
                    this._reversed ||
                      this._hasPausedChild() ||
                      ((r = !0),
                      (l = "onComplete"),
                      (c = !!this._timeline.autoRemoveChildren),
                      0 === this._duration &&
                        ((t <= 0 && t >= -1e-7) ||
                          this._rawPrevTime < 0 ||
                          1e-10 === this._rawPrevTime) &&
                        this._rawPrevTime !== t &&
                        this._first &&
                        ((c = !0),
                        this._rawPrevTime > 1e-10 &&
                          (l = "onReverseComplete"))),
                    (this._rawPrevTime =
                      this._duration || !e || t || this._rawPrevTime === t
                        ? t
                        : 1e-10),
                    (t = f + 1e-4);
                else if (t < 1e-7)
                  if (
                    ((this._totalTime = this._time = 0),
                    (0 !== d ||
                      (0 === this._duration &&
                        1e-10 !== this._rawPrevTime &&
                        (this._rawPrevTime > 0 ||
                          (t < 0 && this._rawPrevTime >= 0)))) &&
                      ((l = "onReverseComplete"), (r = this._reversed)),
                    t < 0)
                  )
                    (this._active = !1),
                      this._timeline.autoRemoveChildren && this._reversed
                        ? ((c = r = !0), (l = "onReverseComplete"))
                        : this._rawPrevTime >= 0 && this._first && (c = !0),
                      (this._rawPrevTime = t);
                  else {
                    if (
                      ((this._rawPrevTime =
                        this._duration || !e || t || this._rawPrevTime === t
                          ? t
                          : 1e-10),
                      0 === t && r)
                    )
                      for (i = this._first; i && 0 === i._startTime; )
                        i._duration || (r = !1), (i = i._next);
                    (t = 0), this._initted || (c = !0);
                  }
                else {
                  if (this._hasPause && !this._forcingPlayhead && !e) {
                    if (t >= d)
                      for (i = this._first; i && i._startTime <= t && !h; )
                        i._duration ||
                          "isPause" !== i.data ||
                          i.ratio ||
                          (0 === i._startTime && 0 === this._rawPrevTime) ||
                          (h = i),
                          (i = i._next);
                    else
                      for (i = this._last; i && i._startTime >= t && !h; )
                        i._duration ||
                          ("isPause" === i.data &&
                            i._rawPrevTime > 0 &&
                            (h = i)),
                          (i = i._prev);
                    h &&
                      ((this._time = t = h._startTime),
                      (this._totalTime =
                        t +
                        this._cycle *
                          (this._totalDuration + this._repeatDelay)));
                  }
                  this._totalTime = this._time = this._rawPrevTime = t;
                }
                if ((this._time !== d && this._first) || n || c || h) {
                  if (
                    (this._initted || (this._initted = !0),
                    this._active ||
                      (!this._paused &&
                        this._time !== d &&
                        t > 0 &&
                        (this._active = !0)),
                    0 === d &&
                      this.vars.onStart &&
                      ((0 === this._time && this._duration) ||
                        e ||
                        this._callback("onStart")),
                    (u = this._time) >= d)
                  )
                    for (
                      i = this._first;
                      i &&
                      ((a = i._next), u === this._time && (!this._paused || g));

                    )
                      (i._active ||
                        (i._startTime <= u && !i._paused && !i._gc)) &&
                        (h === i && this.pause(),
                        i._reversed
                          ? i.render(
                              (i._dirty
                                ? i.totalDuration()
                                : i._totalDuration) -
                                (t - i._startTime) * i._timeScale,
                              e,
                              n
                            )
                          : i.render((t - i._startTime) * i._timeScale, e, n)),
                        (i = a);
                  else
                    for (
                      i = this._last;
                      i &&
                      ((a = i._prev), u === this._time && (!this._paused || g));

                    ) {
                      if (
                        i._active ||
                        (i._startTime <= d && !i._paused && !i._gc)
                      ) {
                        if (h === i) {
                          for (h = i._prev; h && h.endTime() > this._time; )
                            h.render(
                              h._reversed
                                ? h.totalDuration() -
                                  (t - h._startTime) * h._timeScale
                                : (t - h._startTime) * h._timeScale,
                              e,
                              n
                            ),
                              (h = h._prev);
                          (h = null), this.pause();
                        }
                        i._reversed
                          ? i.render(
                              (i._dirty
                                ? i.totalDuration()
                                : i._totalDuration) -
                                (t - i._startTime) * i._timeScale,
                              e,
                              n
                            )
                          : i.render((t - i._startTime) * i._timeScale, e, n);
                      }
                      i = a;
                    }
                  this._onUpdate &&
                    (e || (o.length && s(), this._callback("onUpdate"))),
                    l &&
                      (this._gc ||
                        (p !== this._startTime && m === this._timeScale) ||
                        ((0 === this._time || f >= this.totalDuration()) &&
                          (r &&
                            (o.length && s(),
                            this._timeline.autoRemoveChildren &&
                              this._enabled(!1, !1),
                            (this._active = !1)),
                          !e && this.vars[l] && this._callback(l))));
                }
              }),
              (f._hasPausedChild = function() {
                for (var e = this._first; e; ) {
                  if (e._paused || (e instanceof t && e._hasPausedChild()))
                    return !0;
                  e = e._next;
                }
                return !1;
              }),
              (f.getChildren = function(t, e, n, r) {
                r = r || -9999999999;
                for (var a = [], o = this._first, s = 0; o; )
                  o._startTime < r ||
                    (o instanceof i.f
                      ? !1 !== e && (a[s++] = o)
                      : (!1 !== n && (a[s++] = o),
                        !1 !== t &&
                          (s = (a = a.concat(o.getChildren(!0, e, n)))
                            .length))),
                    (o = o._next);
                return a;
              }),
              (f.getTweensOf = function(t, e) {
                var n,
                  r,
                  a = this._gc,
                  o = [],
                  s = 0;
                for (
                  a && this._enabled(!0, !0),
                    r = (n = i.f.getTweensOf(t)).length;
                  --r > -1;

                )
                  (n[r].timeline === this || (e && this._contains(n[r]))) &&
                    (o[s++] = n[r]);
                return a && this._enabled(!1, !0), o;
              }),
              (f.recent = function() {
                return this._recent;
              }),
              (f._contains = function(t) {
                for (var e = t.timeline; e; ) {
                  if (e === this) return !0;
                  e = e.timeline;
                }
                return !1;
              }),
              (f.shiftChildren = function(t, e, n) {
                n = n || 0;
                for (var i, r = this._first, a = this._labels; r; )
                  r._startTime >= n && (r._startTime += t), (r = r._next);
                if (e) for (i in a) a[i] >= n && (a[i] += t);
                return this._uncache(!0);
              }),
              (f._kill = function(t, e) {
                if (!t && !e) return this._enabled(!1, !1);
                for (
                  var n = e
                      ? this.getTweensOf(e)
                      : this.getChildren(!0, !0, !1),
                    i = n.length,
                    r = !1;
                  --i > -1;

                )
                  n[i]._kill(t, e) && (r = !0);
                return r;
              }),
              (f.clear = function(t) {
                var e = this.getChildren(!1, !0, !0),
                  n = e.length;
                for (this._time = this._totalTime = 0; --n > -1; )
                  e[n]._enabled(!1, !1);
                return !1 !== t && (this._labels = {}), this._uncache(!0);
              }),
              (f.invalidate = function() {
                for (var t = this._first; t; ) t.invalidate(), (t = t._next);
                return i.a.prototype.invalidate.call(this);
              }),
              (f._enabled = function(t, e) {
                if (t === this._gc)
                  for (var n = this._first; n; )
                    n._enabled(t, !0), (n = n._next);
                return i.c.prototype._enabled.call(this, t, e);
              }),
              (f.totalTime = function(t, e, n) {
                this._forcingPlayhead = !0;
                var r = i.a.prototype.totalTime.apply(this, arguments);
                return (this._forcingPlayhead = !1), r;
              }),
              (f.duration = function(t) {
                return arguments.length
                  ? (0 !== this.duration() &&
                      0 !== t &&
                      this.timeScale(this._duration / t),
                    this)
                  : (this._dirty && this.totalDuration(), this._duration);
              }),
              (f.totalDuration = function(t) {
                if (!arguments.length) {
                  if (this._dirty) {
                    for (var e, n, i = 0, r = this._last, a = 999999999999; r; )
                      (e = r._prev),
                        r._dirty && r.totalDuration(),
                        r._startTime > a &&
                        this._sortChildren &&
                        !r._paused &&
                        !this._calculatingDuration
                          ? ((this._calculatingDuration = 1),
                            this.add(r, r._startTime - r._delay),
                            (this._calculatingDuration = 0))
                          : (a = r._startTime),
                        r._startTime < 0 &&
                          !r._paused &&
                          ((i -= r._startTime),
                          this._timeline.smoothChildTiming &&
                            ((this._startTime +=
                              r._startTime / this._timeScale),
                            (this._time -= r._startTime),
                            (this._totalTime -= r._startTime),
                            (this._rawPrevTime -= r._startTime)),
                          this.shiftChildren(-r._startTime, !1, -9999999999),
                          (a = 0)),
                        (n = r._startTime + r._totalDuration / r._timeScale) >
                          i && (i = n),
                        (r = e);
                    (this._duration = this._totalDuration = i),
                      (this._dirty = !1);
                  }
                  return this._totalDuration;
                }
                return t && this.totalDuration()
                  ? this.timeScale(this._totalDuration / t)
                  : this;
              }),
              (f.paused = function(t) {
                if (!t)
                  for (var e = this._first, n = this._time; e; )
                    e._startTime === n &&
                      "isPause" === e.data &&
                      (e._rawPrevTime = 0),
                      (e = e._next);
                return i.a.prototype.paused.apply(this, arguments);
              }),
              (f.usesFrames = function() {
                for (var t = this._timeline; t._timeline; ) t = t._timeline;
                return t === i.a._rootFramesTimeline;
              }),
              (f.rawTime = function(t) {
                return t &&
                  (this._paused ||
                    (this._repeat &&
                      this.time() > 0 &&
                      this.totalProgress() < 1))
                  ? this._totalTime % (this._duration + this._repeatDelay)
                  : this._paused
                    ? this._totalTime
                    : (this._timeline.rawTime(t) - this._startTime) *
                      this._timeScale;
              }),
              t
            );
          },
          !0
        );
      var d = i.g.TimelineLite;
      /*!
 * VERSION: 2.0.2
 * DATE: 2018-08-27
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2018, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 *
 * @author: Jack Doyle, jack@greensock.com
 */ i.e._gsDefine(
        "TimelineMax",
        ["TimelineLite", "TweenLite", "easing.Ease"],
        function() {
          var t = function(t) {
              d.call(this, t),
                (this._repeat = this.vars.repeat || 0),
                (this._repeatDelay = this.vars.repeatDelay || 0),
                (this._cycle = 0),
                (this._yoyo = !0 === this.vars.yoyo),
                (this._dirty = !0);
            },
            e = i.f._internals,
            n = e.lazyTweens,
            r = e.lazyRender,
            a = i.e._gsDefine.globals,
            o = new i.b(null, null, 1, 0),
            s = (t.prototype = new d());
          return (
            (s.constructor = t),
            (s.kill()._gc = !1),
            (t.version = "2.0.2"),
            (s.invalidate = function() {
              return (
                (this._yoyo = !0 === this.vars.yoyo),
                (this._repeat = this.vars.repeat || 0),
                (this._repeatDelay = this.vars.repeatDelay || 0),
                this._uncache(!0),
                d.prototype.invalidate.call(this)
              );
            }),
            (s.addCallback = function(t, e, n, r) {
              return this.add(i.f.delayedCall(0, t, n, r), e);
            }),
            (s.removeCallback = function(t, e) {
              if (t)
                if (null == e) this._kill(null, t);
                else
                  for (
                    var n = this.getTweensOf(t, !1),
                      i = n.length,
                      r = this._parseTimeOrLabel(e);
                    --i > -1;

                  )
                    n[i]._startTime === r && n[i]._enabled(!1, !1);
              return this;
            }),
            (s.removePause = function(t) {
              return this.removeCallback(d._internals.pauseCallback, t);
            }),
            (s.tweenTo = function(t, e) {
              e = e || {};
              var n,
                r,
                s,
                l = {
                  ease: o,
                  useFrames: this.usesFrames(),
                  immediateRender: !1,
                  lazy: !1
                },
                c = (e.repeat && a.TweenMax) || i.f;
              for (r in e) l[r] = e[r];
              return (
                (l.time = this._parseTimeOrLabel(t)),
                (n =
                  Math.abs(Number(l.time) - this._time) / this._timeScale ||
                  0.001),
                (s = new c(this, n, l)),
                (l.onStart = function() {
                  s.target.paused(!0),
                    s.vars.time === s.target.time() ||
                      n !== s.duration() ||
                      s.isFromTo ||
                      s
                        .duration(
                          Math.abs(s.vars.time - s.target.time()) /
                            s.target._timeScale
                        )
                        .render(s.time(), !0, !0),
                    e.onStart &&
                      e.onStart.apply(
                        e.onStartScope || e.callbackScope || s,
                        e.onStartParams || []
                      );
                }),
                s
              );
            }),
            (s.tweenFromTo = function(t, e, n) {
              (n = n || {}),
                (t = this._parseTimeOrLabel(t)),
                (n.startAt = {
                  onComplete: this.seek,
                  onCompleteParams: [t],
                  callbackScope: this
                }),
                (n.immediateRender = !1 !== n.immediateRender);
              var i = this.tweenTo(e, n);
              return (
                (i.isFromTo = 1),
                i.duration(Math.abs(i.vars.time - t) / this._timeScale || 0.001)
              );
            }),
            (s.render = function(t, e, i) {
              this._gc && this._enabled(!0, !1);
              var a,
                o,
                s,
                l,
                c,
                h,
                u,
                d,
                f = this._time,
                p = this._dirty ? this.totalDuration() : this._totalDuration,
                m = this._duration,
                g = this._totalTime,
                v = this._startTime,
                _ = this._timeScale,
                y = this._rawPrevTime,
                x = this._paused,
                b = this._cycle;
              if (
                (f !== this._time && (t += this._time - f),
                t >= p - 1e-7 && t >= 0)
              )
                this._locked ||
                  ((this._totalTime = p), (this._cycle = this._repeat)),
                  this._reversed ||
                    this._hasPausedChild() ||
                    ((o = !0),
                    (l = "onComplete"),
                    (c = !!this._timeline.autoRemoveChildren),
                    0 === this._duration &&
                      ((t <= 0 && t >= -1e-7) || y < 0 || 1e-10 === y) &&
                      y !== t &&
                      this._first &&
                      ((c = !0), y > 1e-10 && (l = "onReverseComplete"))),
                  (this._rawPrevTime =
                    this._duration || !e || t || this._rawPrevTime === t
                      ? t
                      : 1e-10),
                  this._yoyo && 0 != (1 & this._cycle)
                    ? (this._time = t = 0)
                    : ((this._time = m), (t = m + 1e-4));
              else if (t < 1e-7)
                if (
                  (this._locked || (this._totalTime = this._cycle = 0),
                  (this._time = 0),
                  (0 !== f ||
                    (0 === m &&
                      1e-10 !== y &&
                      (y > 0 || (t < 0 && y >= 0)) &&
                      !this._locked)) &&
                    ((l = "onReverseComplete"), (o = this._reversed)),
                  t < 0)
                )
                  (this._active = !1),
                    this._timeline.autoRemoveChildren && this._reversed
                      ? ((c = o = !0), (l = "onReverseComplete"))
                      : y >= 0 && this._first && (c = !0),
                    (this._rawPrevTime = t);
                else {
                  if (
                    ((this._rawPrevTime =
                      m || !e || t || this._rawPrevTime === t ? t : 1e-10),
                    0 === t && o)
                  )
                    for (a = this._first; a && 0 === a._startTime; )
                      a._duration || (o = !1), (a = a._next);
                  (t = 0), this._initted || (c = !0);
                }
              else if (
                (0 === m && y < 0 && (c = !0),
                (this._time = this._rawPrevTime = t),
                this._locked ||
                  ((this._totalTime = t),
                  0 !== this._repeat &&
                    ((h = m + this._repeatDelay),
                    (this._cycle = (this._totalTime / h) >> 0),
                    0 !== this._cycle &&
                      this._cycle === this._totalTime / h &&
                      g <= t &&
                      this._cycle--,
                    (this._time = this._totalTime - this._cycle * h),
                    this._yoyo &&
                      0 != (1 & this._cycle) &&
                      (this._time = m - this._time),
                    this._time > m
                      ? ((this._time = m), (t = m + 1e-4))
                      : this._time < 0
                        ? (this._time = t = 0)
                        : (t = this._time))),
                this._hasPause && !this._forcingPlayhead && !e)
              ) {
                if (
                  (t = this._time) >= f ||
                  (this._repeat && b !== this._cycle)
                )
                  for (a = this._first; a && a._startTime <= t && !u; )
                    a._duration ||
                      "isPause" !== a.data ||
                      a.ratio ||
                      (0 === a._startTime && 0 === this._rawPrevTime) ||
                      (u = a),
                      (a = a._next);
                else
                  for (a = this._last; a && a._startTime >= t && !u; )
                    a._duration ||
                      ("isPause" === a.data && a._rawPrevTime > 0 && (u = a)),
                      (a = a._prev);
                u &&
                  u._startTime < m &&
                  ((this._time = t = u._startTime),
                  (this._totalTime =
                    t +
                    this._cycle * (this._totalDuration + this._repeatDelay)));
              }
              if (this._cycle !== b && !this._locked) {
                var w = this._yoyo && 0 != (1 & b),
                  T = w === (this._yoyo && 0 != (1 & this._cycle)),
                  M = this._totalTime,
                  E = this._cycle,
                  S = this._rawPrevTime,
                  L = this._time;
                if (
                  ((this._totalTime = b * m),
                  this._cycle < b ? (w = !w) : (this._totalTime += m),
                  (this._time = f),
                  (this._rawPrevTime = 0 === m ? y - 1e-4 : y),
                  (this._cycle = b),
                  (this._locked = !0),
                  (f = w ? 0 : m),
                  this.render(f, e, 0 === m),
                  e ||
                    this._gc ||
                    (this.vars.onRepeat &&
                      ((this._cycle = E),
                      (this._locked = !1),
                      this._callback("onRepeat"))),
                  f !== this._time)
                )
                  return;
                if (
                  (T &&
                    ((this._cycle = b),
                    (this._locked = !0),
                    (f = w ? m + 1e-4 : -1e-4),
                    this.render(f, !0, !1)),
                  (this._locked = !1),
                  this._paused && !x)
                )
                  return;
                (this._time = L),
                  (this._totalTime = M),
                  (this._cycle = E),
                  (this._rawPrevTime = S);
              }
              if ((this._time !== f && this._first) || i || c || u) {
                if (
                  (this._initted || (this._initted = !0),
                  this._active ||
                    (!this._paused &&
                      this._totalTime !== g &&
                      t > 0 &&
                      (this._active = !0)),
                  0 === g &&
                    this.vars.onStart &&
                    ((0 === this._totalTime && this._totalDuration) ||
                      e ||
                      this._callback("onStart")),
                  (d = this._time) >= f)
                )
                  for (
                    a = this._first;
                    a &&
                    ((s = a._next), d === this._time && (!this._paused || x));

                  )
                    (a._active ||
                      (a._startTime <= this._time && !a._paused && !a._gc)) &&
                      (u === a && this.pause(),
                      a._reversed
                        ? a.render(
                            (a._dirty ? a.totalDuration() : a._totalDuration) -
                              (t - a._startTime) * a._timeScale,
                            e,
                            i
                          )
                        : a.render((t - a._startTime) * a._timeScale, e, i)),
                      (a = s);
                else
                  for (
                    a = this._last;
                    a &&
                    ((s = a._prev), d === this._time && (!this._paused || x));

                  ) {
                    if (
                      a._active ||
                      (a._startTime <= f && !a._paused && !a._gc)
                    ) {
                      if (u === a) {
                        for (u = a._prev; u && u.endTime() > this._time; )
                          u.render(
                            u._reversed
                              ? u.totalDuration() -
                                (t - u._startTime) * u._timeScale
                              : (t - u._startTime) * u._timeScale,
                            e,
                            i
                          ),
                            (u = u._prev);
                        (u = null), this.pause();
                      }
                      a._reversed
                        ? a.render(
                            (a._dirty ? a.totalDuration() : a._totalDuration) -
                              (t - a._startTime) * a._timeScale,
                            e,
                            i
                          )
                        : a.render((t - a._startTime) * a._timeScale, e, i);
                    }
                    a = s;
                  }
                this._onUpdate &&
                  (e || (n.length && r(), this._callback("onUpdate"))),
                  l &&
                    (this._locked ||
                      this._gc ||
                      (v !== this._startTime && _ === this._timeScale) ||
                      ((0 === this._time || p >= this.totalDuration()) &&
                        (o &&
                          (n.length && r(),
                          this._timeline.autoRemoveChildren &&
                            this._enabled(!1, !1),
                          (this._active = !1)),
                        !e && this.vars[l] && this._callback(l))));
              } else
                g !== this._totalTime &&
                  this._onUpdate &&
                  (e || this._callback("onUpdate"));
            }),
            (s.getActive = function(t, e, n) {
              null == t && (t = !0),
                null == e && (e = !0),
                null == n && (n = !1);
              var i,
                r,
                a = [],
                o = this.getChildren(t, e, n),
                s = 0,
                l = o.length;
              for (i = 0; i < l; i++) (r = o[i]).isActive() && (a[s++] = r);
              return a;
            }),
            (s.getLabelAfter = function(t) {
              t || (0 !== t && (t = this._time));
              var e,
                n = this.getLabelsArray(),
                i = n.length;
              for (e = 0; e < i; e++) if (n[e].time > t) return n[e].name;
              return null;
            }),
            (s.getLabelBefore = function(t) {
              null == t && (t = this._time);
              for (var e = this.getLabelsArray(), n = e.length; --n > -1; )
                if (e[n].time < t) return e[n].name;
              return null;
            }),
            (s.getLabelsArray = function() {
              var t,
                e = [],
                n = 0;
              for (t in this._labels)
                e[n++] = { time: this._labels[t], name: t };
              return (
                e.sort(function(t, e) {
                  return t.time - e.time;
                }),
                e
              );
            }),
            (s.invalidate = function() {
              return (this._locked = !1), d.prototype.invalidate.call(this);
            }),
            (s.progress = function(t, e) {
              return arguments.length
                ? this.totalTime(
                    this.duration() *
                      (this._yoyo && 0 != (1 & this._cycle) ? 1 - t : t) +
                      this._cycle * (this._duration + this._repeatDelay),
                    e
                  )
                : this._time / this.duration() || 0;
            }),
            (s.totalProgress = function(t, e) {
              return arguments.length
                ? this.totalTime(this.totalDuration() * t, e)
                : this._totalTime / this.totalDuration() || 0;
            }),
            (s.totalDuration = function(t) {
              return arguments.length
                ? -1 !== this._repeat && t
                  ? this.timeScale(this.totalDuration() / t)
                  : this
                : (this._dirty &&
                    (d.prototype.totalDuration.call(this),
                    (this._totalDuration =
                      -1 === this._repeat
                        ? 999999999999
                        : this._duration * (this._repeat + 1) +
                          this._repeatDelay * this._repeat)),
                  this._totalDuration);
            }),
            (s.time = function(t, e) {
              return arguments.length
                ? (this._dirty && this.totalDuration(),
                  t > this._duration && (t = this._duration),
                  this._yoyo && 0 != (1 & this._cycle)
                    ? (t =
                        this._duration -
                        t +
                        this._cycle * (this._duration + this._repeatDelay))
                    : 0 !== this._repeat &&
                      (t += this._cycle * (this._duration + this._repeatDelay)),
                  this.totalTime(t, e))
                : this._time;
            }),
            (s.repeat = function(t) {
              return arguments.length
                ? ((this._repeat = t), this._uncache(!0))
                : this._repeat;
            }),
            (s.repeatDelay = function(t) {
              return arguments.length
                ? ((this._repeatDelay = t), this._uncache(!0))
                : this._repeatDelay;
            }),
            (s.yoyo = function(t) {
              return arguments.length ? ((this._yoyo = t), this) : this._yoyo;
            }),
            (s.currentLabel = function(t) {
              return arguments.length
                ? this.seek(t, !0)
                : this.getLabelBefore(this._time + 1e-8);
            }),
            t
          );
        },
        !0
      );
      var f = i.g.TimelineMax,
        p = 180 / Math.PI,
        m = [],
        g = [],
        v = [],
        _ = {},
        y = i.e._gsDefine.globals,
        x = function(t, e, n, i) {
          n === i && (n = i - (i - e) / 1e6),
            t === e && (e = t + (n - t) / 1e6),
            (this.a = t),
            (this.b = e),
            (this.c = n),
            (this.d = i),
            (this.da = i - t),
            (this.ca = n - t),
            (this.ba = e - t);
        },
        b = function(t, e, n, i) {
          var r = { a: t },
            a = {},
            o = {},
            s = { c: i },
            l = (t + e) / 2,
            c = (e + n) / 2,
            h = (n + i) / 2,
            u = (l + c) / 2,
            d = (c + h) / 2,
            f = (d - u) / 8;
          return (
            (r.b = l + (t - l) / 4),
            (a.b = u + f),
            (r.c = a.a = (r.b + a.b) / 2),
            (a.c = o.a = (u + d) / 2),
            (o.b = d - f),
            (s.b = h + (i - h) / 4),
            (o.c = s.a = (o.b + s.b) / 2),
            [r, a, o, s]
          );
        },
        w = function(t, e, n, i, r) {
          var a,
            o,
            s,
            l,
            c,
            h,
            u,
            d,
            f,
            p,
            _,
            y,
            x,
            w = t.length - 1,
            T = 0,
            M = t[0].a;
          for (a = 0; a < w; a++)
            (o = (c = t[T]).a),
              (s = c.d),
              (l = t[T + 1].d),
              r
                ? ((_ = m[a]),
                  (x = ((y = g[a]) + _) * e * 0.25 / (i ? 0.5 : v[a] || 0.5)),
                  (d =
                    s -
                    ((h = s - (s - o) * (i ? 0.5 * e : 0 !== _ ? x / _ : 0)) +
                      (((u =
                        s + (l - s) * (i ? 0.5 * e : 0 !== y ? x / y : 0)) -
                        h) *
                        (3 * _ / (_ + y) + 0.5) /
                        4 || 0))))
                : (d =
                    s -
                    ((h = s - (s - o) * e * 0.5) +
                      (u = s + (l - s) * e * 0.5)) /
                      2),
              (h += d),
              (u += d),
              (c.c = f = h),
              (c.b = 0 !== a ? M : (M = c.a + 0.6 * (c.c - c.a))),
              (c.da = s - o),
              (c.ca = f - o),
              (c.ba = M - o),
              n
                ? ((p = b(o, M, f, s)),
                  t.splice(T, 1, p[0], p[1], p[2], p[3]),
                  (T += 4))
                : T++,
              (M = u);
          ((c = t[T]).b = M),
            (c.c = M + 0.4 * (c.d - M)),
            (c.da = c.d - c.a),
            (c.ca = c.c - c.a),
            (c.ba = M - c.a),
            n &&
              ((p = b(c.a, M, c.c, c.d)),
              t.splice(T, 1, p[0], p[1], p[2], p[3]));
        },
        T = function(t, e, n, i) {
          var r,
            a,
            o,
            s,
            l,
            c,
            h = [];
          if (i)
            for (a = (t = [i].concat(t)).length; --a > -1; )
              "string" == typeof (c = t[a][e]) &&
                "=" === c.charAt(1) &&
                (t[a][e] = i[e] + Number(c.charAt(0) + c.substr(2)));
          if ((r = t.length - 2) < 0)
            return (h[0] = new x(t[0][e], 0, 0, t[0][e])), h;
          for (a = 0; a < r; a++)
            (o = t[a][e]),
              (s = t[a + 1][e]),
              (h[a] = new x(o, 0, 0, s)),
              n &&
                ((l = t[a + 2][e]),
                (m[a] = (m[a] || 0) + (s - o) * (s - o)),
                (g[a] = (g[a] || 0) + (l - s) * (l - s)));
          return (h[a] = new x(t[a][e], 0, 0, t[a + 1][e])), h;
        },
        M = function(t, e, n, i, r, a) {
          var o,
            s,
            l,
            c,
            h,
            u,
            d,
            f,
            p = {},
            y = [],
            x = a || t[0];
          for (s in ((r =
            "string" == typeof r
              ? "," + r + ","
              : ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,"),
          null == e && (e = 1),
          t[0]))
            y.push(s);
          if (t.length > 1) {
            for (f = t[t.length - 1], d = !0, o = y.length; --o > -1; )
              if (((s = y[o]), Math.abs(x[s] - f[s]) > 0.05)) {
                d = !1;
                break;
              }
            d &&
              ((t = t.concat()),
              a && t.unshift(a),
              t.push(t[1]),
              (a = t[t.length - 3]));
          }
          for (m.length = g.length = v.length = 0, o = y.length; --o > -1; )
            (s = y[o]),
              (_[s] = -1 !== r.indexOf("," + s + ",")),
              (p[s] = T(t, s, _[s], a));
          for (o = m.length; --o > -1; )
            (m[o] = Math.sqrt(m[o])), (g[o] = Math.sqrt(g[o]));
          if (!i) {
            for (o = y.length; --o > -1; )
              if (_[s])
                for (u = (l = p[y[o]]).length - 1, c = 0; c < u; c++)
                  (h = l[c + 1].da / g[c] + l[c].da / m[c] || 0),
                    (v[c] = (v[c] || 0) + h * h);
            for (o = v.length; --o > -1; ) v[o] = Math.sqrt(v[o]);
          }
          for (o = y.length, c = n ? 4 : 1; --o > -1; )
            (l = p[(s = y[o])]),
              w(l, e, n, i, _[s]),
              d && (l.splice(0, c), l.splice(l.length - c, c));
          return p;
        },
        E = function(t, e, n) {
          for (
            var i, r, a, o, s, l, c, h, u, d, f, p = 1 / n, m = t.length;
            --m > -1;

          )
            for (
              a = (d = t[m]).a,
                o = d.d - a,
                s = d.c - a,
                l = d.b - a,
                i = r = 0,
                h = 1;
              h <= n;
              h++
            )
              (i =
                r -
                (r =
                  ((c = p * h) * c * o + 3 * (u = 1 - c) * (c * s + u * l)) *
                  c)),
                (e[(f = m * n + h - 1)] = (e[f] || 0) + i * i);
        },
        S = i.e._gsDefine.plugin({
          propName: "bezier",
          priority: -1,
          version: "1.3.8",
          API: 2,
          global: !0,
          init: function(t, e, n) {
            (this._target = t),
              e instanceof Array && (e = { values: e }),
              (this._func = {}),
              (this._mod = {}),
              (this._props = []),
              (this._timeRes =
                null == e.timeResolution ? 6 : parseInt(e.timeResolution, 10));
            var i,
              r,
              a,
              o,
              s,
              l = e.values || [],
              c = {},
              h = l[0],
              u = e.autoRotate || n.vars.orientToBezier;
            for (i in ((this._autoRotate = u
              ? u instanceof Array
                ? u
                : [["x", "y", "rotation", !0 === u ? 0 : Number(u) || 0]]
              : null),
            h))
              this._props.push(i);
            for (a = this._props.length; --a > -1; )
              (i = this._props[a]),
                this._overwriteProps.push(i),
                (r = this._func[i] = "function" == typeof t[i]),
                (c[i] = r
                  ? t[
                      i.indexOf("set") ||
                      "function" != typeof t["get" + i.substr(3)]
                        ? i
                        : "get" + i.substr(3)
                    ]()
                  : parseFloat(t[i])),
                s || (c[i] !== l[0][i] && (s = c));
            if (
              ((this._beziers =
                "cubic" !== e.type &&
                "quadratic" !== e.type &&
                "soft" !== e.type
                  ? M(
                      l,
                      isNaN(e.curviness) ? 1 : e.curviness,
                      !1,
                      "thruBasic" === e.type,
                      e.correlate,
                      s
                    )
                  : (function(t, e, n) {
                      var i,
                        r,
                        a,
                        o,
                        s,
                        l,
                        c,
                        h,
                        u,
                        d,
                        f,
                        p = {},
                        m = "cubic" === (e = e || "soft") ? 3 : 2,
                        g = "soft" === e,
                        v = [];
                      if (
                        (g && n && (t = [n].concat(t)),
                        null == t || t.length < m + 1)
                      )
                        throw "invalid Bezier data";
                      for (u in t[0]) v.push(u);
                      for (l = v.length; --l > -1; ) {
                        for (
                          p[(u = v[l])] = s = [], d = 0, h = t.length, c = 0;
                          c < h;
                          c++
                        )
                          (i =
                            null == n
                              ? t[c][u]
                              : "string" == typeof (f = t[c][u]) &&
                                "=" === f.charAt(1)
                                ? n[u] + Number(f.charAt(0) + f.substr(2))
                                : Number(f)),
                            g &&
                              c > 1 &&
                              c < h - 1 &&
                              (s[d++] = (i + s[d - 2]) / 2),
                            (s[d++] = i);
                        for (h = d - m + 1, d = 0, c = 0; c < h; c += m)
                          (i = s[c]),
                            (r = s[c + 1]),
                            (a = s[c + 2]),
                            (o = 2 === m ? 0 : s[c + 3]),
                            (s[d++] = f =
                              3 === m
                                ? new x(i, r, a, o)
                                : new x(
                                    i,
                                    (2 * r + i) / 3,
                                    (2 * r + a) / 3,
                                    a
                                  ));
                        s.length = d;
                      }
                      return p;
                    })(l, e.type, c)),
              (this._segCount = this._beziers[i].length),
              this._timeRes)
            ) {
              var d = (function(t, e) {
                var n,
                  i,
                  r,
                  a,
                  o = [],
                  s = [],
                  l = 0,
                  c = 0,
                  h = (e = e >> 0 || 6) - 1,
                  u = [],
                  d = [];
                for (n in t) E(t[n], o, e);
                for (r = o.length, i = 0; i < r; i++)
                  (l += Math.sqrt(o[i])),
                    (d[(a = i % e)] = l),
                    a === h &&
                      ((c += l),
                      (u[(a = (i / e) >> 0)] = d),
                      (s[a] = c),
                      (l = 0),
                      (d = []));
                return { length: c, lengths: s, segments: u };
              })(this._beziers, this._timeRes);
              (this._length = d.length),
                (this._lengths = d.lengths),
                (this._segments = d.segments),
                (this._l1 = this._li = this._s1 = this._si = 0),
                (this._l2 = this._lengths[0]),
                (this._curSeg = this._segments[0]),
                (this._s2 = this._curSeg[0]),
                (this._prec = 1 / this._curSeg.length);
            }
            if ((u = this._autoRotate))
              for (
                this._initialRotations = [],
                  u[0] instanceof Array || (this._autoRotate = u = [u]),
                  a = u.length;
                --a > -1;

              ) {
                for (o = 0; o < 3; o++)
                  (i = u[a][o]),
                    (this._func[i] =
                      "function" == typeof t[i] &&
                      t[
                        i.indexOf("set") ||
                        "function" != typeof t["get" + i.substr(3)]
                          ? i
                          : "get" + i.substr(3)
                      ]);
                (i = u[a][2]),
                  (this._initialRotations[a] =
                    (this._func[i]
                      ? this._func[i].call(this._target)
                      : this._target[i]) || 0),
                  this._overwriteProps.push(i);
              }
            return (this._startRatio = n.vars.runBackwards ? 1 : 0), !0;
          },
          set: function(t) {
            var e,
              n,
              i,
              r,
              a,
              o,
              s,
              l,
              c,
              h,
              u = this._segCount,
              d = this._func,
              f = this._target,
              m = t !== this._startRatio;
            if (this._timeRes) {
              if (
                ((c = this._lengths),
                (h = this._curSeg),
                (t *= this._length),
                (i = this._li),
                t > this._l2 && i < u - 1)
              ) {
                for (l = u - 1; i < l && (this._l2 = c[++i]) <= t; );
                (this._l1 = c[i - 1]),
                  (this._li = i),
                  (this._curSeg = h = this._segments[i]),
                  (this._s2 = h[(this._s1 = this._si = 0)]);
              } else if (t < this._l1 && i > 0) {
                for (; i > 0 && (this._l1 = c[--i]) >= t; );
                0 === i && t < this._l1 ? (this._l1 = 0) : i++,
                  (this._l2 = c[i]),
                  (this._li = i),
                  (this._curSeg = h = this._segments[i]),
                  (this._s1 = h[(this._si = h.length - 1) - 1] || 0),
                  (this._s2 = h[this._si]);
              }
              if (
                ((e = i),
                (t -= this._l1),
                (i = this._si),
                t > this._s2 && i < h.length - 1)
              ) {
                for (l = h.length - 1; i < l && (this._s2 = h[++i]) <= t; );
                (this._s1 = h[i - 1]), (this._si = i);
              } else if (t < this._s1 && i > 0) {
                for (; i > 0 && (this._s1 = h[--i]) >= t; );
                0 === i && t < this._s1 ? (this._s1 = 0) : i++,
                  (this._s2 = h[i]),
                  (this._si = i);
              }
              o =
                (i + (t - this._s1) / (this._s2 - this._s1)) * this._prec || 0;
            } else
              o =
                (t -
                  (e = t < 0 ? 0 : t >= 1 ? u - 1 : (u * t) >> 0) * (1 / u)) *
                u;
            for (n = 1 - o, i = this._props.length; --i > -1; )
              (r = this._props[i]),
                (s =
                  (o * o * (a = this._beziers[r][e]).da +
                    3 * n * (o * a.ca + n * a.ba)) *
                    o +
                  a.a),
                this._mod[r] && (s = this._mod[r](s, f)),
                d[r] ? f[r](s) : (f[r] = s);
            if (this._autoRotate) {
              var g,
                v,
                _,
                y,
                x,
                b,
                w,
                T = this._autoRotate;
              for (i = T.length; --i > -1; )
                (r = T[i][2]),
                  (b = T[i][3] || 0),
                  (w = !0 === T[i][4] ? 1 : p),
                  (a = this._beziers[T[i][0]]),
                  (g = this._beziers[T[i][1]]),
                  a &&
                    g &&
                    ((a = a[e]),
                    (g = g[e]),
                    (v = a.a + (a.b - a.a) * o),
                    (v += ((y = a.b + (a.c - a.b) * o) - v) * o),
                    (y += (a.c + (a.d - a.c) * o - y) * o),
                    (_ = g.a + (g.b - g.a) * o),
                    (_ += ((x = g.b + (g.c - g.b) * o) - _) * o),
                    (x += (g.c + (g.d - g.c) * o - x) * o),
                    (s = m
                      ? Math.atan2(x - _, y - v) * w + b
                      : this._initialRotations[i]),
                    this._mod[r] && (s = this._mod[r](s, f)),
                    d[r] ? f[r](s) : (f[r] = s));
            }
          }
        }),
        L = S.prototype;
      /*!
 * VERSION: 1.3.8
 * DATE: 2018-05-30
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2018, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 *
 * @author: Jack Doyle, jack@greensock.com
 **/ (S.bezierThrough = M),
        (S.cubicToQuadratic = b),
        (S._autoCSS = !0),
        (S.quadraticToCubic = function(t, e, n) {
          return new x(t, (2 * e + t) / 3, (2 * e + n) / 3, n);
        }),
        (S._cssRegister = function() {
          var t = y.CSSPlugin;
          if (t) {
            var e = t._internals,
              n = e._parseToProxy,
              i = e._setPluginRatio,
              r = e.CSSPropTween;
            e._registerComplexSpecialProp("bezier", {
              parser: function(t, e, a, o, s, l) {
                e instanceof Array && (e = { values: e }), (l = new S());
                var c,
                  h,
                  u,
                  d = e.values,
                  f = d.length - 1,
                  p = [],
                  m = {};
                if (f < 0) return s;
                for (c = 0; c <= f; c++)
                  (u = n(t, d[c], o, s, l, f !== c)), (p[c] = u.end);
                for (h in e) m[h] = e[h];
                return (
                  (m.values = p),
                  ((s = new r(t, "bezier", 0, 0, u.pt, 2)).data = u),
                  (s.plugin = l),
                  (s.setRatio = i),
                  0 === m.autoRotate && (m.autoRotate = !0),
                  !m.autoRotate ||
                    m.autoRotate instanceof Array ||
                    ((c = !0 === m.autoRotate ? 0 : Number(m.autoRotate)),
                    (m.autoRotate =
                      null != u.end.left
                        ? [["left", "top", "rotation", c, !1]]
                        : null != u.end.x && [["x", "y", "rotation", c, !1]])),
                  m.autoRotate &&
                    (o._transform || o._enableTransforms(!1),
                    (u.autoRotate = o._target._gsTransform),
                    (u.proxy.rotation = u.autoRotate.rotation || 0),
                    o._overwriteProps.push("rotation")),
                  l._onInitTween(u.proxy, m, o._tween),
                  s
                );
              }
            });
          }
        }),
        (L._mod = function(t) {
          for (var e, n = this._overwriteProps, i = n.length; --i > -1; )
            (e = t[n[i]]) && "function" == typeof e && (this._mod[n[i]] = e);
        }),
        (L._kill = function(t) {
          var e,
            n,
            i = this._props;
          for (e in this._beziers)
            if (e in t)
              for (
                delete this._beziers[e], delete this._func[e], n = i.length;
                --n > -1;

              )
                i[n] === e && i.splice(n, 1);
          if ((i = this._autoRotate))
            for (n = i.length; --n > -1; ) t[i[n][2]] && i.splice(n, 1);
          return this._super._kill.call(this, t);
        }),
        /*!
 * VERSION: 1.16.1
 * DATE: 2018-08-27
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2018, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 *
 * @author: Jack Doyle, jack@greensock.com
 **/
        i.e._gsDefine(
          "easing.Back",
          ["easing.Ease"],
          function() {
            var t,
              e,
              n,
              r,
              a = i.e.GreenSockGlobals || i.e,
              o = a.com.greensock,
              s = 2 * Math.PI,
              l = Math.PI / 2,
              c = o._class,
              h = function(t, e) {
                var n = c("easing." + t, function() {}, !0),
                  r = (n.prototype = new i.b());
                return (r.constructor = n), (r.getRatio = e), n;
              },
              u = i.b.register || function() {},
              d = function(t, e, n, i, r) {
                var a = c(
                  "easing." + t,
                  { easeOut: new e(), easeIn: new n(), easeInOut: new i() },
                  !0
                );
                return u(a, t), a;
              },
              f = function(t, e, n) {
                (this.t = t),
                  (this.v = e),
                  n &&
                    ((this.next = n),
                    (n.prev = this),
                    (this.c = n.v - e),
                    (this.gap = n.t - t));
              },
              p = function(t, e) {
                var n = c(
                    "easing." + t,
                    function(t) {
                      (this._p1 = t || 0 === t ? t : 1.70158),
                        (this._p2 = 1.525 * this._p1);
                    },
                    !0
                  ),
                  r = (n.prototype = new i.b());
                return (
                  (r.constructor = n),
                  (r.getRatio = e),
                  (r.config = function(t) {
                    return new n(t);
                  }),
                  n
                );
              },
              m = d(
                "Back",
                p("BackOut", function(t) {
                  return (t -= 1) * t * ((this._p1 + 1) * t + this._p1) + 1;
                }),
                p("BackIn", function(t) {
                  return t * t * ((this._p1 + 1) * t - this._p1);
                }),
                p("BackInOut", function(t) {
                  return (t *= 2) < 1
                    ? 0.5 * t * t * ((this._p2 + 1) * t - this._p2)
                    : 0.5 *
                        ((t -= 2) * t * ((this._p2 + 1) * t + this._p2) + 2);
                })
              ),
              g = c(
                "easing.SlowMo",
                function(t, e, n) {
                  (e = e || 0 === e ? e : 0.7),
                    null == t ? (t = 0.7) : t > 1 && (t = 1),
                    (this._p = 1 !== t ? e : 0),
                    (this._p1 = (1 - t) / 2),
                    (this._p2 = t),
                    (this._p3 = this._p1 + this._p2),
                    (this._calcEnd = !0 === n);
                },
                !0
              ),
              v = (g.prototype = new i.b());
            return (
              (v.constructor = g),
              (v.getRatio = function(t) {
                var e = t + (0.5 - t) * this._p;
                return t < this._p1
                  ? this._calcEnd
                    ? 1 - (t = 1 - t / this._p1) * t
                    : e - (t = 1 - t / this._p1) * t * t * t * e
                  : t > this._p3
                    ? this._calcEnd
                      ? 1 === t ? 0 : 1 - (t = (t - this._p3) / this._p1) * t
                      : e +
                        (t - e) * (t = (t - this._p3) / this._p1) * t * t * t
                    : this._calcEnd ? 1 : e;
              }),
              (g.ease = new g(0.7, 0.7)),
              (v.config = g.config = function(t, e, n) {
                return new g(t, e, n);
              }),
              ((v = (t = c(
                "easing.SteppedEase",
                function(t, e) {
                  (t = t || 1),
                    (this._p1 = 1 / t),
                    (this._p2 = t + (e ? 0 : 1)),
                    (this._p3 = e ? 1 : 0);
                },
                !0
              )).prototype = new i.b()).constructor = t),
              (v.getRatio = function(t) {
                return (
                  t < 0 ? (t = 0) : t >= 1 && (t = 0.999999999),
                  (((this._p2 * t) | 0) + this._p3) * this._p1
                );
              }),
              (v.config = t.config = function(e, n) {
                return new t(e, n);
              }),
              ((v = (e = c(
                "easing.ExpoScaleEase",
                function(t, e, n) {
                  (this._p1 = Math.log(e / t)),
                    (this._p2 = e - t),
                    (this._p3 = t),
                    (this._ease = n);
                },
                !0
              )).prototype = new i.b()).constructor = e),
              (v.getRatio = function(t) {
                return (
                  this._ease && (t = this._ease.getRatio(t)),
                  (this._p3 * Math.exp(this._p1 * t) - this._p3) / this._p2
                );
              }),
              (v.config = e.config = function(t, n, i) {
                return new e(t, n, i);
              }),
              ((v = (n = c(
                "easing.RoughEase",
                function(t) {
                  for (
                    var e,
                      n,
                      r,
                      a,
                      o,
                      s,
                      l = (t = t || {}).taper || "none",
                      c = [],
                      h = 0,
                      u = 0 | (t.points || 20),
                      d = u,
                      p = !1 !== t.randomize,
                      m = !0 === t.clamp,
                      g = t.template instanceof i.b ? t.template : null,
                      v =
                        "number" == typeof t.strength ? 0.4 * t.strength : 0.4;
                    --d > -1;

                  )
                    (e = p ? Math.random() : 1 / u * d),
                      (n = g ? g.getRatio(e) : e),
                      (r =
                        "none" === l
                          ? v
                          : "out" === l
                            ? (a = 1 - e) * a * v
                            : "in" === l
                              ? e * e * v
                              : e < 0.5
                                ? (a = 2 * e) * a * 0.5 * v
                                : (a = 2 * (1 - e)) * a * 0.5 * v),
                      p
                        ? (n += Math.random() * r - 0.5 * r)
                        : d % 2 ? (n += 0.5 * r) : (n -= 0.5 * r),
                      m && (n > 1 ? (n = 1) : n < 0 && (n = 0)),
                      (c[h++] = { x: e, y: n });
                  for (
                    c.sort(function(t, e) {
                      return t.x - e.x;
                    }),
                      s = new f(1, 1, null),
                      d = u;
                    --d > -1;

                  )
                    (o = c[d]), (s = new f(o.x, o.y, s));
                  this._prev = new f(0, 0, 0 !== s.t ? s : s.next);
                },
                !0
              )).prototype = new i.b()).constructor = n),
              (v.getRatio = function(t) {
                var e = this._prev;
                if (t > e.t) {
                  for (; e.next && t >= e.t; ) e = e.next;
                  e = e.prev;
                } else for (; e.prev && t <= e.t; ) e = e.prev;
                return (this._prev = e), e.v + (t - e.t) / e.gap * e.c;
              }),
              (v.config = function(t) {
                return new n(t);
              }),
              (n.ease = new n()),
              d(
                "Bounce",
                h("BounceOut", function(t) {
                  return t < 1 / 2.75
                    ? 7.5625 * t * t
                    : t < 2 / 2.75
                      ? 7.5625 * (t -= 1.5 / 2.75) * t + 0.75
                      : t < 2.5 / 2.75
                        ? 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375
                        : 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;
                }),
                h("BounceIn", function(t) {
                  return (t = 1 - t) < 1 / 2.75
                    ? 1 - 7.5625 * t * t
                    : t < 2 / 2.75
                      ? 1 - (7.5625 * (t -= 1.5 / 2.75) * t + 0.75)
                      : t < 2.5 / 2.75
                        ? 1 - (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375)
                        : 1 - (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375);
                }),
                h("BounceInOut", function(t) {
                  var e = t < 0.5;
                  return (
                    (t = e ? 1 - 2 * t : 2 * t - 1) < 1 / 2.75
                      ? (t *= 7.5625 * t)
                      : (t =
                          t < 2 / 2.75
                            ? 7.5625 * (t -= 1.5 / 2.75) * t + 0.75
                            : t < 2.5 / 2.75
                              ? 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375
                              : 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375),
                    e ? 0.5 * (1 - t) : 0.5 * t + 0.5
                  );
                })
              ),
              d(
                "Circ",
                h("CircOut", function(t) {
                  return Math.sqrt(1 - (t -= 1) * t);
                }),
                h("CircIn", function(t) {
                  return -(Math.sqrt(1 - t * t) - 1);
                }),
                h("CircInOut", function(t) {
                  return (t *= 2) < 1
                    ? -0.5 * (Math.sqrt(1 - t * t) - 1)
                    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
                })
              ),
              d(
                "Elastic",
                (r = function(t, e, n) {
                  var r = c(
                      "easing." + t,
                      function(t, e) {
                        (this._p1 = t >= 1 ? t : 1),
                          (this._p2 = (e || n) / (t < 1 ? t : 1)),
                          (this._p3 =
                            this._p2 / s * (Math.asin(1 / this._p1) || 0)),
                          (this._p2 = s / this._p2);
                      },
                      !0
                    ),
                    a = (r.prototype = new i.b());
                  return (
                    (a.constructor = r),
                    (a.getRatio = e),
                    (a.config = function(t, e) {
                      return new r(t, e);
                    }),
                    r
                  );
                })(
                  "ElasticOut",
                  function(t) {
                    return (
                      this._p1 *
                        Math.pow(2, -10 * t) *
                        Math.sin((t - this._p3) * this._p2) +
                      1
                    );
                  },
                  0.3
                ),
                r(
                  "ElasticIn",
                  function(t) {
                    return (
                      -this._p1 *
                      Math.pow(2, 10 * (t -= 1)) *
                      Math.sin((t - this._p3) * this._p2)
                    );
                  },
                  0.3
                ),
                r(
                  "ElasticInOut",
                  function(t) {
                    return (t *= 2) < 1
                      ? this._p1 *
                          Math.pow(2, 10 * (t -= 1)) *
                          Math.sin((t - this._p3) * this._p2) *
                          -0.5
                      : this._p1 *
                          Math.pow(2, -10 * (t -= 1)) *
                          Math.sin((t - this._p3) * this._p2) *
                          0.5 +
                          1;
                  },
                  0.45
                )
              ),
              d(
                "Expo",
                h("ExpoOut", function(t) {
                  return 1 - Math.pow(2, -10 * t);
                }),
                h("ExpoIn", function(t) {
                  return Math.pow(2, 10 * (t - 1)) - 0.001;
                }),
                h("ExpoInOut", function(t) {
                  return (t *= 2) < 1
                    ? 0.5 * Math.pow(2, 10 * (t - 1))
                    : 0.5 * (2 - Math.pow(2, -10 * (t - 1)));
                })
              ),
              d(
                "Sine",
                h("SineOut", function(t) {
                  return Math.sin(t * l);
                }),
                h("SineIn", function(t) {
                  return 1 - Math.cos(t * l);
                }),
                h("SineInOut", function(t) {
                  return -0.5 * (Math.cos(Math.PI * t) - 1);
                })
              ),
              c(
                "easing.EaseLookup",
                {
                  find: function(t) {
                    return i.b.map[t];
                  }
                },
                !0
              ),
              u(a.SlowMo, "SlowMo", "ease,"),
              u(n, "RoughEase", "ease,"),
              u(t, "SteppedEase", "ease,"),
              m
            );
          },
          !0
        );
      var P = i.g.Back,
        A = i.g.Elastic,
        R = i.g.Bounce,
        C = i.g.RoughEase,
        D = i.g.SlowMo,
        O = i.g.SteppedEase,
        I = i.g.Circ,
        N = i.g.Expo,
        U = i.g.Sine,
        F = i.g.ExpoScaleEase,
        z = r;
      (z._autoActivated = [d, f, a, o, S, s, u, P, A, R, C, D, O, I, N, U, F]),
        n.d(e, "a", function() {
          return z;
        });
    },
    function(t, e, n) {
      "use strict";
      n.d(e, "a", function() {
        return d;
      });
      var i,
        r,
        a,
        o,
        s,
        l,
        c,
        h,
        u = n(1);
      function d() {
        (this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
          arguments.length > 0 &&
            console.error(
              "THREE.Matrix4: the constructor no longer reads arguments. use .set() instead."
            );
      }
      Object.assign(d.prototype, {
        isMatrix4: !0,
        set: function(t, e, n, i, r, a, o, s, l, c, h, u, d, f, p, m) {
          var g = this.elements;
          return (
            (g[0] = t),
            (g[4] = e),
            (g[8] = n),
            (g[12] = i),
            (g[1] = r),
            (g[5] = a),
            (g[9] = o),
            (g[13] = s),
            (g[2] = l),
            (g[6] = c),
            (g[10] = h),
            (g[14] = u),
            (g[3] = d),
            (g[7] = f),
            (g[11] = p),
            (g[15] = m),
            this
          );
        },
        identity: function() {
          return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
        },
        clone: function() {
          return new d().fromArray(this.elements);
        },
        copy: function(t) {
          var e = this.elements,
            n = t.elements;
          return (
            (e[0] = n[0]),
            (e[1] = n[1]),
            (e[2] = n[2]),
            (e[3] = n[3]),
            (e[4] = n[4]),
            (e[5] = n[5]),
            (e[6] = n[6]),
            (e[7] = n[7]),
            (e[8] = n[8]),
            (e[9] = n[9]),
            (e[10] = n[10]),
            (e[11] = n[11]),
            (e[12] = n[12]),
            (e[13] = n[13]),
            (e[14] = n[14]),
            (e[15] = n[15]),
            this
          );
        },
        copyPosition: function(t) {
          var e = this.elements,
            n = t.elements;
          return (e[12] = n[12]), (e[13] = n[13]), (e[14] = n[14]), this;
        },
        extractBasis: function(t, e, n) {
          return (
            t.setFromMatrixColumn(this, 0),
            e.setFromMatrixColumn(this, 1),
            n.setFromMatrixColumn(this, 2),
            this
          );
        },
        makeBasis: function(t, e, n) {
          return (
            this.set(
              t.x,
              e.x,
              n.x,
              0,
              t.y,
              e.y,
              n.y,
              0,
              t.z,
              e.z,
              n.z,
              0,
              0,
              0,
              0,
              1
            ),
            this
          );
        },
        extractRotation: ((h = new u.a()),
        function(t) {
          var e = this.elements,
            n = t.elements,
            i = 1 / h.setFromMatrixColumn(t, 0).length(),
            r = 1 / h.setFromMatrixColumn(t, 1).length(),
            a = 1 / h.setFromMatrixColumn(t, 2).length();
          return (
            (e[0] = n[0] * i),
            (e[1] = n[1] * i),
            (e[2] = n[2] * i),
            (e[3] = 0),
            (e[4] = n[4] * r),
            (e[5] = n[5] * r),
            (e[6] = n[6] * r),
            (e[7] = 0),
            (e[8] = n[8] * a),
            (e[9] = n[9] * a),
            (e[10] = n[10] * a),
            (e[11] = 0),
            (e[12] = 0),
            (e[13] = 0),
            (e[14] = 0),
            (e[15] = 1),
            this
          );
        }),
        makeRotationFromEuler: function(t) {
          (t && t.isEuler) ||
            console.error(
              "THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order."
            );
          var e = this.elements,
            n = t.x,
            i = t.y,
            r = t.z,
            a = Math.cos(n),
            o = Math.sin(n),
            s = Math.cos(i),
            l = Math.sin(i),
            c = Math.cos(r),
            h = Math.sin(r);
          if ("XYZ" === t.order) {
            var u = a * c,
              d = a * h,
              f = o * c,
              p = o * h;
            (e[0] = s * c),
              (e[4] = -s * h),
              (e[8] = l),
              (e[1] = d + f * l),
              (e[5] = u - p * l),
              (e[9] = -o * s),
              (e[2] = p - u * l),
              (e[6] = f + d * l),
              (e[10] = a * s);
          } else if ("YXZ" === t.order) {
            var m = s * c,
              g = s * h,
              v = l * c,
              _ = l * h;
            (e[0] = m + _ * o),
              (e[4] = v * o - g),
              (e[8] = a * l),
              (e[1] = a * h),
              (e[5] = a * c),
              (e[9] = -o),
              (e[2] = g * o - v),
              (e[6] = _ + m * o),
              (e[10] = a * s);
          } else if ("ZXY" === t.order) {
            (m = s * c), (g = s * h), (v = l * c), (_ = l * h);
            (e[0] = m - _ * o),
              (e[4] = -a * h),
              (e[8] = v + g * o),
              (e[1] = g + v * o),
              (e[5] = a * c),
              (e[9] = _ - m * o),
              (e[2] = -a * l),
              (e[6] = o),
              (e[10] = a * s);
          } else if ("ZYX" === t.order) {
            (u = a * c), (d = a * h), (f = o * c), (p = o * h);
            (e[0] = s * c),
              (e[4] = f * l - d),
              (e[8] = u * l + p),
              (e[1] = s * h),
              (e[5] = p * l + u),
              (e[9] = d * l - f),
              (e[2] = -l),
              (e[6] = o * s),
              (e[10] = a * s);
          } else if ("YZX" === t.order) {
            var y = a * s,
              x = a * l,
              b = o * s,
              w = o * l;
            (e[0] = s * c),
              (e[4] = w - y * h),
              (e[8] = b * h + x),
              (e[1] = h),
              (e[5] = a * c),
              (e[9] = -o * c),
              (e[2] = -l * c),
              (e[6] = x * h + b),
              (e[10] = y - w * h);
          } else if ("XZY" === t.order) {
            (y = a * s), (x = a * l), (b = o * s), (w = o * l);
            (e[0] = s * c),
              (e[4] = -h),
              (e[8] = l * c),
              (e[1] = y * h + w),
              (e[5] = a * c),
              (e[9] = x * h - b),
              (e[2] = b * h - x),
              (e[6] = o * c),
              (e[10] = w * h + y);
          }
          return (
            (e[3] = 0),
            (e[7] = 0),
            (e[11] = 0),
            (e[12] = 0),
            (e[13] = 0),
            (e[14] = 0),
            (e[15] = 1),
            this
          );
        },
        makeRotationFromQuaternion: ((l = new u.a(0, 0, 0)),
        (c = new u.a(1, 1, 1)),
        function(t) {
          return this.compose(l, t, c);
        }),
        lookAt: ((a = new u.a()),
        (o = new u.a()),
        (s = new u.a()),
        function(t, e, n) {
          var i = this.elements;
          return (
            s.subVectors(t, e),
            0 === s.lengthSq() && (s.z = 1),
            s.normalize(),
            a.crossVectors(n, s),
            0 === a.lengthSq() &&
              (1 === Math.abs(n.z) ? (s.x += 1e-4) : (s.z += 1e-4),
              s.normalize(),
              a.crossVectors(n, s)),
            a.normalize(),
            o.crossVectors(s, a),
            (i[0] = a.x),
            (i[4] = o.x),
            (i[8] = s.x),
            (i[1] = a.y),
            (i[5] = o.y),
            (i[9] = s.y),
            (i[2] = a.z),
            (i[6] = o.z),
            (i[10] = s.z),
            this
          );
        }),
        multiply: function(t, e) {
          return void 0 !== e
            ? (console.warn(
                "THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."
              ),
              this.multiplyMatrices(t, e))
            : this.multiplyMatrices(this, t);
        },
        premultiply: function(t) {
          return this.multiplyMatrices(t, this);
        },
        multiplyMatrices: function(t, e) {
          var n = t.elements,
            i = e.elements,
            r = this.elements,
            a = n[0],
            o = n[4],
            s = n[8],
            l = n[12],
            c = n[1],
            h = n[5],
            u = n[9],
            d = n[13],
            f = n[2],
            p = n[6],
            m = n[10],
            g = n[14],
            v = n[3],
            _ = n[7],
            y = n[11],
            x = n[15],
            b = i[0],
            w = i[4],
            T = i[8],
            M = i[12],
            E = i[1],
            S = i[5],
            L = i[9],
            P = i[13],
            A = i[2],
            R = i[6],
            C = i[10],
            D = i[14],
            O = i[3],
            I = i[7],
            N = i[11],
            U = i[15];
          return (
            (r[0] = a * b + o * E + s * A + l * O),
            (r[4] = a * w + o * S + s * R + l * I),
            (r[8] = a * T + o * L + s * C + l * N),
            (r[12] = a * M + o * P + s * D + l * U),
            (r[1] = c * b + h * E + u * A + d * O),
            (r[5] = c * w + h * S + u * R + d * I),
            (r[9] = c * T + h * L + u * C + d * N),
            (r[13] = c * M + h * P + u * D + d * U),
            (r[2] = f * b + p * E + m * A + g * O),
            (r[6] = f * w + p * S + m * R + g * I),
            (r[10] = f * T + p * L + m * C + g * N),
            (r[14] = f * M + p * P + m * D + g * U),
            (r[3] = v * b + _ * E + y * A + x * O),
            (r[7] = v * w + _ * S + y * R + x * I),
            (r[11] = v * T + _ * L + y * C + x * N),
            (r[15] = v * M + _ * P + y * D + x * U),
            this
          );
        },
        multiplyScalar: function(t) {
          var e = this.elements;
          return (
            (e[0] *= t),
            (e[4] *= t),
            (e[8] *= t),
            (e[12] *= t),
            (e[1] *= t),
            (e[5] *= t),
            (e[9] *= t),
            (e[13] *= t),
            (e[2] *= t),
            (e[6] *= t),
            (e[10] *= t),
            (e[14] *= t),
            (e[3] *= t),
            (e[7] *= t),
            (e[11] *= t),
            (e[15] *= t),
            this
          );
        },
        applyToBufferAttribute: (function() {
          var t = new u.a();
          return function(e) {
            for (var n = 0, i = e.count; n < i; n++)
              (t.x = e.getX(n)),
                (t.y = e.getY(n)),
                (t.z = e.getZ(n)),
                t.applyMatrix4(this),
                e.setXYZ(n, t.x, t.y, t.z);
            return e;
          };
        })(),
        determinant: function() {
          var t = this.elements,
            e = t[0],
            n = t[4],
            i = t[8],
            r = t[12],
            a = t[1],
            o = t[5],
            s = t[9],
            l = t[13],
            c = t[2],
            h = t[6],
            u = t[10],
            d = t[14];
          return (
            t[3] *
              (+r * s * h -
                i * l * h -
                r * o * u +
                n * l * u +
                i * o * d -
                n * s * d) +
            t[7] *
              (+e * s * d -
                e * l * u +
                r * a * u -
                i * a * d +
                i * l * c -
                r * s * c) +
            t[11] *
              (+e * l * h -
                e * o * d -
                r * a * h +
                n * a * d +
                r * o * c -
                n * l * c) +
            t[15] *
              (-i * o * c -
                e * s * h +
                e * o * u +
                i * a * h -
                n * a * u +
                n * s * c)
          );
        },
        transpose: function() {
          var t,
            e = this.elements;
          return (
            (t = e[1]),
            (e[1] = e[4]),
            (e[4] = t),
            (t = e[2]),
            (e[2] = e[8]),
            (e[8] = t),
            (t = e[6]),
            (e[6] = e[9]),
            (e[9] = t),
            (t = e[3]),
            (e[3] = e[12]),
            (e[12] = t),
            (t = e[7]),
            (e[7] = e[13]),
            (e[13] = t),
            (t = e[11]),
            (e[11] = e[14]),
            (e[14] = t),
            this
          );
        },
        setPosition: function(t) {
          var e = this.elements;
          return (e[12] = t.x), (e[13] = t.y), (e[14] = t.z), this;
        },
        getInverse: function(t, e) {
          var n = this.elements,
            i = t.elements,
            r = i[0],
            a = i[1],
            o = i[2],
            s = i[3],
            l = i[4],
            c = i[5],
            h = i[6],
            u = i[7],
            d = i[8],
            f = i[9],
            p = i[10],
            m = i[11],
            g = i[12],
            v = i[13],
            _ = i[14],
            y = i[15],
            x =
              f * _ * u -
              v * p * u +
              v * h * m -
              c * _ * m -
              f * h * y +
              c * p * y,
            b =
              g * p * u -
              d * _ * u -
              g * h * m +
              l * _ * m +
              d * h * y -
              l * p * y,
            w =
              d * v * u -
              g * f * u +
              g * c * m -
              l * v * m -
              d * c * y +
              l * f * y,
            T =
              g * f * h -
              d * v * h -
              g * c * p +
              l * v * p +
              d * c * _ -
              l * f * _,
            M = r * x + a * b + o * w + s * T;
          if (0 === M) {
            var E =
              "THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";
            if (!0 === e) throw new Error(E);
            return console.warn(E), this.identity();
          }
          var S = 1 / M;
          return (
            (n[0] = x * S),
            (n[1] =
              (v * p * s -
                f * _ * s -
                v * o * m +
                a * _ * m +
                f * o * y -
                a * p * y) *
              S),
            (n[2] =
              (c * _ * s -
                v * h * s +
                v * o * u -
                a * _ * u -
                c * o * y +
                a * h * y) *
              S),
            (n[3] =
              (f * h * s -
                c * p * s -
                f * o * u +
                a * p * u +
                c * o * m -
                a * h * m) *
              S),
            (n[4] = b * S),
            (n[5] =
              (d * _ * s -
                g * p * s +
                g * o * m -
                r * _ * m -
                d * o * y +
                r * p * y) *
              S),
            (n[6] =
              (g * h * s -
                l * _ * s -
                g * o * u +
                r * _ * u +
                l * o * y -
                r * h * y) *
              S),
            (n[7] =
              (l * p * s -
                d * h * s +
                d * o * u -
                r * p * u -
                l * o * m +
                r * h * m) *
              S),
            (n[8] = w * S),
            (n[9] =
              (g * f * s -
                d * v * s -
                g * a * m +
                r * v * m +
                d * a * y -
                r * f * y) *
              S),
            (n[10] =
              (l * v * s -
                g * c * s +
                g * a * u -
                r * v * u -
                l * a * y +
                r * c * y) *
              S),
            (n[11] =
              (d * c * s -
                l * f * s -
                d * a * u +
                r * f * u +
                l * a * m -
                r * c * m) *
              S),
            (n[12] = T * S),
            (n[13] =
              (d * v * o -
                g * f * o +
                g * a * p -
                r * v * p -
                d * a * _ +
                r * f * _) *
              S),
            (n[14] =
              (g * c * o -
                l * v * o -
                g * a * h +
                r * v * h +
                l * a * _ -
                r * c * _) *
              S),
            (n[15] =
              (l * f * o -
                d * c * o +
                d * a * h -
                r * f * h -
                l * a * p +
                r * c * p) *
              S),
            this
          );
        },
        scale: function(t) {
          var e = this.elements,
            n = t.x,
            i = t.y,
            r = t.z;
          return (
            (e[0] *= n),
            (e[4] *= i),
            (e[8] *= r),
            (e[1] *= n),
            (e[5] *= i),
            (e[9] *= r),
            (e[2] *= n),
            (e[6] *= i),
            (e[10] *= r),
            (e[3] *= n),
            (e[7] *= i),
            (e[11] *= r),
            this
          );
        },
        getMaxScaleOnAxis: function() {
          var t = this.elements,
            e = t[0] * t[0] + t[1] * t[1] + t[2] * t[2],
            n = t[4] * t[4] + t[5] * t[5] + t[6] * t[6],
            i = t[8] * t[8] + t[9] * t[9] + t[10] * t[10];
          return Math.sqrt(Math.max(e, n, i));
        },
        makeTranslation: function(t, e, n) {
          return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, n, 0, 0, 0, 1), this;
        },
        makeRotationX: function(t) {
          var e = Math.cos(t),
            n = Math.sin(t);
          return (
            this.set(1, 0, 0, 0, 0, e, -n, 0, 0, n, e, 0, 0, 0, 0, 1), this
          );
        },
        makeRotationY: function(t) {
          var e = Math.cos(t),
            n = Math.sin(t);
          return (
            this.set(e, 0, n, 0, 0, 1, 0, 0, -n, 0, e, 0, 0, 0, 0, 1), this
          );
        },
        makeRotationZ: function(t) {
          var e = Math.cos(t),
            n = Math.sin(t);
          return (
            this.set(e, -n, 0, 0, n, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
          );
        },
        makeRotationAxis: function(t, e) {
          var n = Math.cos(e),
            i = Math.sin(e),
            r = 1 - n,
            a = t.x,
            o = t.y,
            s = t.z,
            l = r * a,
            c = r * o;
          return (
            this.set(
              l * a + n,
              l * o - i * s,
              l * s + i * o,
              0,
              l * o + i * s,
              c * o + n,
              c * s - i * a,
              0,
              l * s - i * o,
              c * s + i * a,
              r * s * s + n,
              0,
              0,
              0,
              0,
              1
            ),
            this
          );
        },
        makeScale: function(t, e, n) {
          return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this;
        },
        makeShear: function(t, e, n) {
          return this.set(1, e, n, 0, t, 1, n, 0, t, e, 1, 0, 0, 0, 0, 1), this;
        },
        compose: function(t, e, n) {
          var i = this.elements,
            r = e._x,
            a = e._y,
            o = e._z,
            s = e._w,
            l = r + r,
            c = a + a,
            h = o + o,
            u = r * l,
            d = r * c,
            f = r * h,
            p = a * c,
            m = a * h,
            g = o * h,
            v = s * l,
            _ = s * c,
            y = s * h,
            x = n.x,
            b = n.y,
            w = n.z;
          return (
            (i[0] = (1 - (p + g)) * x),
            (i[1] = (d + y) * x),
            (i[2] = (f - _) * x),
            (i[3] = 0),
            (i[4] = (d - y) * b),
            (i[5] = (1 - (u + g)) * b),
            (i[6] = (m + v) * b),
            (i[7] = 0),
            (i[8] = (f + _) * w),
            (i[9] = (m - v) * w),
            (i[10] = (1 - (u + p)) * w),
            (i[11] = 0),
            (i[12] = t.x),
            (i[13] = t.y),
            (i[14] = t.z),
            (i[15] = 1),
            this
          );
        },
        decompose: ((i = new u.a()),
        (r = new d()),
        function(t, e, n) {
          var a = this.elements,
            o = i.set(a[0], a[1], a[2]).length(),
            s = i.set(a[4], a[5], a[6]).length(),
            l = i.set(a[8], a[9], a[10]).length();
          this.determinant() < 0 && (o = -o),
            (t.x = a[12]),
            (t.y = a[13]),
            (t.z = a[14]),
            r.copy(this);
          var c = 1 / o,
            h = 1 / s,
            u = 1 / l;
          return (
            (r.elements[0] *= c),
            (r.elements[1] *= c),
            (r.elements[2] *= c),
            (r.elements[4] *= h),
            (r.elements[5] *= h),
            (r.elements[6] *= h),
            (r.elements[8] *= u),
            (r.elements[9] *= u),
            (r.elements[10] *= u),
            e.setFromRotationMatrix(r),
            (n.x = o),
            (n.y = s),
            (n.z = l),
            this
          );
        }),
        makePerspective: function(t, e, n, i, r, a) {
          void 0 === a &&
            console.warn(
              "THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs."
            );
          var o = this.elements,
            s = 2 * r / (e - t),
            l = 2 * r / (n - i),
            c = (e + t) / (e - t),
            h = (n + i) / (n - i),
            u = -(a + r) / (a - r),
            d = -2 * a * r / (a - r);
          return (
            (o[0] = s),
            (o[4] = 0),
            (o[8] = c),
            (o[12] = 0),
            (o[1] = 0),
            (o[5] = l),
            (o[9] = h),
            (o[13] = 0),
            (o[2] = 0),
            (o[6] = 0),
            (o[10] = u),
            (o[14] = d),
            (o[3] = 0),
            (o[7] = 0),
            (o[11] = -1),
            (o[15] = 0),
            this
          );
        },
        makeOrthographic: function(t, e, n, i, r, a) {
          var o = this.elements,
            s = 1 / (e - t),
            l = 1 / (n - i),
            c = 1 / (a - r),
            h = (e + t) * s,
            u = (n + i) * l,
            d = (a + r) * c;
          return (
            (o[0] = 2 * s),
            (o[4] = 0),
            (o[8] = 0),
            (o[12] = -h),
            (o[1] = 0),
            (o[5] = 2 * l),
            (o[9] = 0),
            (o[13] = -u),
            (o[2] = 0),
            (o[6] = 0),
            (o[10] = -2 * c),
            (o[14] = -d),
            (o[3] = 0),
            (o[7] = 0),
            (o[11] = 0),
            (o[15] = 1),
            this
          );
        },
        equals: function(t) {
          for (var e = this.elements, n = t.elements, i = 0; i < 16; i++)
            if (e[i] !== n[i]) return !1;
          return !0;
        },
        fromArray: function(t, e) {
          void 0 === e && (e = 0);
          for (var n = 0; n < 16; n++) this.elements[n] = t[n + e];
          return this;
        },
        toArray: function(t, e) {
          void 0 === t && (t = []), void 0 === e && (e = 0);
          var n = this.elements;
          return (
            (t[e] = n[0]),
            (t[e + 1] = n[1]),
            (t[e + 2] = n[2]),
            (t[e + 3] = n[3]),
            (t[e + 4] = n[4]),
            (t[e + 5] = n[5]),
            (t[e + 6] = n[6]),
            (t[e + 7] = n[7]),
            (t[e + 8] = n[8]),
            (t[e + 9] = n[9]),
            (t[e + 10] = n[10]),
            (t[e + 11] = n[11]),
            (t[e + 12] = n[12]),
            (t[e + 13] = n[13]),
            (t[e + 14] = n[14]),
            (t[e + 15] = n[15]),
            t
          );
        }
      });
    },
    function(t, e, n) {
      "use strict";
      n.d(e, "a", function() {
        return i;
      });
      var i = {
        DEG2RAD: Math.PI / 180,
        RAD2DEG: 180 / Math.PI,
        generateUUID: (function() {
          for (var t = [], e = 0; e < 256; e++)
            t[e] = (e < 16 ? "0" : "") + e.toString(16);
          return function() {
            var e = (4294967295 * Math.random()) | 0,
              n = (4294967295 * Math.random()) | 0,
              i = (4294967295 * Math.random()) | 0,
              r = (4294967295 * Math.random()) | 0;
            return (
              t[255 & e] +
              t[(e >> 8) & 255] +
              t[(e >> 16) & 255] +
              t[(e >> 24) & 255] +
              "-" +
              t[255 & n] +
              t[(n >> 8) & 255] +
              "-" +
              t[((n >> 16) & 15) | 64] +
              t[(n >> 24) & 255] +
              "-" +
              t[(63 & i) | 128] +
              t[(i >> 8) & 255] +
              "-" +
              t[(i >> 16) & 255] +
              t[(i >> 24) & 255] +
              t[255 & r] +
              t[(r >> 8) & 255] +
              t[(r >> 16) & 255] +
              t[(r >> 24) & 255]
            ).toUpperCase();
          };
        })(),
        clamp: function(t, e, n) {
          return Math.max(e, Math.min(n, t));
        },
        euclideanModulo: function(t, e) {
          return (t % e + e) % e;
        },
        mapLinear: function(t, e, n, i, r) {
          return i + (t - e) * (r - i) / (n - e);
        },
        lerp: function(t, e, n) {
          return (1 - n) * t + n * e;
        },
        smoothstep: function(t, e, n) {
          return t <= e
            ? 0
            : t >= n ? 1 : (t = (t - e) / (n - e)) * t * (3 - 2 * t);
        },
        smootherstep: function(t, e, n) {
          return t <= e
            ? 0
            : t >= n
              ? 1
              : (t = (t - e) / (n - e)) * t * t * (t * (6 * t - 15) + 10);
        },
        randInt: function(t, e) {
          return t + Math.floor(Math.random() * (e - t + 1));
        },
        randFloat: function(t, e) {
          return t + Math.random() * (e - t);
        },
        randFloatSpread: function(t) {
          return t * (0.5 - Math.random());
        },
        degToRad: function(t) {
          return t * i.DEG2RAD;
        },
        radToDeg: function(t) {
          return t * i.RAD2DEG;
        },
        isPowerOfTwo: function(t) {
          return 0 == (t & (t - 1)) && 0 !== t;
        },
        ceilPowerOfTwo: function(t) {
          return Math.pow(2, Math.ceil(Math.log(t) / Math.LN2));
        },
        floorPowerOfTwo: function(t) {
          return Math.pow(2, Math.floor(Math.log(t) / Math.LN2));
        }
      };
    },
    function(t, e, n) {
      "use strict";
      function i(t, e) {
        (this.x = t || 0), (this.y = e || 0);
      }
      var r, a;
      n.d(e, "a", function() {
        return i;
      }),
        Object.defineProperties(i.prototype, {
          width: {
            get: function() {
              return this.x;
            },
            set: function(t) {
              this.x = t;
            }
          },
          height: {
            get: function() {
              return this.y;
            },
            set: function(t) {
              this.y = t;
            }
          }
        }),
        Object.assign(i.prototype, {
          isVector2: !0,
          set: function(t, e) {
            return (this.x = t), (this.y = e), this;
          },
          setScalar: function(t) {
            return (this.x = t), (this.y = t), this;
          },
          setX: function(t) {
            return (this.x = t), this;
          },
          setY: function(t) {
            return (this.y = t), this;
          },
          setComponent: function(t, e) {
            switch (t) {
              case 0:
                this.x = e;
                break;
              case 1:
                this.y = e;
                break;
              default:
                throw new Error("index is out of range: " + t);
            }
            return this;
          },
          getComponent: function(t) {
            switch (t) {
              case 0:
                return this.x;
              case 1:
                return this.y;
              default:
                throw new Error("index is out of range: " + t);
            }
          },
          clone: function() {
            return new this.constructor(this.x, this.y);
          },
          copy: function(t) {
            return (this.x = t.x), (this.y = t.y), this;
          },
          add: function(t, e) {
            return void 0 !== e
              ? (console.warn(
                  "THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."
                ),
                this.addVectors(t, e))
              : ((this.x += t.x), (this.y += t.y), this);
          },
          addScalar: function(t) {
            return (this.x += t), (this.y += t), this;
          },
          addVectors: function(t, e) {
            return (this.x = t.x + e.x), (this.y = t.y + e.y), this;
          },
          addScaledVector: function(t, e) {
            return (this.x += t.x * e), (this.y += t.y * e), this;
          },
          sub: function(t, e) {
            return void 0 !== e
              ? (console.warn(
                  "THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."
                ),
                this.subVectors(t, e))
              : ((this.x -= t.x), (this.y -= t.y), this);
          },
          subScalar: function(t) {
            return (this.x -= t), (this.y -= t), this;
          },
          subVectors: function(t, e) {
            return (this.x = t.x - e.x), (this.y = t.y - e.y), this;
          },
          multiply: function(t) {
            return (this.x *= t.x), (this.y *= t.y), this;
          },
          multiplyScalar: function(t) {
            return (this.x *= t), (this.y *= t), this;
          },
          divide: function(t) {
            return (this.x /= t.x), (this.y /= t.y), this;
          },
          divideScalar: function(t) {
            return this.multiplyScalar(1 / t);
          },
          applyMatrix3: function(t) {
            var e = this.x,
              n = this.y,
              i = t.elements;
            return (
              (this.x = i[0] * e + i[3] * n + i[6]),
              (this.y = i[1] * e + i[4] * n + i[7]),
              this
            );
          },
          min: function(t) {
            return (
              (this.x = Math.min(this.x, t.x)),
              (this.y = Math.min(this.y, t.y)),
              this
            );
          },
          max: function(t) {
            return (
              (this.x = Math.max(this.x, t.x)),
              (this.y = Math.max(this.y, t.y)),
              this
            );
          },
          clamp: function(t, e) {
            return (
              (this.x = Math.max(t.x, Math.min(e.x, this.x))),
              (this.y = Math.max(t.y, Math.min(e.y, this.y))),
              this
            );
          },
          clampScalar: ((r = new i()),
          (a = new i()),
          function(t, e) {
            return r.set(t, t), a.set(e, e), this.clamp(r, a);
          }),
          clampLength: function(t, e) {
            var n = this.length();
            return this.divideScalar(n || 1).multiplyScalar(
              Math.max(t, Math.min(e, n))
            );
          },
          floor: function() {
            return (
              (this.x = Math.floor(this.x)), (this.y = Math.floor(this.y)), this
            );
          },
          ceil: function() {
            return (
              (this.x = Math.ceil(this.x)), (this.y = Math.ceil(this.y)), this
            );
          },
          round: function() {
            return (
              (this.x = Math.round(this.x)), (this.y = Math.round(this.y)), this
            );
          },
          roundToZero: function() {
            return (
              (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
              (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
              this
            );
          },
          negate: function() {
            return (this.x = -this.x), (this.y = -this.y), this;
          },
          dot: function(t) {
            return this.x * t.x + this.y * t.y;
          },
          cross: function(t) {
            return this.x * t.y - this.y * t.x;
          },
          lengthSq: function() {
            return this.x * this.x + this.y * this.y;
          },
          length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y);
          },
          manhattanLength: function() {
            return Math.abs(this.x) + Math.abs(this.y);
          },
          normalize: function() {
            return this.divideScalar(this.length() || 1);
          },
          angle: function() {
            var t = Math.atan2(this.y, this.x);
            return t < 0 && (t += 2 * Math.PI), t;
          },
          distanceTo: function(t) {
            return Math.sqrt(this.distanceToSquared(t));
          },
          distanceToSquared: function(t) {
            var e = this.x - t.x,
              n = this.y - t.y;
            return e * e + n * n;
          },
          manhattanDistanceTo: function(t) {
            return Math.abs(this.x - t.x) + Math.abs(this.y - t.y);
          },
          setLength: function(t) {
            return this.normalize().multiplyScalar(t);
          },
          lerp: function(t, e) {
            return (
              (this.x += (t.x - this.x) * e),
              (this.y += (t.y - this.y) * e),
              this
            );
          },
          lerpVectors: function(t, e, n) {
            return this.subVectors(e, t)
              .multiplyScalar(n)
              .add(t);
          },
          equals: function(t) {
            return t.x === this.x && t.y === this.y;
          },
          fromArray: function(t, e) {
            return (
              void 0 === e && (e = 0),
              (this.x = t[e]),
              (this.y = t[e + 1]),
              this
            );
          },
          toArray: function(t, e) {
            return (
              void 0 === t && (t = []),
              void 0 === e && (e = 0),
              (t[e] = this.x),
              (t[e + 1] = this.y),
              t
            );
          },
          fromBufferAttribute: function(t, e, n) {
            return (
              void 0 !== n &&
                console.warn(
                  "THREE.Vector2: offset has been removed from .fromBufferAttribute()."
                ),
              (this.x = t.getX(e)),
              (this.y = t.getY(e)),
              this
            );
          },
          rotateAround: function(t, e) {
            var n = Math.cos(e),
              i = Math.sin(e),
              r = this.x - t.x,
              a = this.y - t.y;
            return (
              (this.x = r * n - a * i + t.x),
              (this.y = r * i + a * n + t.y),
              this
            );
          }
        });
    },
    function(t, e, n) {
      "use strict";
      n.d(e, "b", function() {
        return m;
      }),
        n.d(e, "d", function() {
          return p;
        }),
        n.d(e, "c", function() {
          return d;
        }),
        n.d(e, "a", function() {
          return s;
        });
      var i = n(9),
        r = n(1),
        a = n(6),
        o = n(8);
      function s(t, e, n) {
        if (Array.isArray(t))
          throw new TypeError(
            "THREE.BufferAttribute: array should be a Typed Array."
          );
        (this.name = ""),
          (this.array = t),
          (this.itemSize = e),
          (this.count = void 0 !== t ? t.length / e : 0),
          (this.normalized = !0 === n),
          (this.dynamic = !1),
          (this.updateRange = { offset: 0, count: -1 }),
          (this.version = 0);
      }
      function l(t, e, n) {
        s.call(this, new Int8Array(t), e, n);
      }
      function c(t, e, n) {
        s.call(this, new Uint8Array(t), e, n);
      }
      function h(t, e, n) {
        s.call(this, new Uint8ClampedArray(t), e, n);
      }
      function u(t, e, n) {
        s.call(this, new Int16Array(t), e, n);
      }
      function d(t, e, n) {
        s.call(this, new Uint16Array(t), e, n);
      }
      function f(t, e, n) {
        s.call(this, new Int32Array(t), e, n);
      }
      function p(t, e, n) {
        s.call(this, new Uint32Array(t), e, n);
      }
      function m(t, e, n) {
        s.call(this, new Float32Array(t), e, n);
      }
      function g(t, e, n) {
        s.call(this, new Float64Array(t), e, n);
      }
      Object.defineProperty(s.prototype, "needsUpdate", {
        set: function(t) {
          !0 === t && this.version++;
        }
      }),
        Object.assign(s.prototype, {
          isBufferAttribute: !0,
          onUploadCallback: function() {},
          setArray: function(t) {
            if (Array.isArray(t))
              throw new TypeError(
                "THREE.BufferAttribute: array should be a Typed Array."
              );
            return (
              (this.count = void 0 !== t ? t.length / this.itemSize : 0),
              (this.array = t),
              this
            );
          },
          setDynamic: function(t) {
            return (this.dynamic = t), this;
          },
          copy: function(t) {
            return (
              (this.name = t.name),
              (this.array = new t.array.constructor(t.array)),
              (this.itemSize = t.itemSize),
              (this.count = t.count),
              (this.normalized = t.normalized),
              (this.dynamic = t.dynamic),
              this
            );
          },
          copyAt: function(t, e, n) {
            (t *= this.itemSize), (n *= e.itemSize);
            for (var i = 0, r = this.itemSize; i < r; i++)
              this.array[t + i] = e.array[n + i];
            return this;
          },
          copyArray: function(t) {
            return this.array.set(t), this;
          },
          copyColorsArray: function(t) {
            for (var e = this.array, n = 0, i = 0, r = t.length; i < r; i++) {
              var a = t[i];
              void 0 === a &&
                (console.warn(
                  "THREE.BufferAttribute.copyColorsArray(): color is undefined",
                  i
                ),
                (a = new o.a())),
                (e[n++] = a.r),
                (e[n++] = a.g),
                (e[n++] = a.b);
            }
            return this;
          },
          copyVector2sArray: function(t) {
            for (var e = this.array, n = 0, i = 0, r = t.length; i < r; i++) {
              var o = t[i];
              void 0 === o &&
                (console.warn(
                  "THREE.BufferAttribute.copyVector2sArray(): vector is undefined",
                  i
                ),
                (o = new a.a())),
                (e[n++] = o.x),
                (e[n++] = o.y);
            }
            return this;
          },
          copyVector3sArray: function(t) {
            for (var e = this.array, n = 0, i = 0, a = t.length; i < a; i++) {
              var o = t[i];
              void 0 === o &&
                (console.warn(
                  "THREE.BufferAttribute.copyVector3sArray(): vector is undefined",
                  i
                ),
                (o = new r.a())),
                (e[n++] = o.x),
                (e[n++] = o.y),
                (e[n++] = o.z);
            }
            return this;
          },
          copyVector4sArray: function(t) {
            for (var e = this.array, n = 0, r = 0, a = t.length; r < a; r++) {
              var o = t[r];
              void 0 === o &&
                (console.warn(
                  "THREE.BufferAttribute.copyVector4sArray(): vector is undefined",
                  r
                ),
                (o = new i.a())),
                (e[n++] = o.x),
                (e[n++] = o.y),
                (e[n++] = o.z),
                (e[n++] = o.w);
            }
            return this;
          },
          set: function(t, e) {
            return void 0 === e && (e = 0), this.array.set(t, e), this;
          },
          getX: function(t) {
            return this.array[t * this.itemSize];
          },
          setX: function(t, e) {
            return (this.array[t * this.itemSize] = e), this;
          },
          getY: function(t) {
            return this.array[t * this.itemSize + 1];
          },
          setY: function(t, e) {
            return (this.array[t * this.itemSize + 1] = e), this;
          },
          getZ: function(t) {
            return this.array[t * this.itemSize + 2];
          },
          setZ: function(t, e) {
            return (this.array[t * this.itemSize + 2] = e), this;
          },
          getW: function(t) {
            return this.array[t * this.itemSize + 3];
          },
          setW: function(t, e) {
            return (this.array[t * this.itemSize + 3] = e), this;
          },
          setXY: function(t, e, n) {
            return (
              (t *= this.itemSize),
              (this.array[t + 0] = e),
              (this.array[t + 1] = n),
              this
            );
          },
          setXYZ: function(t, e, n, i) {
            return (
              (t *= this.itemSize),
              (this.array[t + 0] = e),
              (this.array[t + 1] = n),
              (this.array[t + 2] = i),
              this
            );
          },
          setXYZW: function(t, e, n, i, r) {
            return (
              (t *= this.itemSize),
              (this.array[t + 0] = e),
              (this.array[t + 1] = n),
              (this.array[t + 2] = i),
              (this.array[t + 3] = r),
              this
            );
          },
          onUpload: function(t) {
            return (this.onUploadCallback = t), this;
          },
          clone: function() {
            return new this.constructor(this.array, this.itemSize).copy(this);
          }
        }),
        (l.prototype = Object.create(s.prototype)),
        (l.prototype.constructor = l),
        (c.prototype = Object.create(s.prototype)),
        (c.prototype.constructor = c),
        (h.prototype = Object.create(s.prototype)),
        (h.prototype.constructor = h),
        (u.prototype = Object.create(s.prototype)),
        (u.prototype.constructor = u),
        (d.prototype = Object.create(s.prototype)),
        (d.prototype.constructor = d),
        (f.prototype = Object.create(s.prototype)),
        (f.prototype.constructor = f),
        (p.prototype = Object.create(s.prototype)),
        (p.prototype.constructor = p),
        (m.prototype = Object.create(s.prototype)),
        (m.prototype.constructor = m),
        (g.prototype = Object.create(s.prototype)),
        (g.prototype.constructor = g);
    },
    function(t, e, n) {
      "use strict";
      n.d(e, "a", function() {
        return l;
      });
      var i,
        r,
        a,
        o = n(5),
        s = {
          aliceblue: 15792383,
          antiquewhite: 16444375,
          aqua: 65535,
          aquamarine: 8388564,
          azure: 15794175,
          beige: 16119260,
          bisque: 16770244,
          black: 0,
          blanchedalmond: 16772045,
          blue: 255,
          blueviolet: 9055202,
          brown: 10824234,
          burlywood: 14596231,
          cadetblue: 6266528,
          chartreuse: 8388352,
          chocolate: 13789470,
          coral: 16744272,
          cornflowerblue: 6591981,
          cornsilk: 16775388,
          crimson: 14423100,
          cyan: 65535,
          darkblue: 139,
          darkcyan: 35723,
          darkgoldenrod: 12092939,
          darkgray: 11119017,
          darkgreen: 25600,
          darkgrey: 11119017,
          darkkhaki: 12433259,
          darkmagenta: 9109643,
          darkolivegreen: 5597999,
          darkorange: 16747520,
          darkorchid: 10040012,
          darkred: 9109504,
          darksalmon: 15308410,
          darkseagreen: 9419919,
          darkslateblue: 4734347,
          darkslategray: 3100495,
          darkslategrey: 3100495,
          darkturquoise: 52945,
          darkviolet: 9699539,
          deeppink: 16716947,
          deepskyblue: 49151,
          dimgray: 6908265,
          dimgrey: 6908265,
          dodgerblue: 2003199,
          firebrick: 11674146,
          floralwhite: 16775920,
          forestgreen: 2263842,
          fuchsia: 16711935,
          gainsboro: 14474460,
          ghostwhite: 16316671,
          gold: 16766720,
          goldenrod: 14329120,
          gray: 8421504,
          green: 32768,
          greenyellow: 11403055,
          grey: 8421504,
          honeydew: 15794160,
          hotpink: 16738740,
          indianred: 13458524,
          indigo: 4915330,
          ivory: 16777200,
          khaki: 15787660,
          lavender: 15132410,
          lavenderblush: 16773365,
          lawngreen: 8190976,
          lemonchiffon: 16775885,
          lightblue: 11393254,
          lightcoral: 15761536,
          lightcyan: 14745599,
          lightgoldenrodyellow: 16448210,
          lightgray: 13882323,
          lightgreen: 9498256,
          lightgrey: 13882323,
          lightpink: 16758465,
          lightsalmon: 16752762,
          lightseagreen: 2142890,
          lightskyblue: 8900346,
          lightslategray: 7833753,
          lightslategrey: 7833753,
          lightsteelblue: 11584734,
          lightyellow: 16777184,
          lime: 65280,
          limegreen: 3329330,
          linen: 16445670,
          magenta: 16711935,
          maroon: 8388608,
          mediumaquamarine: 6737322,
          mediumblue: 205,
          mediumorchid: 12211667,
          mediumpurple: 9662683,
          mediumseagreen: 3978097,
          mediumslateblue: 8087790,
          mediumspringgreen: 64154,
          mediumturquoise: 4772300,
          mediumvioletred: 13047173,
          midnightblue: 1644912,
          mintcream: 16121850,
          mistyrose: 16770273,
          moccasin: 16770229,
          navajowhite: 16768685,
          navy: 128,
          oldlace: 16643558,
          olive: 8421376,
          olivedrab: 7048739,
          orange: 16753920,
          orangered: 16729344,
          orchid: 14315734,
          palegoldenrod: 15657130,
          palegreen: 10025880,
          paleturquoise: 11529966,
          palevioletred: 14381203,
          papayawhip: 16773077,
          peachpuff: 16767673,
          peru: 13468991,
          pink: 16761035,
          plum: 14524637,
          powderblue: 11591910,
          purple: 8388736,
          rebeccapurple: 6697881,
          red: 16711680,
          rosybrown: 12357519,
          royalblue: 4286945,
          saddlebrown: 9127187,
          salmon: 16416882,
          sandybrown: 16032864,
          seagreen: 3050327,
          seashell: 16774638,
          sienna: 10506797,
          silver: 12632256,
          skyblue: 8900331,
          slateblue: 6970061,
          slategray: 7372944,
          slategrey: 7372944,
          snow: 16775930,
          springgreen: 65407,
          steelblue: 4620980,
          tan: 13808780,
          teal: 32896,
          thistle: 14204888,
          tomato: 16737095,
          turquoise: 4251856,
          violet: 15631086,
          wheat: 16113331,
          white: 16777215,
          whitesmoke: 16119285,
          yellow: 16776960,
          yellowgreen: 10145074
        };
      function l(t, e, n) {
        return void 0 === e && void 0 === n
          ? this.set(t)
          : this.setRGB(t, e, n);
      }
      Object.assign(l.prototype, {
        isColor: !0,
        r: 1,
        g: 1,
        b: 1,
        set: function(t) {
          return (
            t && t.isColor
              ? this.copy(t)
              : "number" == typeof t
                ? this.setHex(t)
                : "string" == typeof t && this.setStyle(t),
            this
          );
        },
        setScalar: function(t) {
          return (this.r = t), (this.g = t), (this.b = t), this;
        },
        setHex: function(t) {
          return (
            (t = Math.floor(t)),
            (this.r = ((t >> 16) & 255) / 255),
            (this.g = ((t >> 8) & 255) / 255),
            (this.b = (255 & t) / 255),
            this
          );
        },
        setRGB: function(t, e, n) {
          return (this.r = t), (this.g = e), (this.b = n), this;
        },
        setHSL: (function() {
          function t(t, e, n) {
            return (
              n < 0 && (n += 1),
              n > 1 && (n -= 1),
              n < 1 / 6
                ? t + 6 * (e - t) * n
                : n < 0.5 ? e : n < 2 / 3 ? t + 6 * (e - t) * (2 / 3 - n) : t
            );
          }
          return function(e, n, i) {
            if (
              ((e = o.a.euclideanModulo(e, 1)),
              (n = o.a.clamp(n, 0, 1)),
              (i = o.a.clamp(i, 0, 1)),
              0 === n)
            )
              this.r = this.g = this.b = i;
            else {
              var r = i <= 0.5 ? i * (1 + n) : i + n - i * n,
                a = 2 * i - r;
              (this.r = t(a, r, e + 1 / 3)),
                (this.g = t(a, r, e)),
                (this.b = t(a, r, e - 1 / 3));
            }
            return this;
          };
        })(),
        setStyle: function(t) {
          function e(e) {
            void 0 !== e &&
              parseFloat(e) < 1 &&
              console.warn(
                "THREE.Color: Alpha component of " + t + " will be ignored."
              );
          }
          var n;
          if ((n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t))) {
            var i,
              r = n[1],
              a = n[2];
            switch (r) {
              case "rgb":
              case "rgba":
                if (
                  (i = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(
                    a
                  ))
                )
                  return (
                    (this.r = Math.min(255, parseInt(i[1], 10)) / 255),
                    (this.g = Math.min(255, parseInt(i[2], 10)) / 255),
                    (this.b = Math.min(255, parseInt(i[3], 10)) / 255),
                    e(i[5]),
                    this
                  );
                if (
                  (i = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(
                    a
                  ))
                )
                  return (
                    (this.r = Math.min(100, parseInt(i[1], 10)) / 100),
                    (this.g = Math.min(100, parseInt(i[2], 10)) / 100),
                    (this.b = Math.min(100, parseInt(i[3], 10)) / 100),
                    e(i[5]),
                    this
                  );
                break;
              case "hsl":
              case "hsla":
                if (
                  (i = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(
                    a
                  ))
                ) {
                  var o = parseFloat(i[1]) / 360,
                    l = parseInt(i[2], 10) / 100,
                    c = parseInt(i[3], 10) / 100;
                  return e(i[5]), this.setHSL(o, l, c);
                }
            }
          } else if ((n = /^\#([A-Fa-f0-9]+)$/.exec(t))) {
            var h,
              u = (h = n[1]).length;
            if (3 === u)
              return (
                (this.r = parseInt(h.charAt(0) + h.charAt(0), 16) / 255),
                (this.g = parseInt(h.charAt(1) + h.charAt(1), 16) / 255),
                (this.b = parseInt(h.charAt(2) + h.charAt(2), 16) / 255),
                this
              );
            if (6 === u)
              return (
                (this.r = parseInt(h.charAt(0) + h.charAt(1), 16) / 255),
                (this.g = parseInt(h.charAt(2) + h.charAt(3), 16) / 255),
                (this.b = parseInt(h.charAt(4) + h.charAt(5), 16) / 255),
                this
              );
          }
          t &&
            t.length > 0 &&
            (void 0 !== (h = s[t])
              ? this.setHex(h)
              : console.warn("THREE.Color: Unknown color " + t));
          return this;
        },
        clone: function() {
          return new this.constructor(this.r, this.g, this.b);
        },
        copy: function(t) {
          return (this.r = t.r), (this.g = t.g), (this.b = t.b), this;
        },
        copyGammaToLinear: function(t, e) {
          return (
            void 0 === e && (e = 2),
            (this.r = Math.pow(t.r, e)),
            (this.g = Math.pow(t.g, e)),
            (this.b = Math.pow(t.b, e)),
            this
          );
        },
        copyLinearToGamma: function(t, e) {
          void 0 === e && (e = 2);
          var n = e > 0 ? 1 / e : 1;
          return (
            (this.r = Math.pow(t.r, n)),
            (this.g = Math.pow(t.g, n)),
            (this.b = Math.pow(t.b, n)),
            this
          );
        },
        convertGammaToLinear: function(t) {
          return this.copyGammaToLinear(this, t), this;
        },
        convertLinearToGamma: function(t) {
          return this.copyLinearToGamma(this, t), this;
        },
        copySRGBToLinear: (function() {
          function t(t) {
            return t < 0.04045
              ? 0.0773993808 * t
              : Math.pow(0.9478672986 * t + 0.0521327014, 2.4);
          }
          return function(e) {
            return (
              (this.r = t(e.r)), (this.g = t(e.g)), (this.b = t(e.b)), this
            );
          };
        })(),
        copyLinearToSRGB: (function() {
          function t(t) {
            return t < 0.0031308
              ? 12.92 * t
              : 1.055 * Math.pow(t, 0.41666) - 0.055;
          }
          return function(e) {
            return (
              (this.r = t(e.r)), (this.g = t(e.g)), (this.b = t(e.b)), this
            );
          };
        })(),
        convertSRGBToLinear: function() {
          return this.copySRGBToLinear(this), this;
        },
        convertLinearToSRGB: function() {
          return this.copyLinearToSRGB(this), this;
        },
        getHex: function() {
          return (
            ((255 * this.r) << 16) ^
            ((255 * this.g) << 8) ^
            ((255 * this.b) << 0)
          );
        },
        getHexString: function() {
          return ("000000" + this.getHex().toString(16)).slice(-6);
        },
        getHSL: function(t) {
          void 0 === t &&
            (console.warn("THREE.Color: .getHSL() target is now required"),
            (t = { h: 0, s: 0, l: 0 }));
          var e,
            n,
            i = this.r,
            r = this.g,
            a = this.b,
            o = Math.max(i, r, a),
            s = Math.min(i, r, a),
            l = (s + o) / 2;
          if (s === o) (e = 0), (n = 0);
          else {
            var c = o - s;
            switch (((n = l <= 0.5 ? c / (o + s) : c / (2 - o - s)), o)) {
              case i:
                e = (r - a) / c + (r < a ? 6 : 0);
                break;
              case r:
                e = (a - i) / c + 2;
                break;
              case a:
                e = (i - r) / c + 4;
            }
            e /= 6;
          }
          return (t.h = e), (t.s = n), (t.l = l), t;
        },
        getStyle: function() {
          return (
            "rgb(" +
            ((255 * this.r) | 0) +
            "," +
            ((255 * this.g) | 0) +
            "," +
            ((255 * this.b) | 0) +
            ")"
          );
        },
        offsetHSL: ((a = {}),
        function(t, e, n) {
          return (
            this.getHSL(a),
            (a.h += t),
            (a.s += e),
            (a.l += n),
            this.setHSL(a.h, a.s, a.l),
            this
          );
        }),
        add: function(t) {
          return (this.r += t.r), (this.g += t.g), (this.b += t.b), this;
        },
        addColors: function(t, e) {
          return (
            (this.r = t.r + e.r),
            (this.g = t.g + e.g),
            (this.b = t.b + e.b),
            this
          );
        },
        addScalar: function(t) {
          return (this.r += t), (this.g += t), (this.b += t), this;
        },
        sub: function(t) {
          return (
            (this.r = Math.max(0, this.r - t.r)),
            (this.g = Math.max(0, this.g - t.g)),
            (this.b = Math.max(0, this.b - t.b)),
            this
          );
        },
        multiply: function(t) {
          return (this.r *= t.r), (this.g *= t.g), (this.b *= t.b), this;
        },
        multiplyScalar: function(t) {
          return (this.r *= t), (this.g *= t), (this.b *= t), this;
        },
        lerp: function(t, e) {
          return (
            (this.r += (t.r - this.r) * e),
            (this.g += (t.g - this.g) * e),
            (this.b += (t.b - this.b) * e),
            this
          );
        },
        lerpHSL: ((i = { h: 0, s: 0, l: 0 }),
        (r = { h: 0, s: 0, l: 0 }),
        function(t, e) {
          this.getHSL(i), t.getHSL(r);
          var n = o.a.lerp(i.h, r.h, e),
            a = o.a.lerp(i.s, r.s, e),
            s = o.a.lerp(i.l, r.l, e);
          return this.setHSL(n, a, s), this;
        }),
        equals: function(t) {
          return t.r === this.r && t.g === this.g && t.b === this.b;
        },
        fromArray: function(t, e) {
          return (
            void 0 === e && (e = 0),
            (this.r = t[e]),
            (this.g = t[e + 1]),
            (this.b = t[e + 2]),
            this
          );
        },
        toArray: function(t, e) {
          return (
            void 0 === t && (t = []),
            void 0 === e && (e = 0),
            (t[e] = this.r),
            (t[e + 1] = this.g),
            (t[e + 2] = this.b),
            t
          );
        },
        toJSON: function() {
          return this.getHex();
        }
      });
    },
    function(t, e, n) {
      "use strict";
      function i(t, e, n, i) {
        (this.x = t || 0),
          (this.y = e || 0),
          (this.z = n || 0),
          (this.w = void 0 !== i ? i : 1);
      }
      var r, a;
      n.d(e, "a", function() {
        return i;
      }),
        Object.assign(i.prototype, {
          isVector4: !0,
          set: function(t, e, n, i) {
            return (this.x = t), (this.y = e), (this.z = n), (this.w = i), this;
          },
          setScalar: function(t) {
            return (this.x = t), (this.y = t), (this.z = t), (this.w = t), this;
          },
          setX: function(t) {
            return (this.x = t), this;
          },
          setY: function(t) {
            return (this.y = t), this;
          },
          setZ: function(t) {
            return (this.z = t), this;
          },
          setW: function(t) {
            return (this.w = t), this;
          },
          setComponent: function(t, e) {
            switch (t) {
              case 0:
                this.x = e;
                break;
              case 1:
                this.y = e;
                break;
              case 2:
                this.z = e;
                break;
              case 3:
                this.w = e;
                break;
              default:
                throw new Error("index is out of range: " + t);
            }
            return this;
          },
          getComponent: function(t) {
            switch (t) {
              case 0:
                return this.x;
              case 1:
                return this.y;
              case 2:
                return this.z;
              case 3:
                return this.w;
              default:
                throw new Error("index is out of range: " + t);
            }
          },
          clone: function() {
            return new this.constructor(this.x, this.y, this.z, this.w);
          },
          copy: function(t) {
            return (
              (this.x = t.x),
              (this.y = t.y),
              (this.z = t.z),
              (this.w = void 0 !== t.w ? t.w : 1),
              this
            );
          },
          add: function(t, e) {
            return void 0 !== e
              ? (console.warn(
                  "THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."
                ),
                this.addVectors(t, e))
              : ((this.x += t.x),
                (this.y += t.y),
                (this.z += t.z),
                (this.w += t.w),
                this);
          },
          addScalar: function(t) {
            return (
              (this.x += t), (this.y += t), (this.z += t), (this.w += t), this
            );
          },
          addVectors: function(t, e) {
            return (
              (this.x = t.x + e.x),
              (this.y = t.y + e.y),
              (this.z = t.z + e.z),
              (this.w = t.w + e.w),
              this
            );
          },
          addScaledVector: function(t, e) {
            return (
              (this.x += t.x * e),
              (this.y += t.y * e),
              (this.z += t.z * e),
              (this.w += t.w * e),
              this
            );
          },
          sub: function(t, e) {
            return void 0 !== e
              ? (console.warn(
                  "THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."
                ),
                this.subVectors(t, e))
              : ((this.x -= t.x),
                (this.y -= t.y),
                (this.z -= t.z),
                (this.w -= t.w),
                this);
          },
          subScalar: function(t) {
            return (
              (this.x -= t), (this.y -= t), (this.z -= t), (this.w -= t), this
            );
          },
          subVectors: function(t, e) {
            return (
              (this.x = t.x - e.x),
              (this.y = t.y - e.y),
              (this.z = t.z - e.z),
              (this.w = t.w - e.w),
              this
            );
          },
          multiplyScalar: function(t) {
            return (
              (this.x *= t), (this.y *= t), (this.z *= t), (this.w *= t), this
            );
          },
          applyMatrix4: function(t) {
            var e = this.x,
              n = this.y,
              i = this.z,
              r = this.w,
              a = t.elements;
            return (
              (this.x = a[0] * e + a[4] * n + a[8] * i + a[12] * r),
              (this.y = a[1] * e + a[5] * n + a[9] * i + a[13] * r),
              (this.z = a[2] * e + a[6] * n + a[10] * i + a[14] * r),
              (this.w = a[3] * e + a[7] * n + a[11] * i + a[15] * r),
              this
            );
          },
          divideScalar: function(t) {
            return this.multiplyScalar(1 / t);
          },
          setAxisAngleFromQuaternion: function(t) {
            this.w = 2 * Math.acos(t.w);
            var e = Math.sqrt(1 - t.w * t.w);
            return (
              e < 1e-4
                ? ((this.x = 1), (this.y = 0), (this.z = 0))
                : ((this.x = t.x / e), (this.y = t.y / e), (this.z = t.z / e)),
              this
            );
          },
          setAxisAngleFromRotationMatrix: function(t) {
            var e,
              n,
              i,
              r,
              a = t.elements,
              o = a[0],
              s = a[4],
              l = a[8],
              c = a[1],
              h = a[5],
              u = a[9],
              d = a[2],
              f = a[6],
              p = a[10];
            if (
              Math.abs(s - c) < 0.01 &&
              Math.abs(l - d) < 0.01 &&
              Math.abs(u - f) < 0.01
            ) {
              if (
                Math.abs(s + c) < 0.1 &&
                Math.abs(l + d) < 0.1 &&
                Math.abs(u + f) < 0.1 &&
                Math.abs(o + h + p - 3) < 0.1
              )
                return this.set(1, 0, 0, 0), this;
              e = Math.PI;
              var m = (o + 1) / 2,
                g = (h + 1) / 2,
                v = (p + 1) / 2,
                _ = (s + c) / 4,
                y = (l + d) / 4,
                x = (u + f) / 4;
              return (
                m > g && m > v
                  ? m < 0.01
                    ? ((n = 0), (i = 0.707106781), (r = 0.707106781))
                    : ((i = _ / (n = Math.sqrt(m))), (r = y / n))
                  : g > v
                    ? g < 0.01
                      ? ((n = 0.707106781), (i = 0), (r = 0.707106781))
                      : ((n = _ / (i = Math.sqrt(g))), (r = x / i))
                    : v < 0.01
                      ? ((n = 0.707106781), (i = 0.707106781), (r = 0))
                      : ((n = y / (r = Math.sqrt(v))), (i = x / r)),
                this.set(n, i, r, e),
                this
              );
            }
            var b = Math.sqrt(
              (f - u) * (f - u) + (l - d) * (l - d) + (c - s) * (c - s)
            );
            return (
              Math.abs(b) < 0.001 && (b = 1),
              (this.x = (f - u) / b),
              (this.y = (l - d) / b),
              (this.z = (c - s) / b),
              (this.w = Math.acos((o + h + p - 1) / 2)),
              this
            );
          },
          min: function(t) {
            return (
              (this.x = Math.min(this.x, t.x)),
              (this.y = Math.min(this.y, t.y)),
              (this.z = Math.min(this.z, t.z)),
              (this.w = Math.min(this.w, t.w)),
              this
            );
          },
          max: function(t) {
            return (
              (this.x = Math.max(this.x, t.x)),
              (this.y = Math.max(this.y, t.y)),
              (this.z = Math.max(this.z, t.z)),
              (this.w = Math.max(this.w, t.w)),
              this
            );
          },
          clamp: function(t, e) {
            return (
              (this.x = Math.max(t.x, Math.min(e.x, this.x))),
              (this.y = Math.max(t.y, Math.min(e.y, this.y))),
              (this.z = Math.max(t.z, Math.min(e.z, this.z))),
              (this.w = Math.max(t.w, Math.min(e.w, this.w))),
              this
            );
          },
          clampScalar: function(t, e) {
            return (
              void 0 === r && ((r = new i()), (a = new i())),
              r.set(t, t, t, t),
              a.set(e, e, e, e),
              this.clamp(r, a)
            );
          },
          clampLength: function(t, e) {
            var n = this.length();
            return this.divideScalar(n || 1).multiplyScalar(
              Math.max(t, Math.min(e, n))
            );
          },
          floor: function() {
            return (
              (this.x = Math.floor(this.x)),
              (this.y = Math.floor(this.y)),
              (this.z = Math.floor(this.z)),
              (this.w = Math.floor(this.w)),
              this
            );
          },
          ceil: function() {
            return (
              (this.x = Math.ceil(this.x)),
              (this.y = Math.ceil(this.y)),
              (this.z = Math.ceil(this.z)),
              (this.w = Math.ceil(this.w)),
              this
            );
          },
          round: function() {
            return (
              (this.x = Math.round(this.x)),
              (this.y = Math.round(this.y)),
              (this.z = Math.round(this.z)),
              (this.w = Math.round(this.w)),
              this
            );
          },
          roundToZero: function() {
            return (
              (this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x)),
              (this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y)),
              (this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z)),
              (this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w)),
              this
            );
          },
          negate: function() {
            return (
              (this.x = -this.x),
              (this.y = -this.y),
              (this.z = -this.z),
              (this.w = -this.w),
              this
            );
          },
          dot: function(t) {
            return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w;
          },
          lengthSq: function() {
            return (
              this.x * this.x +
              this.y * this.y +
              this.z * this.z +
              this.w * this.w
            );
          },
          length: function() {
            return Math.sqrt(
              this.x * this.x +
                this.y * this.y +
                this.z * this.z +
                this.w * this.w
            );
          },
          manhattanLength: function() {
            return (
              Math.abs(this.x) +
              Math.abs(this.y) +
              Math.abs(this.z) +
              Math.abs(this.w)
            );
          },
          normalize: function() {
            return this.divideScalar(this.length() || 1);
          },
          setLength: function(t) {
            return this.normalize().multiplyScalar(t);
          },
          lerp: function(t, e) {
            return (
              (this.x += (t.x - this.x) * e),
              (this.y += (t.y - this.y) * e),
              (this.z += (t.z - this.z) * e),
              (this.w += (t.w - this.w) * e),
              this
            );
          },
          lerpVectors: function(t, e, n) {
            return this.subVectors(e, t)
              .multiplyScalar(n)
              .add(t);
          },
          equals: function(t) {
            return (
              t.x === this.x &&
              t.y === this.y &&
              t.z === this.z &&
              t.w === this.w
            );
          },
          fromArray: function(t, e) {
            return (
              void 0 === e && (e = 0),
              (this.x = t[e]),
              (this.y = t[e + 1]),
              (this.z = t[e + 2]),
              (this.w = t[e + 3]),
              this
            );
          },
          toArray: function(t, e) {
            return (
              void 0 === t && (t = []),
              void 0 === e && (e = 0),
              (t[e] = this.x),
              (t[e + 1] = this.y),
              (t[e + 2] = this.z),
              (t[e + 3] = this.w),
              t
            );
          },
          fromBufferAttribute: function(t, e, n) {
            return (
              void 0 !== n &&
                console.warn(
                  "THREE.Vector4: offset has been removed from .fromBufferAttribute()."
                ),
              (this.x = t.getX(e)),
              (this.y = t.getY(e)),
              (this.z = t.getZ(e)),
              (this.w = t.getW(e)),
              this
            );
          }
        });
    },
    function(t, e, n) {
      "use strict";
      var i,
        r,
        a = n(15),
        o = n(1),
        s = n(4),
        l = n(18),
        c = n(5);
      function h(t, e, n, i) {
        (this._x = t || 0),
          (this._y = e || 0),
          (this._z = n || 0),
          (this._order = i || h.DefaultOrder);
      }
      function u() {
        this.mask = 1;
      }
      (h.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"]),
        (h.DefaultOrder = "XYZ"),
        Object.defineProperties(h.prototype, {
          x: {
            get: function() {
              return this._x;
            },
            set: function(t) {
              (this._x = t), this.onChangeCallback();
            }
          },
          y: {
            get: function() {
              return this._y;
            },
            set: function(t) {
              (this._y = t), this.onChangeCallback();
            }
          },
          z: {
            get: function() {
              return this._z;
            },
            set: function(t) {
              (this._z = t), this.onChangeCallback();
            }
          },
          order: {
            get: function() {
              return this._order;
            },
            set: function(t) {
              (this._order = t), this.onChangeCallback();
            }
          }
        }),
        Object.assign(h.prototype, {
          isEuler: !0,
          set: function(t, e, n, i) {
            return (
              (this._x = t),
              (this._y = e),
              (this._z = n),
              (this._order = i || this._order),
              this.onChangeCallback(),
              this
            );
          },
          clone: function() {
            return new this.constructor(this._x, this._y, this._z, this._order);
          },
          copy: function(t) {
            return (
              (this._x = t._x),
              (this._y = t._y),
              (this._z = t._z),
              (this._order = t._order),
              this.onChangeCallback(),
              this
            );
          },
          setFromRotationMatrix: function(t, e, n) {
            var i = c.a.clamp,
              r = t.elements,
              a = r[0],
              o = r[4],
              s = r[8],
              l = r[1],
              h = r[5],
              u = r[9],
              d = r[2],
              f = r[6],
              p = r[10];
            return (
              "XYZ" === (e = e || this._order)
                ? ((this._y = Math.asin(i(s, -1, 1))),
                  Math.abs(s) < 0.99999
                    ? ((this._x = Math.atan2(-u, p)),
                      (this._z = Math.atan2(-o, a)))
                    : ((this._x = Math.atan2(f, h)), (this._z = 0)))
                : "YXZ" === e
                  ? ((this._x = Math.asin(-i(u, -1, 1))),
                    Math.abs(u) < 0.99999
                      ? ((this._y = Math.atan2(s, p)),
                        (this._z = Math.atan2(l, h)))
                      : ((this._y = Math.atan2(-d, a)), (this._z = 0)))
                  : "ZXY" === e
                    ? ((this._x = Math.asin(i(f, -1, 1))),
                      Math.abs(f) < 0.99999
                        ? ((this._y = Math.atan2(-d, p)),
                          (this._z = Math.atan2(-o, h)))
                        : ((this._y = 0), (this._z = Math.atan2(l, a))))
                    : "ZYX" === e
                      ? ((this._y = Math.asin(-i(d, -1, 1))),
                        Math.abs(d) < 0.99999
                          ? ((this._x = Math.atan2(f, p)),
                            (this._z = Math.atan2(l, a)))
                          : ((this._x = 0), (this._z = Math.atan2(-o, h))))
                      : "YZX" === e
                        ? ((this._z = Math.asin(i(l, -1, 1))),
                          Math.abs(l) < 0.99999
                            ? ((this._x = Math.atan2(-u, h)),
                              (this._y = Math.atan2(-d, a)))
                            : ((this._x = 0), (this._y = Math.atan2(s, p))))
                        : "XZY" === e
                          ? ((this._z = Math.asin(-i(o, -1, 1))),
                            Math.abs(o) < 0.99999
                              ? ((this._x = Math.atan2(f, h)),
                                (this._y = Math.atan2(s, a)))
                              : ((this._x = Math.atan2(-u, p)), (this._y = 0)))
                          : console.warn(
                              "THREE.Euler: .setFromRotationMatrix() given unsupported order: " +
                                e
                            ),
              (this._order = e),
              !1 !== n && this.onChangeCallback(),
              this
            );
          },
          setFromQuaternion: ((r = new s.a()),
          function(t, e, n) {
            return (
              r.makeRotationFromQuaternion(t),
              this.setFromRotationMatrix(r, e, n)
            );
          }),
          setFromVector3: function(t, e) {
            return this.set(t.x, t.y, t.z, e || this._order);
          },
          reorder: ((i = new a.a()),
          function(t) {
            return i.setFromEuler(this), this.setFromQuaternion(i, t);
          }),
          equals: function(t) {
            return (
              t._x === this._x &&
              t._y === this._y &&
              t._z === this._z &&
              t._order === this._order
            );
          },
          fromArray: function(t) {
            return (
              (this._x = t[0]),
              (this._y = t[1]),
              (this._z = t[2]),
              void 0 !== t[3] && (this._order = t[3]),
              this.onChangeCallback(),
              this
            );
          },
          toArray: function(t, e) {
            return (
              void 0 === t && (t = []),
              void 0 === e && (e = 0),
              (t[e] = this._x),
              (t[e + 1] = this._y),
              (t[e + 2] = this._z),
              (t[e + 3] = this._order),
              t
            );
          },
          toVector3: function(t) {
            return t
              ? t.set(this._x, this._y, this._z)
              : new o.a(this._x, this._y, this._z);
          },
          onChange: function(t) {
            return (this.onChangeCallback = t), this;
          },
          onChangeCallback: function() {}
        }),
        Object.assign(u.prototype, {
          set: function(t) {
            this.mask = (1 << t) | 0;
          },
          enable: function(t) {
            this.mask |= (1 << t) | 0;
          },
          toggle: function(t) {
            this.mask ^= (1 << t) | 0;
          },
          disable: function(t) {
            this.mask &= ~((1 << t) | 0);
          },
          test: function(t) {
            return 0 != (this.mask & t.mask);
          }
        });
      var d = n(12);
      n.d(e, "a", function() {
        return y;
      });
      var f,
        p,
        m,
        g,
        v,
        _ = 0;
      function y() {
        Object.defineProperty(this, "id", { value: _++ }),
          (this.uuid = c.a.generateUUID()),
          (this.name = ""),
          (this.type = "Object3D"),
          (this.parent = null),
          (this.children = []),
          (this.up = y.DefaultUp.clone());
        var t = new o.a(),
          e = new h(),
          n = new a.a(),
          i = new o.a(1, 1, 1);
        e.onChange(function() {
          n.setFromEuler(e, !1);
        }),
          n.onChange(function() {
            e.setFromQuaternion(n, void 0, !1);
          }),
          Object.defineProperties(this, {
            position: { configurable: !0, enumerable: !0, value: t },
            rotation: { configurable: !0, enumerable: !0, value: e },
            quaternion: { configurable: !0, enumerable: !0, value: n },
            scale: { configurable: !0, enumerable: !0, value: i },
            modelViewMatrix: { value: new s.a() },
            normalMatrix: { value: new d.a() }
          }),
          (this.matrix = new s.a()),
          (this.matrixWorld = new s.a()),
          (this.matrixAutoUpdate = y.DefaultMatrixAutoUpdate),
          (this.matrixWorldNeedsUpdate = !1),
          (this.layers = new u()),
          (this.visible = !0),
          (this.castShadow = !1),
          (this.receiveShadow = !1),
          (this.frustumCulled = !0),
          (this.renderOrder = 0),
          (this.userData = {});
      }
      (y.DefaultUp = new o.a(0, 1, 0)),
        (y.DefaultMatrixAutoUpdate = !0),
        (y.prototype = Object.assign(Object.create(l.a.prototype), {
          constructor: y,
          isObject3D: !0,
          onBeforeRender: function() {},
          onAfterRender: function() {},
          applyMatrix: function(t) {
            this.matrix.multiplyMatrices(t, this.matrix),
              this.matrix.decompose(this.position, this.quaternion, this.scale);
          },
          applyQuaternion: function(t) {
            return this.quaternion.premultiply(t), this;
          },
          setRotationFromAxisAngle: function(t, e) {
            this.quaternion.setFromAxisAngle(t, e);
          },
          setRotationFromEuler: function(t) {
            this.quaternion.setFromEuler(t, !0);
          },
          setRotationFromMatrix: function(t) {
            this.quaternion.setFromRotationMatrix(t);
          },
          setRotationFromQuaternion: function(t) {
            this.quaternion.copy(t);
          },
          rotateOnAxis: ((v = new a.a()),
          function(t, e) {
            return v.setFromAxisAngle(t, e), this.quaternion.multiply(v), this;
          }),
          rotateOnWorldAxis: (function() {
            var t = new a.a();
            return function(e, n) {
              return (
                t.setFromAxisAngle(e, n), this.quaternion.premultiply(t), this
              );
            };
          })(),
          rotateX: ((g = new o.a(1, 0, 0)),
          function(t) {
            return this.rotateOnAxis(g, t);
          }),
          rotateY: (function() {
            var t = new o.a(0, 1, 0);
            return function(e) {
              return this.rotateOnAxis(t, e);
            };
          })(),
          rotateZ: (function() {
            var t = new o.a(0, 0, 1);
            return function(e) {
              return this.rotateOnAxis(t, e);
            };
          })(),
          translateOnAxis: (function() {
            var t = new o.a();
            return function(e, n) {
              return (
                t.copy(e).applyQuaternion(this.quaternion),
                this.position.add(t.multiplyScalar(n)),
                this
              );
            };
          })(),
          translateX: (function() {
            var t = new o.a(1, 0, 0);
            return function(e) {
              return this.translateOnAxis(t, e);
            };
          })(),
          translateY: (function() {
            var t = new o.a(0, 1, 0);
            return function(e) {
              return this.translateOnAxis(t, e);
            };
          })(),
          translateZ: (function() {
            var t = new o.a(0, 0, 1);
            return function(e) {
              return this.translateOnAxis(t, e);
            };
          })(),
          localToWorld: function(t) {
            return t.applyMatrix4(this.matrixWorld);
          },
          worldToLocal: ((m = new s.a()),
          function(t) {
            return t.applyMatrix4(m.getInverse(this.matrixWorld));
          }),
          lookAt: (function() {
            var t = new a.a(),
              e = new s.a(),
              n = new o.a(),
              i = new o.a();
            return function(r, a, o) {
              r.isVector3 ? n.copy(r) : n.set(r, a, o);
              var s = this.parent;
              this.updateWorldMatrix(!0, !1),
                i.setFromMatrixPosition(this.matrixWorld),
                this.isCamera
                  ? e.lookAt(i, n, this.up)
                  : e.lookAt(n, i, this.up),
                this.quaternion.setFromRotationMatrix(e),
                s &&
                  (e.extractRotation(s.matrixWorld),
                  t.setFromRotationMatrix(e),
                  this.quaternion.premultiply(t.inverse()));
            };
          })(),
          add: function(t) {
            if (arguments.length > 1) {
              for (var e = 0; e < arguments.length; e++) this.add(arguments[e]);
              return this;
            }
            return t === this
              ? (console.error(
                  "THREE.Object3D.add: object can't be added as a child of itself.",
                  t
                ),
                this)
              : (t && t.isObject3D
                  ? (null !== t.parent && t.parent.remove(t),
                    (t.parent = this),
                    t.dispatchEvent({ type: "added" }),
                    this.children.push(t))
                  : console.error(
                      "THREE.Object3D.add: object not an instance of THREE.Object3D.",
                      t
                    ),
                this);
          },
          remove: function(t) {
            if (arguments.length > 1) {
              for (var e = 0; e < arguments.length; e++)
                this.remove(arguments[e]);
              return this;
            }
            var n = this.children.indexOf(t);
            return (
              -1 !== n &&
                ((t.parent = null),
                t.dispatchEvent({ type: "removed" }),
                this.children.splice(n, 1)),
              this
            );
          },
          getObjectById: function(t) {
            return this.getObjectByProperty("id", t);
          },
          getObjectByName: function(t) {
            return this.getObjectByProperty("name", t);
          },
          getObjectByProperty: function(t, e) {
            if (this[t] === e) return this;
            for (var n = 0, i = this.children.length; n < i; n++) {
              var r = this.children[n].getObjectByProperty(t, e);
              if (void 0 !== r) return r;
            }
          },
          getWorldPosition: function(t) {
            return (
              void 0 === t &&
                (console.warn(
                  "THREE.Object3D: .getWorldPosition() target is now required"
                ),
                (t = new o.a())),
              this.updateMatrixWorld(!0),
              t.setFromMatrixPosition(this.matrixWorld)
            );
          },
          getWorldQuaternion: ((f = new o.a()),
          (p = new o.a()),
          function(t) {
            return (
              void 0 === t &&
                (console.warn(
                  "THREE.Object3D: .getWorldQuaternion() target is now required"
                ),
                (t = new a.a())),
              this.updateMatrixWorld(!0),
              this.matrixWorld.decompose(f, t, p),
              t
            );
          }),
          getWorldScale: (function() {
            var t = new o.a(),
              e = new a.a();
            return function(n) {
              return (
                void 0 === n &&
                  (console.warn(
                    "THREE.Object3D: .getWorldScale() target is now required"
                  ),
                  (n = new o.a())),
                this.updateMatrixWorld(!0),
                this.matrixWorld.decompose(t, e, n),
                n
              );
            };
          })(),
          getWorldDirection: function(t) {
            void 0 === t &&
              (console.warn(
                "THREE.Object3D: .getWorldDirection() target is now required"
              ),
              (t = new o.a())),
              this.updateMatrixWorld(!0);
            var e = this.matrixWorld.elements;
            return t.set(e[8], e[9], e[10]).normalize();
          },
          raycast: function() {},
          traverse: function(t) {
            t(this);
            for (var e = this.children, n = 0, i = e.length; n < i; n++)
              e[n].traverse(t);
          },
          traverseVisible: function(t) {
            if (!1 !== this.visible) {
              t(this);
              for (var e = this.children, n = 0, i = e.length; n < i; n++)
                e[n].traverseVisible(t);
            }
          },
          traverseAncestors: function(t) {
            var e = this.parent;
            null !== e && (t(e), e.traverseAncestors(t));
          },
          updateMatrix: function() {
            this.matrix.compose(this.position, this.quaternion, this.scale),
              (this.matrixWorldNeedsUpdate = !0);
          },
          updateMatrixWorld: function(t) {
            this.matrixAutoUpdate && this.updateMatrix(),
              (this.matrixWorldNeedsUpdate || t) &&
                (null === this.parent
                  ? this.matrixWorld.copy(this.matrix)
                  : this.matrixWorld.multiplyMatrices(
                      this.parent.matrixWorld,
                      this.matrix
                    ),
                (this.matrixWorldNeedsUpdate = !1),
                (t = !0));
            for (var e = this.children, n = 0, i = e.length; n < i; n++)
              e[n].updateMatrixWorld(t);
          },
          updateWorldMatrix: function(t, e) {
            var n = this.parent;
            if (
              (!0 === t && null !== n && n.updateWorldMatrix(!0, !1),
              this.matrixAutoUpdate && this.updateMatrix(),
              null === this.parent
                ? this.matrixWorld.copy(this.matrix)
                : this.matrixWorld.multiplyMatrices(
                    this.parent.matrixWorld,
                    this.matrix
                  ),
              !0 === e)
            )
              for (var i = this.children, r = 0, a = i.length; r < a; r++)
                i[r].updateWorldMatrix(!1, !0);
          },
          toJSON: function(t) {
            var e = void 0 === t || "string" == typeof t,
              n = {};
            e &&
              ((t = {
                geometries: {},
                materials: {},
                textures: {},
                images: {},
                shapes: {}
              }),
              (n.metadata = {
                version: 4.5,
                type: "Object",
                generator: "Object3D.toJSON"
              }));
            var i = {};
            function r(e, n) {
              return void 0 === e[n.uuid] && (e[n.uuid] = n.toJSON(t)), n.uuid;
            }
            if (
              ((i.uuid = this.uuid),
              (i.type = this.type),
              "" !== this.name && (i.name = this.name),
              !0 === this.castShadow && (i.castShadow = !0),
              !0 === this.receiveShadow && (i.receiveShadow = !0),
              !1 === this.visible && (i.visible = !1),
              !1 === this.frustumCulled && (i.frustumCulled = !1),
              0 !== this.renderOrder && (i.renderOrder = this.renderOrder),
              "{}" !== JSON.stringify(this.userData) &&
                (i.userData = this.userData),
              (i.layers = this.layers.mask),
              (i.matrix = this.matrix.toArray()),
              !1 === this.matrixAutoUpdate && (i.matrixAutoUpdate = !1),
              this.isMesh || this.isLine || this.isPoints)
            ) {
              i.geometry = r(t.geometries, this.geometry);
              var a = this.geometry.parameters;
              if (void 0 !== a && void 0 !== a.shapes) {
                var o = a.shapes;
                if (Array.isArray(o))
                  for (var s = 0, l = o.length; s < l; s++) {
                    var c = o[s];
                    r(t.shapes, c);
                  }
                else r(t.shapes, o);
              }
            }
            if (void 0 !== this.material)
              if (Array.isArray(this.material)) {
                var h = [];
                for (s = 0, l = this.material.length; s < l; s++)
                  h.push(r(t.materials, this.material[s]));
                i.material = h;
              } else i.material = r(t.materials, this.material);
            if (this.children.length > 0) {
              i.children = [];
              for (s = 0; s < this.children.length; s++)
                i.children.push(this.children[s].toJSON(t).object);
            }
            if (e) {
              var u = m(t.geometries),
                d = m(t.materials),
                f = m(t.textures),
                p = m(t.images);
              o = m(t.shapes);
              u.length > 0 && (n.geometries = u),
                d.length > 0 && (n.materials = d),
                f.length > 0 && (n.textures = f),
                p.length > 0 && (n.images = p),
                o.length > 0 && (n.shapes = o);
            }
            return (n.object = i), n;
            function m(t) {
              var e = [];
              for (var n in t) {
                var i = t[n];
                delete i.metadata, e.push(i);
              }
              return e;
            }
          },
          clone: function(t) {
            return new this.constructor().copy(this, t);
          },
          copy: function(t, e) {
            if (
              (void 0 === e && (e = !0),
              (this.name = t.name),
              this.up.copy(t.up),
              this.position.copy(t.position),
              this.quaternion.copy(t.quaternion),
              this.scale.copy(t.scale),
              this.matrix.copy(t.matrix),
              this.matrixWorld.copy(t.matrixWorld),
              (this.matrixAutoUpdate = t.matrixAutoUpdate),
              (this.matrixWorldNeedsUpdate = t.matrixWorldNeedsUpdate),
              (this.layers.mask = t.layers.mask),
              (this.visible = t.visible),
              (this.castShadow = t.castShadow),
              (this.receiveShadow = t.receiveShadow),
              (this.frustumCulled = t.frustumCulled),
              (this.renderOrder = t.renderOrder),
              (this.userData = JSON.parse(JSON.stringify(t.userData))),
              !0 === e)
            )
              for (var n = 0; n < t.children.length; n++) {
                var i = t.children[n];
                this.add(i.clone());
              }
            return this;
          }
        }));
    },
    function(t, e, n) {
      "use strict";
      function i(t) {
        var e = {};
        for (var n in t)
          for (var i in ((e[n] = {}), t[n])) {
            var r = t[n][i];
            r &&
            (r.isColor ||
              r.isMatrix3 ||
              r.isMatrix4 ||
              r.isVector2 ||
              r.isVector3 ||
              r.isVector4 ||
              r.isTexture)
              ? (e[n][i] = r.clone())
              : Array.isArray(r) ? (e[n][i] = r.slice()) : (e[n][i] = r);
          }
        return e;
      }
      function r(t) {
        for (var e = {}, n = 0; n < t.length; n++) {
          var r = i(t[n]);
          for (var a in r) e[a] = r[a];
        }
        return e;
      }
      n.d(e, "a", function() {
        return i;
      }),
        n.d(e, "b", function() {
          return r;
        });
    },
    function(t, e, n) {
      "use strict";
      n.d(e, "a", function() {
        return a;
      });
      var i,
        r = n(1);
      function a() {
        (this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1]),
          arguments.length > 0 &&
            console.error(
              "THREE.Matrix3: the constructor no longer reads arguments. use .set() instead."
            );
      }
      Object.assign(a.prototype, {
        isMatrix3: !0,
        set: function(t, e, n, i, r, a, o, s, l) {
          var c = this.elements;
          return (
            (c[0] = t),
            (c[1] = i),
            (c[2] = o),
            (c[3] = e),
            (c[4] = r),
            (c[5] = s),
            (c[6] = n),
            (c[7] = a),
            (c[8] = l),
            this
          );
        },
        identity: function() {
          return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
        },
        clone: function() {
          return new this.constructor().fromArray(this.elements);
        },
        copy: function(t) {
          var e = this.elements,
            n = t.elements;
          return (
            (e[0] = n[0]),
            (e[1] = n[1]),
            (e[2] = n[2]),
            (e[3] = n[3]),
            (e[4] = n[4]),
            (e[5] = n[5]),
            (e[6] = n[6]),
            (e[7] = n[7]),
            (e[8] = n[8]),
            this
          );
        },
        setFromMatrix4: function(t) {
          var e = t.elements;
          return (
            this.set(e[0], e[4], e[8], e[1], e[5], e[9], e[2], e[6], e[10]),
            this
          );
        },
        applyToBufferAttribute: ((i = new r.a()),
        function(t) {
          for (var e = 0, n = t.count; e < n; e++)
            (i.x = t.getX(e)),
              (i.y = t.getY(e)),
              (i.z = t.getZ(e)),
              i.applyMatrix3(this),
              t.setXYZ(e, i.x, i.y, i.z);
          return t;
        }),
        multiply: function(t) {
          return this.multiplyMatrices(this, t);
        },
        premultiply: function(t) {
          return this.multiplyMatrices(t, this);
        },
        multiplyMatrices: function(t, e) {
          var n = t.elements,
            i = e.elements,
            r = this.elements,
            a = n[0],
            o = n[3],
            s = n[6],
            l = n[1],
            c = n[4],
            h = n[7],
            u = n[2],
            d = n[5],
            f = n[8],
            p = i[0],
            m = i[3],
            g = i[6],
            v = i[1],
            _ = i[4],
            y = i[7],
            x = i[2],
            b = i[5],
            w = i[8];
          return (
            (r[0] = a * p + o * v + s * x),
            (r[3] = a * m + o * _ + s * b),
            (r[6] = a * g + o * y + s * w),
            (r[1] = l * p + c * v + h * x),
            (r[4] = l * m + c * _ + h * b),
            (r[7] = l * g + c * y + h * w),
            (r[2] = u * p + d * v + f * x),
            (r[5] = u * m + d * _ + f * b),
            (r[8] = u * g + d * y + f * w),
            this
          );
        },
        multiplyScalar: function(t) {
          var e = this.elements;
          return (
            (e[0] *= t),
            (e[3] *= t),
            (e[6] *= t),
            (e[1] *= t),
            (e[4] *= t),
            (e[7] *= t),
            (e[2] *= t),
            (e[5] *= t),
            (e[8] *= t),
            this
          );
        },
        determinant: function() {
          var t = this.elements,
            e = t[0],
            n = t[1],
            i = t[2],
            r = t[3],
            a = t[4],
            o = t[5],
            s = t[6],
            l = t[7],
            c = t[8];
          return (
            e * a * c -
            e * o * l -
            n * r * c +
            n * o * s +
            i * r * l -
            i * a * s
          );
        },
        getInverse: function(t, e) {
          t &&
            t.isMatrix4 &&
            console.error(
              "THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument."
            );
          var n = t.elements,
            i = this.elements,
            r = n[0],
            a = n[1],
            o = n[2],
            s = n[3],
            l = n[4],
            c = n[5],
            h = n[6],
            u = n[7],
            d = n[8],
            f = d * l - c * u,
            p = c * h - d * s,
            m = u * s - l * h,
            g = r * f + a * p + o * m;
          if (0 === g) {
            var v =
              "THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";
            if (!0 === e) throw new Error(v);
            return console.warn(v), this.identity();
          }
          var _ = 1 / g;
          return (
            (i[0] = f * _),
            (i[1] = (o * u - d * a) * _),
            (i[2] = (c * a - o * l) * _),
            (i[3] = p * _),
            (i[4] = (d * r - o * h) * _),
            (i[5] = (o * s - c * r) * _),
            (i[6] = m * _),
            (i[7] = (a * h - u * r) * _),
            (i[8] = (l * r - a * s) * _),
            this
          );
        },
        transpose: function() {
          var t,
            e = this.elements;
          return (
            (t = e[1]),
            (e[1] = e[3]),
            (e[3] = t),
            (t = e[2]),
            (e[2] = e[6]),
            (e[6] = t),
            (t = e[5]),
            (e[5] = e[7]),
            (e[7] = t),
            this
          );
        },
        getNormalMatrix: function(t) {
          return this.setFromMatrix4(t)
            .getInverse(this)
            .transpose();
        },
        transposeIntoArray: function(t) {
          var e = this.elements;
          return (
            (t[0] = e[0]),
            (t[1] = e[3]),
            (t[2] = e[6]),
            (t[3] = e[1]),
            (t[4] = e[4]),
            (t[5] = e[7]),
            (t[6] = e[2]),
            (t[7] = e[5]),
            (t[8] = e[8]),
            this
          );
        },
        setUvTransform: function(t, e, n, i, r, a, o) {
          var s = Math.cos(r),
            l = Math.sin(r);
          this.set(
            n * s,
            n * l,
            -n * (s * a + l * o) + a + t,
            -i * l,
            i * s,
            -i * (-l * a + s * o) + o + e,
            0,
            0,
            1
          );
        },
        scale: function(t, e) {
          var n = this.elements;
          return (
            (n[0] *= t),
            (n[3] *= t),
            (n[6] *= t),
            (n[1] *= e),
            (n[4] *= e),
            (n[7] *= e),
            this
          );
        },
        rotate: function(t) {
          var e = Math.cos(t),
            n = Math.sin(t),
            i = this.elements,
            r = i[0],
            a = i[3],
            o = i[6],
            s = i[1],
            l = i[4],
            c = i[7];
          return (
            (i[0] = e * r + n * s),
            (i[3] = e * a + n * l),
            (i[6] = e * o + n * c),
            (i[1] = -n * r + e * s),
            (i[4] = -n * a + e * l),
            (i[7] = -n * o + e * c),
            this
          );
        },
        translate: function(t, e) {
          var n = this.elements;
          return (
            (n[0] += t * n[2]),
            (n[3] += t * n[5]),
            (n[6] += t * n[8]),
            (n[1] += e * n[2]),
            (n[4] += e * n[5]),
            (n[7] += e * n[8]),
            this
          );
        },
        equals: function(t) {
          for (var e = this.elements, n = t.elements, i = 0; i < 9; i++)
            if (e[i] !== n[i]) return !1;
          return !0;
        },
        fromArray: function(t, e) {
          void 0 === e && (e = 0);
          for (var n = 0; n < 9; n++) this.elements[n] = t[n + e];
          return this;
        },
        toArray: function(t, e) {
          void 0 === t && (t = []), void 0 === e && (e = 0);
          var n = this.elements;
          return (
            (t[e] = n[0]),
            (t[e + 1] = n[1]),
            (t[e + 2] = n[2]),
            (t[e + 3] = n[3]),
            (t[e + 4] = n[4]),
            (t[e + 5] = n[5]),
            (t[e + 6] = n[6]),
            (t[e + 7] = n[7]),
            (t[e + 8] = n[8]),
            t
          );
        }
      });
    },
    function(t, e, n) {
      "use strict";
      n.d(e, "a", function() {
        return s;
      });
      var i = n(18),
        r = n(0),
        a = n(5),
        o = 0;
      function s() {
        Object.defineProperty(this, "id", { value: o++ }),
          (this.uuid = a.a.generateUUID()),
          (this.name = ""),
          (this.type = "Material"),
          (this.fog = !0),
          (this.lights = !0),
          (this.blending = r.fb),
          (this.side = r.D),
          (this.flatShading = !1),
          (this.vertexColors = r.db),
          (this.opacity = 1),
          (this.transparent = !1),
          (this.blendSrc = r.ac),
          (this.blendDst = r.lb),
          (this.blendEquation = r.b),
          (this.blendSrcAlpha = null),
          (this.blendDstAlpha = null),
          (this.blendEquationAlpha = null),
          (this.depthFunc = r.K),
          (this.depthTest = !0),
          (this.depthWrite = !0),
          (this.clippingPlanes = null),
          (this.clipIntersection = !1),
          (this.clipShadows = !1),
          (this.shadowSide = null),
          (this.colorWrite = !0),
          (this.precision = null),
          (this.polygonOffset = !1),
          (this.polygonOffsetFactor = 0),
          (this.polygonOffsetUnits = 0),
          (this.dithering = !1),
          (this.alphaTest = 0),
          (this.premultipliedAlpha = !1),
          (this.visible = !0),
          (this.userData = {}),
          (this.needsUpdate = !0);
      }
      s.prototype = Object.assign(Object.create(i.a.prototype), {
        constructor: s,
        isMaterial: !0,
        onBeforeCompile: function() {},
        setValues: function(t) {
          if (void 0 !== t)
            for (var e in t) {
              var n = t[e];
              if (void 0 !== n)
                if ("shading" !== e) {
                  var i = this[e];
                  void 0 !== i
                    ? i && i.isColor
                      ? i.set(n)
                      : i && i.isVector3 && n && n.isVector3
                        ? i.copy(n)
                        : (this[e] = n)
                    : console.warn(
                        "THREE." +
                          this.type +
                          ": '" +
                          e +
                          "' is not a property of this material."
                      );
                } else
                  console.warn(
                    "THREE." +
                      this.type +
                      ": .shading has been removed. Use the boolean .flatShading instead."
                  ),
                    (this.flatShading = n === r.B);
              else
                console.warn(
                  "THREE.Material: '" + e + "' parameter is undefined."
                );
            }
        },
        toJSON: function(t) {
          var e = void 0 === t || "string" == typeof t;
          e && (t = { textures: {}, images: {} });
          var n = {
            metadata: {
              version: 4.5,
              type: "Material",
              generator: "Material.toJSON"
            }
          };
          function i(t) {
            var e = [];
            for (var n in t) {
              var i = t[n];
              delete i.metadata, e.push(i);
            }
            return e;
          }
          if (
            ((n.uuid = this.uuid),
            (n.type = this.type),
            "" !== this.name && (n.name = this.name),
            this.color && this.color.isColor && (n.color = this.color.getHex()),
            void 0 !== this.roughness && (n.roughness = this.roughness),
            void 0 !== this.metalness && (n.metalness = this.metalness),
            this.emissive &&
              this.emissive.isColor &&
              (n.emissive = this.emissive.getHex()),
            1 !== this.emissiveIntensity &&
              (n.emissiveIntensity = this.emissiveIntensity),
            this.specular &&
              this.specular.isColor &&
              (n.specular = this.specular.getHex()),
            void 0 !== this.shininess && (n.shininess = this.shininess),
            void 0 !== this.clearCoat && (n.clearCoat = this.clearCoat),
            void 0 !== this.clearCoatRoughness &&
              (n.clearCoatRoughness = this.clearCoatRoughness),
            this.map && this.map.isTexture && (n.map = this.map.toJSON(t).uuid),
            this.alphaMap &&
              this.alphaMap.isTexture &&
              (n.alphaMap = this.alphaMap.toJSON(t).uuid),
            this.lightMap &&
              this.lightMap.isTexture &&
              (n.lightMap = this.lightMap.toJSON(t).uuid),
            this.aoMap &&
              this.aoMap.isTexture &&
              ((n.aoMap = this.aoMap.toJSON(t).uuid),
              (n.aoMapIntensity = this.aoMapIntensity)),
            this.bumpMap &&
              this.bumpMap.isTexture &&
              ((n.bumpMap = this.bumpMap.toJSON(t).uuid),
              (n.bumpScale = this.bumpScale)),
            this.normalMap &&
              this.normalMap.isTexture &&
              ((n.normalMap = this.normalMap.toJSON(t).uuid),
              (n.normalMapType = this.normalMapType),
              (n.normalScale = this.normalScale.toArray())),
            this.displacementMap &&
              this.displacementMap.isTexture &&
              ((n.displacementMap = this.displacementMap.toJSON(t).uuid),
              (n.displacementScale = this.displacementScale),
              (n.displacementBias = this.displacementBias)),
            this.roughnessMap &&
              this.roughnessMap.isTexture &&
              (n.roughnessMap = this.roughnessMap.toJSON(t).uuid),
            this.metalnessMap &&
              this.metalnessMap.isTexture &&
              (n.metalnessMap = this.metalnessMap.toJSON(t).uuid),
            this.emissiveMap &&
              this.emissiveMap.isTexture &&
              (n.emissiveMap = this.emissiveMap.toJSON(t).uuid),
            this.specularMap &&
              this.specularMap.isTexture &&
              (n.specularMap = this.specularMap.toJSON(t).uuid),
            this.envMap &&
              this.envMap.isTexture &&
              ((n.envMap = this.envMap.toJSON(t).uuid),
              (n.reflectivity = this.reflectivity),
              void 0 !== this.combine && (n.combine = this.combine),
              void 0 !== this.envMapIntensity &&
                (n.envMapIntensity = this.envMapIntensity)),
            this.gradientMap &&
              this.gradientMap.isTexture &&
              (n.gradientMap = this.gradientMap.toJSON(t).uuid),
            void 0 !== this.size && (n.size = this.size),
            void 0 !== this.sizeAttenuation &&
              (n.sizeAttenuation = this.sizeAttenuation),
            this.blending !== r.fb && (n.blending = this.blending),
            !0 === this.flatShading && (n.flatShading = this.flatShading),
            this.side !== r.D && (n.side = this.side),
            this.vertexColors !== r.db && (n.vertexColors = this.vertexColors),
            this.opacity < 1 && (n.opacity = this.opacity),
            !0 === this.transparent && (n.transparent = this.transparent),
            (n.depthFunc = this.depthFunc),
            (n.depthTest = this.depthTest),
            (n.depthWrite = this.depthWrite),
            0 !== this.rotation && (n.rotation = this.rotation),
            !0 === this.polygonOffset && (n.polygonOffset = !0),
            0 !== this.polygonOffsetFactor &&
              (n.polygonOffsetFactor = this.polygonOffsetFactor),
            0 !== this.polygonOffsetUnits &&
              (n.polygonOffsetUnits = this.polygonOffsetUnits),
            1 !== this.linewidth && (n.linewidth = this.linewidth),
            void 0 !== this.dashSize && (n.dashSize = this.dashSize),
            void 0 !== this.gapSize && (n.gapSize = this.gapSize),
            void 0 !== this.scale && (n.scale = this.scale),
            !0 === this.dithering && (n.dithering = !0),
            this.alphaTest > 0 && (n.alphaTest = this.alphaTest),
            !0 === this.premultipliedAlpha &&
              (n.premultipliedAlpha = this.premultipliedAlpha),
            !0 === this.wireframe && (n.wireframe = this.wireframe),
            this.wireframeLinewidth > 1 &&
              (n.wireframeLinewidth = this.wireframeLinewidth),
            "round" !== this.wireframeLinecap &&
              (n.wireframeLinecap = this.wireframeLinecap),
            "round" !== this.wireframeLinejoin &&
              (n.wireframeLinejoin = this.wireframeLinejoin),
            !0 === this.morphTargets && (n.morphTargets = !0),
            !0 === this.skinning && (n.skinning = !0),
            !1 === this.visible && (n.visible = !1),
            "{}" !== JSON.stringify(this.userData) &&
              (n.userData = this.userData),
            e)
          ) {
            var a = i(t.textures),
              o = i(t.images);
            a.length > 0 && (n.textures = a), o.length > 0 && (n.images = o);
          }
          return n;
        },
        clone: function() {
          return new this.constructor().copy(this);
        },
        copy: function(t) {
          (this.name = t.name),
            (this.fog = t.fog),
            (this.lights = t.lights),
            (this.blending = t.blending),
            (this.side = t.side),
            (this.flatShading = t.flatShading),
            (this.vertexColors = t.vertexColors),
            (this.opacity = t.opacity),
            (this.transparent = t.transparent),
            (this.blendSrc = t.blendSrc),
            (this.blendDst = t.blendDst),
            (this.blendEquation = t.blendEquation),
            (this.blendSrcAlpha = t.blendSrcAlpha),
            (this.blendDstAlpha = t.blendDstAlpha),
            (this.blendEquationAlpha = t.blendEquationAlpha),
            (this.depthFunc = t.depthFunc),
            (this.depthTest = t.depthTest),
            (this.depthWrite = t.depthWrite),
            (this.colorWrite = t.colorWrite),
            (this.precision = t.precision),
            (this.polygonOffset = t.polygonOffset),
            (this.polygonOffsetFactor = t.polygonOffsetFactor),
            (this.polygonOffsetUnits = t.polygonOffsetUnits),
            (this.dithering = t.dithering),
            (this.alphaTest = t.alphaTest),
            (this.premultipliedAlpha = t.premultipliedAlpha),
            (this.visible = t.visible),
            (this.userData = JSON.parse(JSON.stringify(t.userData))),
            (this.clipShadows = t.clipShadows),
            (this.clipIntersection = t.clipIntersection);
          var e = t.clippingPlanes,
            n = null;
          if (null !== e) {
            var i = e.length;
            n = new Array(i);
            for (var r = 0; r !== i; ++r) n[r] = e[r].clone();
          }
          return (
            (this.clippingPlanes = n), (this.shadowSide = t.shadowSide), this
          );
        },
        dispose: function() {
          this.dispatchEvent({ type: "dispose" });
        }
      });
    },
    function(t, e, n) {
      "use strict";
      var i,
        r = n(18),
        a = n(0),
        o = n(5),
        s = n(6),
        l = n(12),
        c = function(t) {
          var e;
          if ("undefined" == typeof HTMLCanvasElement) return t.src;
          if (t instanceof HTMLCanvasElement) e = t;
          else {
            void 0 === i &&
              (i = document.createElementNS(
                "http://www.w3.org/1999/xhtml",
                "canvas"
              )),
              (i.width = t.width),
              (i.height = t.height);
            var n = i.getContext("2d");
            t instanceof ImageData
              ? n.putImageData(t, 0, 0)
              : n.drawImage(t, 0, 0, t.width, t.height),
              (e = i);
          }
          return e.width > 2048 || e.height > 2048
            ? e.toDataURL("image/jpeg", 0.6)
            : e.toDataURL("image/png");
        };
      n.d(e, "a", function() {
        return u;
      });
      var h = 0;
      function u(t, e, n, i, r, c, d, f, p, m) {
        Object.defineProperty(this, "id", { value: h++ }),
          (this.uuid = o.a.generateUUID()),
          (this.name = ""),
          (this.image = void 0 !== t ? t : u.DEFAULT_IMAGE),
          (this.mipmaps = []),
          (this.mapping = void 0 !== e ? e : u.DEFAULT_MAPPING),
          (this.wrapS = void 0 !== n ? n : a.k),
          (this.wrapT = void 0 !== i ? i : a.k),
          (this.magFilter = void 0 !== r ? r : a.M),
          (this.minFilter = void 0 !== c ? c : a.N),
          (this.anisotropy = void 0 !== p ? p : 1),
          (this.format = void 0 !== d ? d : a.rb),
          (this.type = void 0 !== f ? f : a.kc),
          (this.offset = new s.a(0, 0)),
          (this.repeat = new s.a(1, 1)),
          (this.center = new s.a(0, 0)),
          (this.rotation = 0),
          (this.matrixAutoUpdate = !0),
          (this.matrix = new l.a()),
          (this.generateMipmaps = !0),
          (this.premultiplyAlpha = !1),
          (this.flipY = !0),
          (this.unpackAlignment = 4),
          (this.encoding = void 0 !== m ? m : a.L),
          (this.version = 0),
          (this.onUpdate = null);
      }
      (u.DEFAULT_IMAGE = void 0),
        (u.DEFAULT_MAPPING = a.ic),
        (u.prototype = Object.assign(Object.create(r.a.prototype), {
          constructor: u,
          isTexture: !0,
          updateMatrix: function() {
            this.matrix.setUvTransform(
              this.offset.x,
              this.offset.y,
              this.repeat.x,
              this.repeat.y,
              this.rotation,
              this.center.x,
              this.center.y
            );
          },
          clone: function() {
            return new this.constructor().copy(this);
          },
          copy: function(t) {
            return (
              (this.name = t.name),
              (this.image = t.image),
              (this.mipmaps = t.mipmaps.slice(0)),
              (this.mapping = t.mapping),
              (this.wrapS = t.wrapS),
              (this.wrapT = t.wrapT),
              (this.magFilter = t.magFilter),
              (this.minFilter = t.minFilter),
              (this.anisotropy = t.anisotropy),
              (this.format = t.format),
              (this.type = t.type),
              this.offset.copy(t.offset),
              this.repeat.copy(t.repeat),
              this.center.copy(t.center),
              (this.rotation = t.rotation),
              (this.matrixAutoUpdate = t.matrixAutoUpdate),
              this.matrix.copy(t.matrix),
              (this.generateMipmaps = t.generateMipmaps),
              (this.premultiplyAlpha = t.premultiplyAlpha),
              (this.flipY = t.flipY),
              (this.unpackAlignment = t.unpackAlignment),
              (this.encoding = t.encoding),
              this
            );
          },
          toJSON: function(t) {
            var e = void 0 === t || "string" == typeof t;
            if (!e && void 0 !== t.textures[this.uuid])
              return t.textures[this.uuid];
            var n = {
              metadata: {
                version: 4.5,
                type: "Texture",
                generator: "Texture.toJSON"
              },
              uuid: this.uuid,
              name: this.name,
              mapping: this.mapping,
              repeat: [this.repeat.x, this.repeat.y],
              offset: [this.offset.x, this.offset.y],
              center: [this.center.x, this.center.y],
              rotation: this.rotation,
              wrap: [this.wrapS, this.wrapT],
              format: this.format,
              minFilter: this.minFilter,
              magFilter: this.magFilter,
              anisotropy: this.anisotropy,
              flipY: this.flipY
            };
            if (void 0 !== this.image) {
              var i = this.image;
              if (
                (void 0 === i.uuid && (i.uuid = o.a.generateUUID()),
                !e && void 0 === t.images[i.uuid])
              ) {
                var r;
                if (Array.isArray(i)) {
                  r = [];
                  for (var a = 0, s = i.length; a < s; a++) r.push(c(i[a]));
                } else r = c(i);
                t.images[i.uuid] = { uuid: i.uuid, url: r };
              }
              n.image = i.uuid;
            }
            return e || (t.textures[this.uuid] = n), n;
          },
          dispose: function() {
            this.dispatchEvent({ type: "dispose" });
          },
          transformUv: function(t) {
            if (this.mapping !== a.ic) return t;
            if ((t.applyMatrix3(this.matrix), t.x < 0 || t.x > 1))
              switch (this.wrapS) {
                case a.Wb:
                  t.x = t.x - Math.floor(t.x);
                  break;
                case a.k:
                  t.x = t.x < 0 ? 0 : 1;
                  break;
                case a.U:
                  1 === Math.abs(Math.floor(t.x) % 2)
                    ? (t.x = Math.ceil(t.x) - t.x)
                    : (t.x = t.x - Math.floor(t.x));
              }
            if (t.y < 0 || t.y > 1)
              switch (this.wrapT) {
                case a.Wb:
                  t.y = t.y - Math.floor(t.y);
                  break;
                case a.k:
                  t.y = t.y < 0 ? 0 : 1;
                  break;
                case a.U:
                  1 === Math.abs(Math.floor(t.y) % 2)
                    ? (t.y = Math.ceil(t.y) - t.y)
                    : (t.y = t.y - Math.floor(t.y));
              }
            return this.flipY && (t.y = 1 - t.y), t;
          }
        })),
        Object.defineProperty(u.prototype, "needsUpdate", {
          set: function(t) {
            !0 === t && this.version++;
          }
        });
    },
    function(t, e, n) {
      "use strict";
      n.d(e, "a", function() {
        return s;
      });
      var i,
        r,
        a = n(5),
        o = n(1);
      function s(t, e, n, i) {
        (this._x = t || 0),
          (this._y = e || 0),
          (this._z = n || 0),
          (this._w = void 0 !== i ? i : 1);
      }
      Object.assign(s, {
        slerp: function(t, e, n, i) {
          return n.copy(t).slerp(e, i);
        },
        slerpFlat: function(t, e, n, i, r, a, o) {
          var s = n[i + 0],
            l = n[i + 1],
            c = n[i + 2],
            h = n[i + 3],
            u = r[a + 0],
            d = r[a + 1],
            f = r[a + 2],
            p = r[a + 3];
          if (h !== p || s !== u || l !== d || c !== f) {
            var m = 1 - o,
              g = s * u + l * d + c * f + h * p,
              v = g >= 0 ? 1 : -1,
              _ = 1 - g * g;
            if (_ > Number.EPSILON) {
              var y = Math.sqrt(_),
                x = Math.atan2(y, g * v);
              (m = Math.sin(m * x) / y), (o = Math.sin(o * x) / y);
            }
            var b = o * v;
            if (
              ((s = s * m + u * b),
              (l = l * m + d * b),
              (c = c * m + f * b),
              (h = h * m + p * b),
              m === 1 - o)
            ) {
              var w = 1 / Math.sqrt(s * s + l * l + c * c + h * h);
              (s *= w), (l *= w), (c *= w), (h *= w);
            }
          }
          (t[e] = s), (t[e + 1] = l), (t[e + 2] = c), (t[e + 3] = h);
        }
      }),
        Object.defineProperties(s.prototype, {
          x: {
            get: function() {
              return this._x;
            },
            set: function(t) {
              (this._x = t), this.onChangeCallback();
            }
          },
          y: {
            get: function() {
              return this._y;
            },
            set: function(t) {
              (this._y = t), this.onChangeCallback();
            }
          },
          z: {
            get: function() {
              return this._z;
            },
            set: function(t) {
              (this._z = t), this.onChangeCallback();
            }
          },
          w: {
            get: function() {
              return this._w;
            },
            set: function(t) {
              (this._w = t), this.onChangeCallback();
            }
          }
        }),
        Object.assign(s.prototype, {
          isQuaternion: !0,
          set: function(t, e, n, i) {
            return (
              (this._x = t),
              (this._y = e),
              (this._z = n),
              (this._w = i),
              this.onChangeCallback(),
              this
            );
          },
          clone: function() {
            return new this.constructor(this._x, this._y, this._z, this._w);
          },
          copy: function(t) {
            return (
              (this._x = t.x),
              (this._y = t.y),
              (this._z = t.z),
              (this._w = t.w),
              this.onChangeCallback(),
              this
            );
          },
          setFromEuler: function(t, e) {
            if (!t || !t.isEuler)
              throw new Error(
                "THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order."
              );
            var n = t._x,
              i = t._y,
              r = t._z,
              a = t.order,
              o = Math.cos,
              s = Math.sin,
              l = o(n / 2),
              c = o(i / 2),
              h = o(r / 2),
              u = s(n / 2),
              d = s(i / 2),
              f = s(r / 2);
            return (
              "XYZ" === a
                ? ((this._x = u * c * h + l * d * f),
                  (this._y = l * d * h - u * c * f),
                  (this._z = l * c * f + u * d * h),
                  (this._w = l * c * h - u * d * f))
                : "YXZ" === a
                  ? ((this._x = u * c * h + l * d * f),
                    (this._y = l * d * h - u * c * f),
                    (this._z = l * c * f - u * d * h),
                    (this._w = l * c * h + u * d * f))
                  : "ZXY" === a
                    ? ((this._x = u * c * h - l * d * f),
                      (this._y = l * d * h + u * c * f),
                      (this._z = l * c * f + u * d * h),
                      (this._w = l * c * h - u * d * f))
                    : "ZYX" === a
                      ? ((this._x = u * c * h - l * d * f),
                        (this._y = l * d * h + u * c * f),
                        (this._z = l * c * f - u * d * h),
                        (this._w = l * c * h + u * d * f))
                      : "YZX" === a
                        ? ((this._x = u * c * h + l * d * f),
                          (this._y = l * d * h + u * c * f),
                          (this._z = l * c * f - u * d * h),
                          (this._w = l * c * h - u * d * f))
                        : "XZY" === a &&
                          ((this._x = u * c * h - l * d * f),
                          (this._y = l * d * h - u * c * f),
                          (this._z = l * c * f + u * d * h),
                          (this._w = l * c * h + u * d * f)),
              !1 !== e && this.onChangeCallback(),
              this
            );
          },
          setFromAxisAngle: function(t, e) {
            var n = e / 2,
              i = Math.sin(n);
            return (
              (this._x = t.x * i),
              (this._y = t.y * i),
              (this._z = t.z * i),
              (this._w = Math.cos(n)),
              this.onChangeCallback(),
              this
            );
          },
          setFromRotationMatrix: function(t) {
            var e,
              n = t.elements,
              i = n[0],
              r = n[4],
              a = n[8],
              o = n[1],
              s = n[5],
              l = n[9],
              c = n[2],
              h = n[6],
              u = n[10],
              d = i + s + u;
            return (
              d > 0
                ? ((e = 0.5 / Math.sqrt(d + 1)),
                  (this._w = 0.25 / e),
                  (this._x = (h - l) * e),
                  (this._y = (a - c) * e),
                  (this._z = (o - r) * e))
                : i > s && i > u
                  ? ((e = 2 * Math.sqrt(1 + i - s - u)),
                    (this._w = (h - l) / e),
                    (this._x = 0.25 * e),
                    (this._y = (r + o) / e),
                    (this._z = (a + c) / e))
                  : s > u
                    ? ((e = 2 * Math.sqrt(1 + s - i - u)),
                      (this._w = (a - c) / e),
                      (this._x = (r + o) / e),
                      (this._y = 0.25 * e),
                      (this._z = (l + h) / e))
                    : ((e = 2 * Math.sqrt(1 + u - i - s)),
                      (this._w = (o - r) / e),
                      (this._x = (a + c) / e),
                      (this._y = (l + h) / e),
                      (this._z = 0.25 * e)),
              this.onChangeCallback(),
              this
            );
          },
          setFromUnitVectors: ((r = new o.a()),
          function(t, e) {
            return (
              void 0 === r && (r = new o.a()),
              (i = t.dot(e) + 1) < 1e-6
                ? ((i = 0),
                  Math.abs(t.x) > Math.abs(t.z)
                    ? r.set(-t.y, t.x, 0)
                    : r.set(0, -t.z, t.y))
                : r.crossVectors(t, e),
              (this._x = r.x),
              (this._y = r.y),
              (this._z = r.z),
              (this._w = i),
              this.normalize()
            );
          }),
          angleTo: function(t) {
            return 2 * Math.acos(Math.abs(a.a.clamp(this.dot(t), -1, 1)));
          },
          rotateTowards: function(t, e) {
            var n = this.angleTo(t);
            if (0 === n) return this;
            var i = Math.min(1, e / n);
            return this.slerp(t, i), this;
          },
          inverse: function() {
            return this.conjugate();
          },
          conjugate: function() {
            return (
              (this._x *= -1),
              (this._y *= -1),
              (this._z *= -1),
              this.onChangeCallback(),
              this
            );
          },
          dot: function(t) {
            return (
              this._x * t._x + this._y * t._y + this._z * t._z + this._w * t._w
            );
          },
          lengthSq: function() {
            return (
              this._x * this._x +
              this._y * this._y +
              this._z * this._z +
              this._w * this._w
            );
          },
          length: function() {
            return Math.sqrt(
              this._x * this._x +
                this._y * this._y +
                this._z * this._z +
                this._w * this._w
            );
          },
          normalize: function() {
            var t = this.length();
            return (
              0 === t
                ? ((this._x = 0), (this._y = 0), (this._z = 0), (this._w = 1))
                : ((t = 1 / t),
                  (this._x = this._x * t),
                  (this._y = this._y * t),
                  (this._z = this._z * t),
                  (this._w = this._w * t)),
              this.onChangeCallback(),
              this
            );
          },
          multiply: function(t, e) {
            return void 0 !== e
              ? (console.warn(
                  "THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."
                ),
                this.multiplyQuaternions(t, e))
              : this.multiplyQuaternions(this, t);
          },
          premultiply: function(t) {
            return this.multiplyQuaternions(t, this);
          },
          multiplyQuaternions: function(t, e) {
            var n = t._x,
              i = t._y,
              r = t._z,
              a = t._w,
              o = e._x,
              s = e._y,
              l = e._z,
              c = e._w;
            return (
              (this._x = n * c + a * o + i * l - r * s),
              (this._y = i * c + a * s + r * o - n * l),
              (this._z = r * c + a * l + n * s - i * o),
              (this._w = a * c - n * o - i * s - r * l),
              this.onChangeCallback(),
              this
            );
          },
          slerp: function(t, e) {
            if (0 === e) return this;
            if (1 === e) return this.copy(t);
            var n = this._x,
              i = this._y,
              r = this._z,
              a = this._w,
              o = a * t._w + n * t._x + i * t._y + r * t._z;
            if (
              (o < 0
                ? ((this._w = -t._w),
                  (this._x = -t._x),
                  (this._y = -t._y),
                  (this._z = -t._z),
                  (o = -o))
                : this.copy(t),
              o >= 1)
            )
              return (
                (this._w = a), (this._x = n), (this._y = i), (this._z = r), this
              );
            var s = 1 - o * o;
            if (s <= Number.EPSILON) {
              var l = 1 - e;
              return (
                (this._w = l * a + e * this._w),
                (this._x = l * n + e * this._x),
                (this._y = l * i + e * this._y),
                (this._z = l * r + e * this._z),
                this.normalize()
              );
            }
            var c = Math.sqrt(s),
              h = Math.atan2(c, o),
              u = Math.sin((1 - e) * h) / c,
              d = Math.sin(e * h) / c;
            return (
              (this._w = a * u + this._w * d),
              (this._x = n * u + this._x * d),
              (this._y = i * u + this._y * d),
              (this._z = r * u + this._z * d),
              this.onChangeCallback(),
              this
            );
          },
          equals: function(t) {
            return (
              t._x === this._x &&
              t._y === this._y &&
              t._z === this._z &&
              t._w === this._w
            );
          },
          fromArray: function(t, e) {
            return (
              void 0 === e && (e = 0),
              (this._x = t[e]),
              (this._y = t[e + 1]),
              (this._z = t[e + 2]),
              (this._w = t[e + 3]),
              this.onChangeCallback(),
              this
            );
          },
          toArray: function(t, e) {
            return (
              void 0 === t && (t = []),
              void 0 === e && (e = 0),
              (t[e] = this._x),
              (t[e + 1] = this._y),
              (t[e + 2] = this._z),
              (t[e + 3] = this._w),
              t
            );
          },
          onChange: function(t) {
            return (this.onChangeCallback = t), this;
          },
          onChangeCallback: function() {}
        });
    },
    function(t, e, n) {
      "use strict";
      /*! npm.im/supports-webp 1.0.5 */ var i =
        "object" == typeof document ? document.createElement("canvas") : {};
      i.width = i.height = 1;
      var r =
        !!i.toDataURL && 5 === i.toDataURL("image/webp").indexOf("image/webp");
      t.exports = r;
    },
    function(t, e, n) {
      "use strict";
      var i = n(35),
        r = n(59),
        a = Object.prototype.toString;
      function o(t) {
        return "[object Array]" === a.call(t);
      }
      function s(t) {
        return null !== t && "object" == typeof t;
      }
      function l(t) {
        return "[object Function]" === a.call(t);
      }
      function c(t, e) {
        if (null != t)
          if (("object" != typeof t && (t = [t]), o(t)))
            for (var n = 0, i = t.length; n < i; n++) e.call(null, t[n], n, t);
          else
            for (var r in t)
              Object.prototype.hasOwnProperty.call(t, r) &&
                e.call(null, t[r], r, t);
      }
      t.exports = {
        isArray: o,
        isArrayBuffer: function(t) {
          return "[object ArrayBuffer]" === a.call(t);
        },
        isBuffer: r,
        isFormData: function(t) {
          return "undefined" != typeof FormData && t instanceof FormData;
        },
        isArrayBufferView: function(t) {
          return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView
            ? ArrayBuffer.isView(t)
            : t && t.buffer && t.buffer instanceof ArrayBuffer;
        },
        isString: function(t) {
          return "string" == typeof t;
        },
        isNumber: function(t) {
          return "number" == typeof t;
        },
        isObject: s,
        isUndefined: function(t) {
          return void 0 === t;
        },
        isDate: function(t) {
          return "[object Date]" === a.call(t);
        },
        isFile: function(t) {
          return "[object File]" === a.call(t);
        },
        isBlob: function(t) {
          return "[object Blob]" === a.call(t);
        },
        isFunction: l,
        isStream: function(t) {
          return s(t) && l(t.pipe);
        },
        isURLSearchParams: function(t) {
          return (
            "undefined" != typeof URLSearchParams &&
            t instanceof URLSearchParams
          );
        },
        isStandardBrowserEnv: function() {
          return (
            ("undefined" == typeof navigator ||
              "ReactNative" !== navigator.product) &&
            "undefined" != typeof window &&
            "undefined" != typeof document
          );
        },
        forEach: c,
        merge: function t() {
          var e = {};
          function n(n, i) {
            "object" == typeof e[i] && "object" == typeof n
              ? (e[i] = t(e[i], n))
              : (e[i] = n);
          }
          for (var i = 0, r = arguments.length; i < r; i++) c(arguments[i], n);
          return e;
        },
        extend: function(t, e, n) {
          return (
            c(e, function(e, r) {
              t[r] = n && "function" == typeof e ? i(e, n) : e;
            }),
            t
          );
        },
        trim: function(t) {
          return t.replace(/^\s*/, "").replace(/\s*$/, "");
        }
      };
    },
    function(t, e, n) {
      "use strict";
      function i() {}
      n.d(e, "a", function() {
        return i;
      }),
        Object.assign(i.prototype, {
          addEventListener: function(t, e) {
            void 0 === this._listeners && (this._listeners = {});
            var n = this._listeners;
            void 0 === n[t] && (n[t] = []),
              -1 === n[t].indexOf(e) && n[t].push(e);
          },
          hasEventListener: function(t, e) {
            if (void 0 === this._listeners) return !1;
            var n = this._listeners;
            return void 0 !== n[t] && -1 !== n[t].indexOf(e);
          },
          removeEventListener: function(t, e) {
            if (void 0 !== this._listeners) {
              var n = this._listeners[t];
              if (void 0 !== n) {
                var i = n.indexOf(e);
                -1 !== i && n.splice(i, 1);
              }
            }
          },
          dispatchEvent: function(t) {
            if (void 0 !== this._listeners) {
              var e = this._listeners[t.type];
              if (void 0 !== e) {
                t.target = this;
                for (var n = e.slice(0), i = 0, r = n.length; i < r; i++)
                  n[i].call(this, t);
              }
            }
          }
        });
    },
    function(t, e, n) {
      "use strict";
      n.d(e, "a", function() {
        return o;
      });
      var i,
        r = n(21),
        a = n(1);
      function o(t, e) {
        (this.center = void 0 !== t ? t : new a.a()),
          (this.radius = void 0 !== e ? e : 0);
      }
      Object.assign(o.prototype, {
        set: function(t, e) {
          return this.center.copy(t), (this.radius = e), this;
        },
        setFromPoints: ((i = new r.a()),
        function(t, e) {
          var n = this.center;
          void 0 !== e ? n.copy(e) : i.setFromPoints(t).getCenter(n);
          for (var r = 0, a = 0, o = t.length; a < o; a++)
            r = Math.max(r, n.distanceToSquared(t[a]));
          return (this.radius = Math.sqrt(r)), this;
        }),
        clone: function() {
          return new this.constructor().copy(this);
        },
        copy: function(t) {
          return this.center.copy(t.center), (this.radius = t.radius), this;
        },
        empty: function() {
          return this.radius <= 0;
        },
        containsPoint: function(t) {
          return t.distanceToSquared(this.center) <= this.radius * this.radius;
        },
        distanceToPoint: function(t) {
          return t.distanceTo(this.center) - this.radius;
        },
        intersectsSphere: function(t) {
          var e = this.radius + t.radius;
          return t.center.distanceToSquared(this.center) <= e * e;
        },
        intersectsBox: function(t) {
          return t.intersectsSphere(this);
        },
        intersectsPlane: function(t) {
          return Math.abs(t.distanceToPoint(this.center)) <= this.radius;
        },
        clampPoint: function(t, e) {
          var n = this.center.distanceToSquared(t);
          return (
            void 0 === e &&
              (console.warn(
                "THREE.Sphere: .clampPoint() target is now required"
              ),
              (e = new a.a())),
            e.copy(t),
            n > this.radius * this.radius &&
              (e.sub(this.center).normalize(),
              e.multiplyScalar(this.radius).add(this.center)),
            e
          );
        },
        getBoundingBox: function(t) {
          return (
            void 0 === t &&
              (console.warn(
                "THREE.Sphere: .getBoundingBox() target is now required"
              ),
              (t = new r.a())),
            t.set(this.center, this.center),
            t.expandByScalar(this.radius),
            t
          );
        },
        applyMatrix4: function(t) {
          return (
            this.center.applyMatrix4(t),
            (this.radius = this.radius * t.getMaxScaleOnAxis()),
            this
          );
        },
        translate: function(t) {
          return this.center.add(t), this;
        },
        equals: function(t) {
          return t.center.equals(this.center) && t.radius === this.radius;
        }
      });
    },
    function(t, e, n) {
      "use strict";
      var i = n(1),
        r = n(21),
        a = n(18),
        o = n(7),
        s = n(19),
        l = n(6);
      function c() {
        (this.vertices = []),
          (this.normals = []),
          (this.colors = []),
          (this.uvs = []),
          (this.uvs2 = []),
          (this.groups = []),
          (this.morphTargets = {}),
          (this.skinWeights = []),
          (this.skinIndices = []),
          (this.boundingBox = null),
          (this.boundingSphere = null),
          (this.verticesNeedUpdate = !1),
          (this.normalsNeedUpdate = !1),
          (this.colorsNeedUpdate = !1),
          (this.uvsNeedUpdate = !1),
          (this.groupsNeedUpdate = !1);
      }
      Object.assign(c.prototype, {
        computeGroups: function(t) {
          for (
            var e, n = [], i = void 0, r = t.faces, a = 0;
            a < r.length;
            a++
          ) {
            var o = r[a];
            o.materialIndex !== i &&
              ((i = o.materialIndex),
              void 0 !== e && ((e.count = 3 * a - e.start), n.push(e)),
              (e = { start: 3 * a, materialIndex: i }));
          }
          void 0 !== e && ((e.count = 3 * a - e.start), n.push(e)),
            (this.groups = n);
        },
        fromGeometry: function(t) {
          var e,
            n = t.faces,
            i = t.vertices,
            r = t.faceVertexUvs,
            a = r[0] && r[0].length > 0,
            o = r[1] && r[1].length > 0,
            s = t.morphTargets,
            c = s.length;
          if (c > 0) {
            e = [];
            for (var h = 0; h < c; h++) e[h] = { name: s[h].name, data: [] };
            this.morphTargets.position = e;
          }
          var u,
            d = t.morphNormals,
            f = d.length;
          if (f > 0) {
            u = [];
            for (h = 0; h < f; h++) u[h] = { name: d[h].name, data: [] };
            this.morphTargets.normal = u;
          }
          var p = t.skinIndices,
            m = t.skinWeights,
            g = p.length === i.length,
            v = m.length === i.length;
          i.length > 0 &&
            0 === n.length &&
            console.error(
              "THREE.DirectGeometry: Faceless geometries are not supported."
            );
          for (h = 0; h < n.length; h++) {
            var _ = n[h];
            this.vertices.push(i[_.a], i[_.b], i[_.c]);
            var y = _.vertexNormals;
            if (3 === y.length) this.normals.push(y[0], y[1], y[2]);
            else {
              var x = _.normal;
              this.normals.push(x, x, x);
            }
            var b,
              w = _.vertexColors;
            if (3 === w.length) this.colors.push(w[0], w[1], w[2]);
            else {
              var T = _.color;
              this.colors.push(T, T, T);
            }
            if (!0 === a)
              void 0 !== (b = r[0][h])
                ? this.uvs.push(b[0], b[1], b[2])
                : (console.warn(
                    "THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",
                    h
                  ),
                  this.uvs.push(new l.a(), new l.a(), new l.a()));
            if (!0 === o)
              void 0 !== (b = r[1][h])
                ? this.uvs2.push(b[0], b[1], b[2])
                : (console.warn(
                    "THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",
                    h
                  ),
                  this.uvs2.push(new l.a(), new l.a(), new l.a()));
            for (var M = 0; M < c; M++) {
              var E = s[M].vertices;
              e[M].data.push(E[_.a], E[_.b], E[_.c]);
            }
            for (M = 0; M < f; M++) {
              var S = d[M].vertexNormals[h];
              u[M].data.push(S.a, S.b, S.c);
            }
            g && this.skinIndices.push(p[_.a], p[_.b], p[_.c]),
              v && this.skinWeights.push(m[_.a], m[_.b], m[_.c]);
          }
          return (
            this.computeGroups(t),
            (this.verticesNeedUpdate = t.verticesNeedUpdate),
            (this.normalsNeedUpdate = t.normalsNeedUpdate),
            (this.colorsNeedUpdate = t.colorsNeedUpdate),
            (this.uvsNeedUpdate = t.uvsNeedUpdate),
            (this.groupsNeedUpdate = t.groupsNeedUpdate),
            this
          );
        }
      });
      var h = n(10),
        u = n(4),
        d = n(12),
        f = n(5),
        p = n(28);
      n.d(e, "a", function() {
        return b;
      });
      var m,
        g,
        v,
        _,
        y,
        x = 1;
      function b() {
        Object.defineProperty(this, "id", { value: (x += 2) }),
          (this.uuid = f.a.generateUUID()),
          (this.name = ""),
          (this.type = "BufferGeometry"),
          (this.index = null),
          (this.attributes = {}),
          (this.morphAttributes = {}),
          (this.groups = []),
          (this.boundingBox = null),
          (this.boundingSphere = null),
          (this.drawRange = { start: 0, count: 1 / 0 }),
          (this.userData = {});
      }
      b.prototype = Object.assign(Object.create(a.a.prototype), {
        constructor: b,
        isBufferGeometry: !0,
        getIndex: function() {
          return this.index;
        },
        setIndex: function(t) {
          Array.isArray(t)
            ? (this.index = new (Object(p.a)(t) > 65535 ? o.d : o.c)(t, 1))
            : (this.index = t);
        },
        addAttribute: function(t, e) {
          return (e && e.isBufferAttribute) ||
            (e && e.isInterleavedBufferAttribute)
            ? "index" === t
              ? (console.warn(
                  "THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."
                ),
                this.setIndex(e),
                this)
              : ((this.attributes[t] = e), this)
            : (console.warn(
                "THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."
              ),
              this.addAttribute(t, new o.a(arguments[1], arguments[2])));
        },
        getAttribute: function(t) {
          return this.attributes[t];
        },
        removeAttribute: function(t) {
          return delete this.attributes[t], this;
        },
        addGroup: function(t, e, n) {
          this.groups.push({
            start: t,
            count: e,
            materialIndex: void 0 !== n ? n : 0
          });
        },
        clearGroups: function() {
          this.groups = [];
        },
        setDrawRange: function(t, e) {
          (this.drawRange.start = t), (this.drawRange.count = e);
        },
        applyMatrix: function(t) {
          var e = this.attributes.position;
          void 0 !== e && (t.applyToBufferAttribute(e), (e.needsUpdate = !0));
          var n = this.attributes.normal;
          void 0 !== n &&
            (new d.a().getNormalMatrix(t).applyToBufferAttribute(n),
            (n.needsUpdate = !0));
          return (
            null !== this.boundingBox && this.computeBoundingBox(),
            null !== this.boundingSphere && this.computeBoundingSphere(),
            this
          );
        },
        rotateX: ((y = new u.a()),
        function(t) {
          return y.makeRotationX(t), this.applyMatrix(y), this;
        }),
        rotateY: (function() {
          var t = new u.a();
          return function(e) {
            return t.makeRotationY(e), this.applyMatrix(t), this;
          };
        })(),
        rotateZ: (function() {
          var t = new u.a();
          return function(e) {
            return t.makeRotationZ(e), this.applyMatrix(t), this;
          };
        })(),
        translate: (function() {
          var t = new u.a();
          return function(e, n, i) {
            return t.makeTranslation(e, n, i), this.applyMatrix(t), this;
          };
        })(),
        scale: (function() {
          var t = new u.a();
          return function(e, n, i) {
            return t.makeScale(e, n, i), this.applyMatrix(t), this;
          };
        })(),
        lookAt: ((_ = new h.a()),
        function(t) {
          _.lookAt(t), _.updateMatrix(), this.applyMatrix(_.matrix);
        }),
        center: ((v = new i.a()),
        function() {
          return (
            this.computeBoundingBox(),
            this.boundingBox.getCenter(v).negate(),
            this.translate(v.x, v.y, v.z),
            this
          );
        }),
        setFromObject: function(t) {
          var e = t.geometry;
          if (t.isPoints || t.isLine) {
            var n = new o.b(3 * e.vertices.length, 3),
              i = new o.b(3 * e.colors.length, 3);
            if (
              (this.addAttribute("position", n.copyVector3sArray(e.vertices)),
              this.addAttribute("color", i.copyColorsArray(e.colors)),
              e.lineDistances && e.lineDistances.length === e.vertices.length)
            ) {
              var r = new o.b(e.lineDistances.length, 1);
              this.addAttribute("lineDistance", r.copyArray(e.lineDistances));
            }
            null !== e.boundingSphere &&
              (this.boundingSphere = e.boundingSphere.clone()),
              null !== e.boundingBox &&
                (this.boundingBox = e.boundingBox.clone());
          } else t.isMesh && e && e.isGeometry && this.fromGeometry(e);
          return this;
        },
        setFromPoints: function(t) {
          for (var e = [], n = 0, i = t.length; n < i; n++) {
            var r = t[n];
            e.push(r.x, r.y, r.z || 0);
          }
          return this.addAttribute("position", new o.b(e, 3)), this;
        },
        updateFromObject: function(t) {
          var e,
            n = t.geometry;
          if (t.isMesh) {
            var i = n.__directGeometry;
            if (
              (!0 === n.elementsNeedUpdate &&
                ((i = void 0), (n.elementsNeedUpdate = !1)),
              void 0 === i)
            )
              return this.fromGeometry(n);
            (i.verticesNeedUpdate = n.verticesNeedUpdate),
              (i.normalsNeedUpdate = n.normalsNeedUpdate),
              (i.colorsNeedUpdate = n.colorsNeedUpdate),
              (i.uvsNeedUpdate = n.uvsNeedUpdate),
              (i.groupsNeedUpdate = n.groupsNeedUpdate),
              (n.verticesNeedUpdate = !1),
              (n.normalsNeedUpdate = !1),
              (n.colorsNeedUpdate = !1),
              (n.uvsNeedUpdate = !1),
              (n.groupsNeedUpdate = !1),
              (n = i);
          }
          return (
            !0 === n.verticesNeedUpdate &&
              (void 0 !== (e = this.attributes.position) &&
                (e.copyVector3sArray(n.vertices), (e.needsUpdate = !0)),
              (n.verticesNeedUpdate = !1)),
            !0 === n.normalsNeedUpdate &&
              (void 0 !== (e = this.attributes.normal) &&
                (e.copyVector3sArray(n.normals), (e.needsUpdate = !0)),
              (n.normalsNeedUpdate = !1)),
            !0 === n.colorsNeedUpdate &&
              (void 0 !== (e = this.attributes.color) &&
                (e.copyColorsArray(n.colors), (e.needsUpdate = !0)),
              (n.colorsNeedUpdate = !1)),
            n.uvsNeedUpdate &&
              (void 0 !== (e = this.attributes.uv) &&
                (e.copyVector2sArray(n.uvs), (e.needsUpdate = !0)),
              (n.uvsNeedUpdate = !1)),
            n.lineDistancesNeedUpdate &&
              (void 0 !== (e = this.attributes.lineDistance) &&
                (e.copyArray(n.lineDistances), (e.needsUpdate = !0)),
              (n.lineDistancesNeedUpdate = !1)),
            n.groupsNeedUpdate &&
              (n.computeGroups(t.geometry),
              (this.groups = n.groups),
              (n.groupsNeedUpdate = !1)),
            this
          );
        },
        fromGeometry: function(t) {
          return (
            (t.__directGeometry = new c().fromGeometry(t)),
            this.fromDirectGeometry(t.__directGeometry)
          );
        },
        fromDirectGeometry: function(t) {
          var e = new Float32Array(3 * t.vertices.length);
          if (
            (this.addAttribute(
              "position",
              new o.a(e, 3).copyVector3sArray(t.vertices)
            ),
            t.normals.length > 0)
          ) {
            var n = new Float32Array(3 * t.normals.length);
            this.addAttribute(
              "normal",
              new o.a(n, 3).copyVector3sArray(t.normals)
            );
          }
          if (t.colors.length > 0) {
            var i = new Float32Array(3 * t.colors.length);
            this.addAttribute("color", new o.a(i, 3).copyColorsArray(t.colors));
          }
          if (t.uvs.length > 0) {
            var r = new Float32Array(2 * t.uvs.length);
            this.addAttribute("uv", new o.a(r, 2).copyVector2sArray(t.uvs));
          }
          if (t.uvs2.length > 0) {
            var a = new Float32Array(2 * t.uvs2.length);
            this.addAttribute("uv2", new o.a(a, 2).copyVector2sArray(t.uvs2));
          }
          for (var s in ((this.groups = t.groups), t.morphTargets)) {
            for (
              var l = [], c = t.morphTargets[s], h = 0, u = c.length;
              h < u;
              h++
            ) {
              var d = c[h],
                f = new o.b(3 * d.data.length, 3);
              (f.name = d.name), l.push(f.copyVector3sArray(d.data));
            }
            this.morphAttributes[s] = l;
          }
          if (t.skinIndices.length > 0) {
            var p = new o.b(4 * t.skinIndices.length, 4);
            this.addAttribute("skinIndex", p.copyVector4sArray(t.skinIndices));
          }
          if (t.skinWeights.length > 0) {
            var m = new o.b(4 * t.skinWeights.length, 4);
            this.addAttribute("skinWeight", m.copyVector4sArray(t.skinWeights));
          }
          return (
            null !== t.boundingSphere &&
              (this.boundingSphere = t.boundingSphere.clone()),
            null !== t.boundingBox &&
              (this.boundingBox = t.boundingBox.clone()),
            this
          );
        },
        computeBoundingBox: function() {
          null === this.boundingBox && (this.boundingBox = new r.a());
          var t = this.attributes.position;
          void 0 !== t
            ? this.boundingBox.setFromBufferAttribute(t)
            : this.boundingBox.makeEmpty(),
            (isNaN(this.boundingBox.min.x) ||
              isNaN(this.boundingBox.min.y) ||
              isNaN(this.boundingBox.min.z)) &&
              console.error(
                'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',
                this
              );
        },
        computeBoundingSphere: ((m = new r.a()),
        (g = new i.a()),
        function() {
          null === this.boundingSphere && (this.boundingSphere = new s.a());
          var t = this.attributes.position;
          if (t) {
            var e = this.boundingSphere.center;
            m.setFromBufferAttribute(t), m.getCenter(e);
            for (var n = 0, i = 0, r = t.count; i < r; i++)
              (g.x = t.getX(i)),
                (g.y = t.getY(i)),
                (g.z = t.getZ(i)),
                (n = Math.max(n, e.distanceToSquared(g)));
            (this.boundingSphere.radius = Math.sqrt(n)),
              isNaN(this.boundingSphere.radius) &&
                console.error(
                  'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',
                  this
                );
          }
        }),
        computeFaceNormals: function() {},
        computeVertexNormals: function() {
          var t = this.index,
            e = this.attributes;
          if (e.position) {
            var n = e.position.array;
            if (void 0 === e.normal)
              this.addAttribute(
                "normal",
                new o.a(new Float32Array(n.length), 3)
              );
            else
              for (var r = e.normal.array, a = 0, s = r.length; a < s; a++)
                r[a] = 0;
            var l,
              c,
              h,
              u = e.normal.array,
              d = new i.a(),
              f = new i.a(),
              p = new i.a(),
              m = new i.a(),
              g = new i.a();
            if (t) {
              var v = t.array;
              for (a = 0, s = t.count; a < s; a += 3)
                (l = 3 * v[a + 0]),
                  (c = 3 * v[a + 1]),
                  (h = 3 * v[a + 2]),
                  d.fromArray(n, l),
                  f.fromArray(n, c),
                  p.fromArray(n, h),
                  m.subVectors(p, f),
                  g.subVectors(d, f),
                  m.cross(g),
                  (u[l] += m.x),
                  (u[l + 1] += m.y),
                  (u[l + 2] += m.z),
                  (u[c] += m.x),
                  (u[c + 1] += m.y),
                  (u[c + 2] += m.z),
                  (u[h] += m.x),
                  (u[h + 1] += m.y),
                  (u[h + 2] += m.z);
            } else
              for (a = 0, s = n.length; a < s; a += 9)
                d.fromArray(n, a),
                  f.fromArray(n, a + 3),
                  p.fromArray(n, a + 6),
                  m.subVectors(p, f),
                  g.subVectors(d, f),
                  m.cross(g),
                  (u[a] = m.x),
                  (u[a + 1] = m.y),
                  (u[a + 2] = m.z),
                  (u[a + 3] = m.x),
                  (u[a + 4] = m.y),
                  (u[a + 5] = m.z),
                  (u[a + 6] = m.x),
                  (u[a + 7] = m.y),
                  (u[a + 8] = m.z);
            this.normalizeNormals(), (e.normal.needsUpdate = !0);
          }
        },
        merge: function(t, e) {
          if (t && t.isBufferGeometry) {
            void 0 === e &&
              ((e = 0),
              console.warn(
                "THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."
              ));
            var n = this.attributes;
            for (var i in n)
              if (void 0 !== t.attributes[i])
                for (
                  var r = n[i].array,
                    a = t.attributes[i],
                    o = a.array,
                    s = 0,
                    l = a.itemSize * e;
                  s < o.length;
                  s++, l++
                )
                  r[l] = o[s];
            return this;
          }
          console.error(
            "THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",
            t
          );
        },
        normalizeNormals: (function() {
          var t = new i.a();
          return function() {
            for (var e = this.attributes.normal, n = 0, i = e.count; n < i; n++)
              (t.x = e.getX(n)),
                (t.y = e.getY(n)),
                (t.z = e.getZ(n)),
                t.normalize(),
                e.setXYZ(n, t.x, t.y, t.z);
          };
        })(),
        toNonIndexed: function() {
          if (null === this.index)
            return (
              console.warn(
                "THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."
              ),
              this
            );
          var t = new b(),
            e = this.index.array,
            n = this.attributes;
          for (var i in n) {
            for (
              var r = n[i],
                a = r.array,
                s = r.itemSize,
                l = new a.constructor(e.length * s),
                c = 0,
                h = 0,
                u = 0,
                d = e.length;
              u < d;
              u++
            ) {
              c = e[u] * s;
              for (var f = 0; f < s; f++) l[h++] = a[c++];
            }
            t.addAttribute(i, new o.a(l, s));
          }
          var p = this.groups;
          for (u = 0, d = p.length; u < d; u++) {
            var m = p[u];
            t.addGroup(m.start, m.count, m.materialIndex);
          }
          return t;
        },
        toJSON: function() {
          var t = {
            metadata: {
              version: 4.5,
              type: "BufferGeometry",
              generator: "BufferGeometry.toJSON"
            }
          };
          if (
            ((t.uuid = this.uuid),
            (t.type = this.type),
            "" !== this.name && (t.name = this.name),
            Object.keys(this.userData).length > 0 &&
              (t.userData = this.userData),
            void 0 !== this.parameters)
          ) {
            var e = this.parameters;
            for (var n in e) void 0 !== e[n] && (t[n] = e[n]);
            return t;
          }
          t.data = { attributes: {} };
          var i = this.index;
          if (null !== i) {
            var r = Array.prototype.slice.call(i.array);
            t.data.index = { type: i.array.constructor.name, array: r };
          }
          var a = this.attributes;
          for (var n in a) {
            var o = a[n];
            r = Array.prototype.slice.call(o.array);
            t.data.attributes[n] = {
              itemSize: o.itemSize,
              type: o.array.constructor.name,
              array: r,
              normalized: o.normalized
            };
          }
          var s = this.groups;
          s.length > 0 && (t.data.groups = JSON.parse(JSON.stringify(s)));
          var l = this.boundingSphere;
          return (
            null !== l &&
              (t.data.boundingSphere = {
                center: l.center.toArray(),
                radius: l.radius
              }),
            t
          );
        },
        clone: function() {
          return new b().copy(this);
        },
        copy: function(t) {
          var e, n, i;
          (this.index = null),
            (this.attributes = {}),
            (this.morphAttributes = {}),
            (this.groups = []),
            (this.boundingBox = null),
            (this.boundingSphere = null),
            (this.name = t.name);
          var r = t.index;
          null !== r && this.setIndex(r.clone());
          var a = t.attributes;
          for (e in a) {
            var o = a[e];
            this.addAttribute(e, o.clone());
          }
          var s = t.morphAttributes;
          for (e in s) {
            var l = [],
              c = s[e];
            for (n = 0, i = c.length; n < i; n++) l.push(c[n].clone());
            this.morphAttributes[e] = l;
          }
          var h = t.groups;
          for (n = 0, i = h.length; n < i; n++) {
            var u = h[n];
            this.addGroup(u.start, u.count, u.materialIndex);
          }
          var d = t.boundingBox;
          null !== d && (this.boundingBox = d.clone());
          var f = t.boundingSphere;
          return (
            null !== f && (this.boundingSphere = f.clone()),
            (this.drawRange.start = t.drawRange.start),
            (this.drawRange.count = t.drawRange.count),
            (this.userData = t.userData),
            this
          );
        },
        dispose: function() {
          this.dispatchEvent({ type: "dispose" });
        }
      });
    },
    function(t, e, n) {
      "use strict";
      n.d(e, "a", function() {
        return l;
      });
      var i,
        r,
        a,
        o = n(1),
        s = n(19);
      function l(t, e) {
        (this.min = void 0 !== t ? t : new o.a(1 / 0, 1 / 0, 1 / 0)),
          (this.max = void 0 !== e ? e : new o.a(-1 / 0, -1 / 0, -1 / 0));
      }
      Object.assign(l.prototype, {
        isBox3: !0,
        set: function(t, e) {
          return this.min.copy(t), this.max.copy(e), this;
        },
        setFromArray: function(t) {
          for (
            var e = 1 / 0,
              n = 1 / 0,
              i = 1 / 0,
              r = -1 / 0,
              a = -1 / 0,
              o = -1 / 0,
              s = 0,
              l = t.length;
            s < l;
            s += 3
          ) {
            var c = t[s],
              h = t[s + 1],
              u = t[s + 2];
            c < e && (e = c),
              h < n && (n = h),
              u < i && (i = u),
              c > r && (r = c),
              h > a && (a = h),
              u > o && (o = u);
          }
          return this.min.set(e, n, i), this.max.set(r, a, o), this;
        },
        setFromBufferAttribute: function(t) {
          for (
            var e = 1 / 0,
              n = 1 / 0,
              i = 1 / 0,
              r = -1 / 0,
              a = -1 / 0,
              o = -1 / 0,
              s = 0,
              l = t.count;
            s < l;
            s++
          ) {
            var c = t.getX(s),
              h = t.getY(s),
              u = t.getZ(s);
            c < e && (e = c),
              h < n && (n = h),
              u < i && (i = u),
              c > r && (r = c),
              h > a && (a = h),
              u > o && (o = u);
          }
          return this.min.set(e, n, i), this.max.set(r, a, o), this;
        },
        setFromPoints: function(t) {
          this.makeEmpty();
          for (var e = 0, n = t.length; e < n; e++) this.expandByPoint(t[e]);
          return this;
        },
        setFromCenterAndSize: ((a = new o.a()),
        function(t, e) {
          var n = a.copy(e).multiplyScalar(0.5);
          return this.min.copy(t).sub(n), this.max.copy(t).add(n), this;
        }),
        setFromObject: function(t) {
          return this.makeEmpty(), this.expandByObject(t);
        },
        clone: function() {
          return new this.constructor().copy(this);
        },
        copy: function(t) {
          return this.min.copy(t.min), this.max.copy(t.max), this;
        },
        makeEmpty: function() {
          return (
            (this.min.x = this.min.y = this.min.z = 1 / 0),
            (this.max.x = this.max.y = this.max.z = -1 / 0),
            this
          );
        },
        isEmpty: function() {
          return (
            this.max.x < this.min.x ||
            this.max.y < this.min.y ||
            this.max.z < this.min.z
          );
        },
        getCenter: function(t) {
          return (
            void 0 === t &&
              (console.warn("THREE.Box3: .getCenter() target is now required"),
              (t = new o.a())),
            this.isEmpty()
              ? t.set(0, 0, 0)
              : t.addVectors(this.min, this.max).multiplyScalar(0.5)
          );
        },
        getSize: function(t) {
          return (
            void 0 === t &&
              (console.warn("THREE.Box3: .getSize() target is now required"),
              (t = new o.a())),
            this.isEmpty() ? t.set(0, 0, 0) : t.subVectors(this.max, this.min)
          );
        },
        expandByPoint: function(t) {
          return this.min.min(t), this.max.max(t), this;
        },
        expandByVector: function(t) {
          return this.min.sub(t), this.max.add(t), this;
        },
        expandByScalar: function(t) {
          return this.min.addScalar(-t), this.max.addScalar(t), this;
        },
        expandByObject: (function() {
          var t,
            e,
            n,
            i = new o.a();
          function r(r) {
            var a = r.geometry;
            if (void 0 !== a)
              if (a.isGeometry) {
                var o = a.vertices;
                for (e = 0, n = o.length; e < n; e++)
                  i.copy(o[e]),
                    i.applyMatrix4(r.matrixWorld),
                    t.expandByPoint(i);
              } else if (a.isBufferGeometry) {
                var s = a.attributes.position;
                if (void 0 !== s)
                  for (e = 0, n = s.count; e < n; e++)
                    i.fromBufferAttribute(s, e).applyMatrix4(r.matrixWorld),
                      t.expandByPoint(i);
              }
          }
          return function(e) {
            return (t = this), e.updateMatrixWorld(!0), e.traverse(r), this;
          };
        })(),
        containsPoint: function(t) {
          return !(
            t.x < this.min.x ||
            t.x > this.max.x ||
            t.y < this.min.y ||
            t.y > this.max.y ||
            t.z < this.min.z ||
            t.z > this.max.z
          );
        },
        containsBox: function(t) {
          return (
            this.min.x <= t.min.x &&
            t.max.x <= this.max.x &&
            this.min.y <= t.min.y &&
            t.max.y <= this.max.y &&
            this.min.z <= t.min.z &&
            t.max.z <= this.max.z
          );
        },
        getParameter: function(t, e) {
          return (
            void 0 === e &&
              (console.warn(
                "THREE.Box3: .getParameter() target is now required"
              ),
              (e = new o.a())),
            e.set(
              (t.x - this.min.x) / (this.max.x - this.min.x),
              (t.y - this.min.y) / (this.max.y - this.min.y),
              (t.z - this.min.z) / (this.max.z - this.min.z)
            )
          );
        },
        intersectsBox: function(t) {
          return !(
            t.max.x < this.min.x ||
            t.min.x > this.max.x ||
            t.max.y < this.min.y ||
            t.min.y > this.max.y ||
            t.max.z < this.min.z ||
            t.min.z > this.max.z
          );
        },
        intersectsSphere: ((r = new o.a()),
        function(t) {
          return (
            this.clampPoint(t.center, r),
            r.distanceToSquared(t.center) <= t.radius * t.radius
          );
        }),
        intersectsPlane: function(t) {
          var e, n;
          return (
            t.normal.x > 0
              ? ((e = t.normal.x * this.min.x), (n = t.normal.x * this.max.x))
              : ((e = t.normal.x * this.max.x), (n = t.normal.x * this.min.x)),
            t.normal.y > 0
              ? ((e += t.normal.y * this.min.y), (n += t.normal.y * this.max.y))
              : ((e += t.normal.y * this.max.y),
                (n += t.normal.y * this.min.y)),
            t.normal.z > 0
              ? ((e += t.normal.z * this.min.z), (n += t.normal.z * this.max.z))
              : ((e += t.normal.z * this.max.z),
                (n += t.normal.z * this.min.z)),
            e <= -t.constant && n >= -t.constant
          );
        },
        intersectsTriangle: (function() {
          var t = new o.a(),
            e = new o.a(),
            n = new o.a(),
            i = new o.a(),
            r = new o.a(),
            a = new o.a(),
            s = new o.a(),
            l = new o.a(),
            c = new o.a(),
            h = new o.a();
          function u(i) {
            var r, a;
            for (r = 0, a = i.length - 3; r <= a; r += 3) {
              s.fromArray(i, r);
              var o =
                  c.x * Math.abs(s.x) +
                  c.y * Math.abs(s.y) +
                  c.z * Math.abs(s.z),
                l = t.dot(s),
                h = e.dot(s),
                u = n.dot(s);
              if (Math.max(-Math.max(l, h, u), Math.min(l, h, u)) > o)
                return !1;
            }
            return !0;
          }
          return function(o) {
            if (this.isEmpty()) return !1;
            this.getCenter(l),
              c.subVectors(this.max, l),
              t.subVectors(o.a, l),
              e.subVectors(o.b, l),
              n.subVectors(o.c, l),
              i.subVectors(e, t),
              r.subVectors(n, e),
              a.subVectors(t, n);
            var s = [
              0,
              -i.z,
              i.y,
              0,
              -r.z,
              r.y,
              0,
              -a.z,
              a.y,
              i.z,
              0,
              -i.x,
              r.z,
              0,
              -r.x,
              a.z,
              0,
              -a.x,
              -i.y,
              i.x,
              0,
              -r.y,
              r.x,
              0,
              -a.y,
              a.x,
              0
            ];
            return (
              !!u(s) &&
              (!!u((s = [1, 0, 0, 0, 1, 0, 0, 0, 1])) &&
                (h.crossVectors(i, r), u((s = [h.x, h.y, h.z]))))
            );
          };
        })(),
        clampPoint: function(t, e) {
          return (
            void 0 === e &&
              (console.warn("THREE.Box3: .clampPoint() target is now required"),
              (e = new o.a())),
            e.copy(t).clamp(this.min, this.max)
          );
        },
        distanceToPoint: (function() {
          var t = new o.a();
          return function(e) {
            return t
              .copy(e)
              .clamp(this.min, this.max)
              .sub(e)
              .length();
          };
        })(),
        getBoundingSphere: (function() {
          var t = new o.a();
          return function(e) {
            return (
              void 0 === e &&
                (console.warn(
                  "THREE.Box3: .getBoundingSphere() target is now required"
                ),
                (e = new s.a())),
              this.getCenter(e.center),
              (e.radius = 0.5 * this.getSize(t).length()),
              e
            );
          };
        })(),
        intersect: function(t) {
          return (
            this.min.max(t.min),
            this.max.min(t.max),
            this.isEmpty() && this.makeEmpty(),
            this
          );
        },
        union: function(t) {
          return this.min.min(t.min), this.max.max(t.max), this;
        },
        applyMatrix4: ((i = [
          new o.a(),
          new o.a(),
          new o.a(),
          new o.a(),
          new o.a(),
          new o.a(),
          new o.a(),
          new o.a()
        ]),
        function(t) {
          return this.isEmpty()
            ? this
            : (i[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(t),
              i[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(t),
              i[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(t),
              i[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(t),
              i[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(t),
              i[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(t),
              i[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(t),
              i[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(t),
              this.setFromPoints(i),
              this);
        }),
        translate: function(t) {
          return this.min.add(t), this.max.add(t), this;
        },
        equals: function(t) {
          return t.min.equals(this.min) && t.max.equals(this.max);
        }
      });
    },
    function(t, e, n) {
      "use strict";
      n.d(e, "a", function() {
        return o;
      });
      var i = n(4),
        r = n(10),
        a = n(1);
      function o() {
        r.a.call(this),
          (this.type = "Camera"),
          (this.matrixWorldInverse = new i.a()),
          (this.projectionMatrix = new i.a()),
          (this.projectionMatrixInverse = new i.a());
      }
      o.prototype = Object.assign(Object.create(r.a.prototype), {
        constructor: o,
        isCamera: !0,
        copy: function(t, e) {
          return (
            r.a.prototype.copy.call(this, t, e),
            this.matrixWorldInverse.copy(t.matrixWorldInverse),
            this.projectionMatrix.copy(t.projectionMatrix),
            this.projectionMatrixInverse.copy(t.projectionMatrixInverse),
            this
          );
        },
        getWorldDirection: function(t) {
          void 0 === t &&
            (console.warn(
              "THREE.Camera: .getWorldDirection() target is now required"
            ),
            (t = new a.a())),
            this.updateMatrixWorld(!0);
          var e = this.matrixWorld.elements;
          return t.set(-e[8], -e[9], -e[10]).normalize();
        },
        updateMatrixWorld: function(t) {
          r.a.prototype.updateMatrixWorld.call(this, t),
            this.matrixWorldInverse.getInverse(this.matrixWorld);
        },
        clone: function() {
          return new this.constructor().copy(this);
        }
      });
    },
    function(t, e) {
      var n = NaN,
        i = "[object Symbol]",
        r = /^\s+|\s+$/g,
        a = /^[-+]0x[0-9a-f]+$/i,
        o = /^0b[01]+$/i,
        s = /^0o[0-7]+$/i,
        l = parseInt,
        c = Object.prototype.toString;
      function h(t) {
        var e = typeof t;
        return !!t && ("object" == e || "function" == e);
      }
      function u(t) {
        if ("number" == typeof t) return t;
        if (
          (function(t) {
            return (
              "symbol" == typeof t ||
              ((function(t) {
                return !!t && "object" == typeof t;
              })(t) &&
                c.call(t) == i)
            );
          })(t)
        )
          return n;
        if (h(t)) {
          var e = "function" == typeof t.valueOf ? t.valueOf() : t;
          t = h(e) ? e + "" : e;
        }
        if ("string" != typeof t) return 0 === t ? t : +t;
        t = t.replace(r, "");
        var u = o.test(t);
        return u || s.test(t) ? l(t.slice(2), u ? 2 : 8) : a.test(t) ? n : +t;
      }
      t.exports = function(t, e, n) {
        return (
          void 0 === n && ((n = e), (e = void 0)),
          void 0 !== n && (n = (n = u(n)) == n ? n : 0),
          void 0 !== e && (e = (e = u(e)) == e ? e : 0),
          (function(t, e, n) {
            return (
              t == t &&
                (void 0 !== n && (t = t <= n ? t : n),
                void 0 !== e && (t = t >= e ? t : e)),
              t
            );
          })(u(t), e, n)
        );
      };
    },
    function(t, e, n) {
      "use strict";
      n.d(e, "a", function() {
        return _;
      });
      var i,
        r,
        a,
        o = n(18),
        s = n(25),
        l = n(12),
        c = n(19),
        h = n(21),
        u = n(1),
        d = n(4),
        f = n(6),
        p = n(8),
        m = n(10),
        g = n(5),
        v = 0;
      function _() {
        Object.defineProperty(this, "id", { value: (v += 2) }),
          (this.uuid = g.a.generateUUID()),
          (this.name = ""),
          (this.type = "Geometry"),
          (this.vertices = []),
          (this.colors = []),
          (this.faces = []),
          (this.faceVertexUvs = [[]]),
          (this.morphTargets = []),
          (this.morphNormals = []),
          (this.skinWeights = []),
          (this.skinIndices = []),
          (this.lineDistances = []),
          (this.boundingBox = null),
          (this.boundingSphere = null),
          (this.elementsNeedUpdate = !1),
          (this.verticesNeedUpdate = !1),
          (this.uvsNeedUpdate = !1),
          (this.normalsNeedUpdate = !1),
          (this.colorsNeedUpdate = !1),
          (this.lineDistancesNeedUpdate = !1),
          (this.groupsNeedUpdate = !1);
      }
      _.prototype = Object.assign(Object.create(o.a.prototype), {
        constructor: _,
        isGeometry: !0,
        applyMatrix: function(t) {
          for (
            var e = new l.a().getNormalMatrix(t),
              n = 0,
              i = this.vertices.length;
            n < i;
            n++
          ) {
            this.vertices[n].applyMatrix4(t);
          }
          for (n = 0, i = this.faces.length; n < i; n++) {
            var r = this.faces[n];
            r.normal.applyMatrix3(e).normalize();
            for (var a = 0, o = r.vertexNormals.length; a < o; a++)
              r.vertexNormals[a].applyMatrix3(e).normalize();
          }
          return (
            null !== this.boundingBox && this.computeBoundingBox(),
            null !== this.boundingSphere && this.computeBoundingSphere(),
            (this.verticesNeedUpdate = !0),
            (this.normalsNeedUpdate = !0),
            this
          );
        },
        rotateX: ((a = new d.a()),
        function(t) {
          return a.makeRotationX(t), this.applyMatrix(a), this;
        }),
        rotateY: (function() {
          var t = new d.a();
          return function(e) {
            return t.makeRotationY(e), this.applyMatrix(t), this;
          };
        })(),
        rotateZ: (function() {
          var t = new d.a();
          return function(e) {
            return t.makeRotationZ(e), this.applyMatrix(t), this;
          };
        })(),
        translate: (function() {
          var t = new d.a();
          return function(e, n, i) {
            return t.makeTranslation(e, n, i), this.applyMatrix(t), this;
          };
        })(),
        scale: (function() {
          var t = new d.a();
          return function(e, n, i) {
            return t.makeScale(e, n, i), this.applyMatrix(t), this;
          };
        })(),
        lookAt: ((r = new m.a()),
        function(t) {
          r.lookAt(t), r.updateMatrix(), this.applyMatrix(r.matrix);
        }),
        fromBufferGeometry: function(t) {
          var e = this,
            n = null !== t.index ? t.index.array : void 0,
            i = t.attributes,
            r = i.position.array,
            a = void 0 !== i.normal ? i.normal.array : void 0,
            o = void 0 !== i.color ? i.color.array : void 0,
            l = void 0 !== i.uv ? i.uv.array : void 0,
            c = void 0 !== i.uv2 ? i.uv2.array : void 0;
          void 0 !== c && (this.faceVertexUvs[1] = []);
          for (var h = 0, d = 0; h < r.length; h += 3, d += 2)
            e.vertices.push(new u.a().fromArray(r, h)),
              void 0 !== o && e.colors.push(new p.a().fromArray(o, h));
          function m(t, n, i, r) {
            var h =
                void 0 === o
                  ? []
                  : [
                      e.colors[t].clone(),
                      e.colors[n].clone(),
                      e.colors[i].clone()
                    ],
              d =
                void 0 === a
                  ? []
                  : [
                      new u.a().fromArray(a, 3 * t),
                      new u.a().fromArray(a, 3 * n),
                      new u.a().fromArray(a, 3 * i)
                    ],
              p = new s.a(t, n, i, d, h, r);
            e.faces.push(p),
              void 0 !== l &&
                e.faceVertexUvs[0].push([
                  new f.a().fromArray(l, 2 * t),
                  new f.a().fromArray(l, 2 * n),
                  new f.a().fromArray(l, 2 * i)
                ]),
              void 0 !== c &&
                e.faceVertexUvs[1].push([
                  new f.a().fromArray(c, 2 * t),
                  new f.a().fromArray(c, 2 * n),
                  new f.a().fromArray(c, 2 * i)
                ]);
          }
          var g = t.groups;
          if (g.length > 0)
            for (h = 0; h < g.length; h++)
              for (
                var v = g[h], _ = v.start, y = ((d = _), _ + v.count);
                d < y;
                d += 3
              )
                void 0 !== n
                  ? m(n[d], n[d + 1], n[d + 2], v.materialIndex)
                  : m(d, d + 1, d + 2, v.materialIndex);
          else if (void 0 !== n)
            for (h = 0; h < n.length; h += 3) m(n[h], n[h + 1], n[h + 2]);
          else for (h = 0; h < r.length / 3; h += 3) m(h, h + 1, h + 2);
          return (
            this.computeFaceNormals(),
            null !== t.boundingBox &&
              (this.boundingBox = t.boundingBox.clone()),
            null !== t.boundingSphere &&
              (this.boundingSphere = t.boundingSphere.clone()),
            this
          );
        },
        center: ((i = new u.a()),
        function() {
          return (
            this.computeBoundingBox(),
            this.boundingBox.getCenter(i).negate(),
            this.translate(i.x, i.y, i.z),
            this
          );
        }),
        normalize: function() {
          this.computeBoundingSphere();
          var t = this.boundingSphere.center,
            e = this.boundingSphere.radius,
            n = 0 === e ? 1 : 1 / e,
            i = new d.a();
          return (
            i.set(
              n,
              0,
              0,
              -n * t.x,
              0,
              n,
              0,
              -n * t.y,
              0,
              0,
              n,
              -n * t.z,
              0,
              0,
              0,
              1
            ),
            this.applyMatrix(i),
            this
          );
        },
        computeFaceNormals: function() {
          for (
            var t = new u.a(), e = new u.a(), n = 0, i = this.faces.length;
            n < i;
            n++
          ) {
            var r = this.faces[n],
              a = this.vertices[r.a],
              o = this.vertices[r.b],
              s = this.vertices[r.c];
            t.subVectors(s, o),
              e.subVectors(a, o),
              t.cross(e),
              t.normalize(),
              r.normal.copy(t);
          }
        },
        computeVertexNormals: function(t) {
          var e, n, i, r, a, o;
          for (
            void 0 === t && (t = !0),
              o = new Array(this.vertices.length),
              e = 0,
              n = this.vertices.length;
            e < n;
            e++
          )
            o[e] = new u.a();
          if (t) {
            var s,
              l,
              c,
              h = new u.a(),
              d = new u.a();
            for (i = 0, r = this.faces.length; i < r; i++)
              (a = this.faces[i]),
                (s = this.vertices[a.a]),
                (l = this.vertices[a.b]),
                (c = this.vertices[a.c]),
                h.subVectors(c, l),
                d.subVectors(s, l),
                h.cross(d),
                o[a.a].add(h),
                o[a.b].add(h),
                o[a.c].add(h);
          } else
            for (
              this.computeFaceNormals(), i = 0, r = this.faces.length;
              i < r;
              i++
            )
              o[(a = this.faces[i]).a].add(a.normal),
                o[a.b].add(a.normal),
                o[a.c].add(a.normal);
          for (e = 0, n = this.vertices.length; e < n; e++) o[e].normalize();
          for (i = 0, r = this.faces.length; i < r; i++) {
            var f = (a = this.faces[i]).vertexNormals;
            3 === f.length
              ? (f[0].copy(o[a.a]), f[1].copy(o[a.b]), f[2].copy(o[a.c]))
              : ((f[0] = o[a.a].clone()),
                (f[1] = o[a.b].clone()),
                (f[2] = o[a.c].clone()));
          }
          this.faces.length > 0 && (this.normalsNeedUpdate = !0);
        },
        computeFlatVertexNormals: function() {
          var t, e, n;
          for (
            this.computeFaceNormals(), t = 0, e = this.faces.length;
            t < e;
            t++
          ) {
            var i = (n = this.faces[t]).vertexNormals;
            3 === i.length
              ? (i[0].copy(n.normal), i[1].copy(n.normal), i[2].copy(n.normal))
              : ((i[0] = n.normal.clone()),
                (i[1] = n.normal.clone()),
                (i[2] = n.normal.clone()));
          }
          this.faces.length > 0 && (this.normalsNeedUpdate = !0);
        },
        computeMorphNormals: function() {
          var t, e, n, i, r;
          for (n = 0, i = this.faces.length; n < i; n++)
            for (
              (r = this.faces[n]).__originalFaceNormal
                ? r.__originalFaceNormal.copy(r.normal)
                : (r.__originalFaceNormal = r.normal.clone()),
                r.__originalVertexNormals || (r.__originalVertexNormals = []),
                t = 0,
                e = r.vertexNormals.length;
              t < e;
              t++
            )
              r.__originalVertexNormals[t]
                ? r.__originalVertexNormals[t].copy(r.vertexNormals[t])
                : (r.__originalVertexNormals[t] = r.vertexNormals[t].clone());
          var a = new _();
          for (
            a.faces = this.faces, t = 0, e = this.morphTargets.length;
            t < e;
            t++
          ) {
            if (!this.morphNormals[t]) {
              (this.morphNormals[t] = {}),
                (this.morphNormals[t].faceNormals = []),
                (this.morphNormals[t].vertexNormals = []);
              var o = this.morphNormals[t].faceNormals,
                s = this.morphNormals[t].vertexNormals;
              for (n = 0, i = this.faces.length; n < i; n++)
                (l = new u.a()),
                  (c = { a: new u.a(), b: new u.a(), c: new u.a() }),
                  o.push(l),
                  s.push(c);
            }
            var l,
              c,
              h = this.morphNormals[t];
            for (
              a.vertices = this.morphTargets[t].vertices,
                a.computeFaceNormals(),
                a.computeVertexNormals(),
                n = 0,
                i = this.faces.length;
              n < i;
              n++
            )
              (r = this.faces[n]),
                (l = h.faceNormals[n]),
                (c = h.vertexNormals[n]),
                l.copy(r.normal),
                c.a.copy(r.vertexNormals[0]),
                c.b.copy(r.vertexNormals[1]),
                c.c.copy(r.vertexNormals[2]);
          }
          for (n = 0, i = this.faces.length; n < i; n++)
            ((r = this.faces[n]).normal = r.__originalFaceNormal),
              (r.vertexNormals = r.__originalVertexNormals);
        },
        computeBoundingBox: function() {
          null === this.boundingBox && (this.boundingBox = new h.a()),
            this.boundingBox.setFromPoints(this.vertices);
        },
        computeBoundingSphere: function() {
          null === this.boundingSphere && (this.boundingSphere = new c.a()),
            this.boundingSphere.setFromPoints(this.vertices);
        },
        merge: function(t, e, n) {
          if (t && t.isGeometry) {
            var i,
              r = this.vertices.length,
              a = this.vertices,
              o = t.vertices,
              c = this.faces,
              h = t.faces,
              u = this.faceVertexUvs[0],
              d = t.faceVertexUvs[0],
              f = this.colors,
              p = t.colors;
            void 0 === n && (n = 0),
              void 0 !== e && (i = new l.a().getNormalMatrix(e));
            for (var m = 0, g = o.length; m < g; m++) {
              var v = o[m].clone();
              void 0 !== e && v.applyMatrix4(e), a.push(v);
            }
            for (m = 0, g = p.length; m < g; m++) f.push(p[m].clone());
            for (m = 0, g = h.length; m < g; m++) {
              var _,
                y,
                x,
                b = h[m],
                w = b.vertexNormals,
                T = b.vertexColors;
              (_ = new s.a(b.a + r, b.b + r, b.c + r)).normal.copy(b.normal),
                void 0 !== i && _.normal.applyMatrix3(i).normalize();
              for (var M = 0, E = w.length; M < E; M++)
                (y = w[M].clone()),
                  void 0 !== i && y.applyMatrix3(i).normalize(),
                  _.vertexNormals.push(y);
              _.color.copy(b.color);
              for (M = 0, E = T.length; M < E; M++)
                (x = T[M]), _.vertexColors.push(x.clone());
              (_.materialIndex = b.materialIndex + n), c.push(_);
            }
            for (m = 0, g = d.length; m < g; m++) {
              var S = d[m],
                L = [];
              if (void 0 !== S) {
                for (M = 0, E = S.length; M < E; M++) L.push(S[M].clone());
                u.push(L);
              }
            }
          } else
            console.error(
              "THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",
              t
            );
        },
        mergeMesh: function(t) {
          t && t.isMesh
            ? (t.matrixAutoUpdate && t.updateMatrix(),
              this.merge(t.geometry, t.matrix))
            : console.error(
                "THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",
                t
              );
        },
        mergeVertices: function() {
          var t,
            e,
            n,
            i,
            r,
            a,
            o,
            s,
            l = {},
            c = [],
            h = [],
            u = Math.pow(10, 4);
          for (n = 0, i = this.vertices.length; n < i; n++)
            (t = this.vertices[n]),
              void 0 ===
              l[
                (e =
                  Math.round(t.x * u) +
                  "_" +
                  Math.round(t.y * u) +
                  "_" +
                  Math.round(t.z * u))
              ]
                ? ((l[e] = n), c.push(this.vertices[n]), (h[n] = c.length - 1))
                : (h[n] = h[l[e]]);
          var d = [];
          for (n = 0, i = this.faces.length; n < i; n++) {
            ((r = this.faces[n]).a = h[r.a]),
              (r.b = h[r.b]),
              (r.c = h[r.c]),
              (a = [r.a, r.b, r.c]);
            for (var f = 0; f < 3; f++)
              if (a[f] === a[(f + 1) % 3]) {
                d.push(n);
                break;
              }
          }
          for (n = d.length - 1; n >= 0; n--) {
            var p = d[n];
            for (
              this.faces.splice(p, 1), o = 0, s = this.faceVertexUvs.length;
              o < s;
              o++
            )
              this.faceVertexUvs[o].splice(p, 1);
          }
          var m = this.vertices.length - c.length;
          return (this.vertices = c), m;
        },
        setFromPoints: function(t) {
          this.vertices = [];
          for (var e = 0, n = t.length; e < n; e++) {
            var i = t[e];
            this.vertices.push(new u.a(i.x, i.y, i.z || 0));
          }
          return this;
        },
        sortFacesByMaterialIndex: function() {
          for (var t = this.faces, e = t.length, n = 0; n < e; n++)
            t[n]._id = n;
          t.sort(function(t, e) {
            return t.materialIndex - e.materialIndex;
          });
          var i,
            r,
            a = this.faceVertexUvs[0],
            o = this.faceVertexUvs[1];
          a && a.length === e && (i = []), o && o.length === e && (r = []);
          for (n = 0; n < e; n++) {
            var s = t[n]._id;
            i && i.push(a[s]), r && r.push(o[s]);
          }
          i && (this.faceVertexUvs[0] = i), r && (this.faceVertexUvs[1] = r);
        },
        toJSON: function() {
          var t = {
            metadata: {
              version: 4.5,
              type: "Geometry",
              generator: "Geometry.toJSON"
            }
          };
          if (
            ((t.uuid = this.uuid),
            (t.type = this.type),
            "" !== this.name && (t.name = this.name),
            void 0 !== this.parameters)
          ) {
            var e = this.parameters;
            for (var n in e) void 0 !== e[n] && (t[n] = e[n]);
            return t;
          }
          for (var i = [], r = 0; r < this.vertices.length; r++) {
            var a = this.vertices[r];
            i.push(a.x, a.y, a.z);
          }
          var o = [],
            s = [],
            l = {},
            c = [],
            h = {},
            u = [],
            d = {};
          for (r = 0; r < this.faces.length; r++) {
            var f = this.faces[r],
              p = void 0 !== this.faceVertexUvs[0][r],
              m = f.normal.length() > 0,
              g = f.vertexNormals.length > 0,
              v = 1 !== f.color.r || 1 !== f.color.g || 1 !== f.color.b,
              _ = f.vertexColors.length > 0,
              y = 0;
            if (
              ((y = T(y, 0, 0)),
              (y = T(y, 1, !0)),
              (y = T(y, 2, !1)),
              (y = T(y, 3, p)),
              (y = T(y, 4, m)),
              (y = T(y, 5, g)),
              (y = T(y, 6, v)),
              (y = T(y, 7, _)),
              o.push(y),
              o.push(f.a, f.b, f.c),
              o.push(f.materialIndex),
              p)
            ) {
              var x = this.faceVertexUvs[0][r];
              o.push(S(x[0]), S(x[1]), S(x[2]));
            }
            if ((m && o.push(M(f.normal)), g)) {
              var b = f.vertexNormals;
              o.push(M(b[0]), M(b[1]), M(b[2]));
            }
            if ((v && o.push(E(f.color)), _)) {
              var w = f.vertexColors;
              o.push(E(w[0]), E(w[1]), E(w[2]));
            }
          }
          function T(t, e, n) {
            return n ? t | (1 << e) : t & ~(1 << e);
          }
          function M(t) {
            var e = t.x.toString() + t.y.toString() + t.z.toString();
            return void 0 !== l[e]
              ? l[e]
              : ((l[e] = s.length / 3), s.push(t.x, t.y, t.z), l[e]);
          }
          function E(t) {
            var e = t.r.toString() + t.g.toString() + t.b.toString();
            return void 0 !== h[e]
              ? h[e]
              : ((h[e] = c.length), c.push(t.getHex()), h[e]);
          }
          function S(t) {
            var e = t.x.toString() + t.y.toString();
            return void 0 !== d[e]
              ? d[e]
              : ((d[e] = u.length / 2), u.push(t.x, t.y), d[e]);
          }
          return (
            (t.data = {}),
            (t.data.vertices = i),
            (t.data.normals = s),
            c.length > 0 && (t.data.colors = c),
            u.length > 0 && (t.data.uvs = [u]),
            (t.data.faces = o),
            t
          );
        },
        clone: function() {
          return new _().copy(this);
        },
        copy: function(t) {
          var e, n, i, r, a, o;
          (this.vertices = []),
            (this.colors = []),
            (this.faces = []),
            (this.faceVertexUvs = [[]]),
            (this.morphTargets = []),
            (this.morphNormals = []),
            (this.skinWeights = []),
            (this.skinIndices = []),
            (this.lineDistances = []),
            (this.boundingBox = null),
            (this.boundingSphere = null),
            (this.name = t.name);
          var s = t.vertices;
          for (e = 0, n = s.length; e < n; e++)
            this.vertices.push(s[e].clone());
          var l = t.colors;
          for (e = 0, n = l.length; e < n; e++) this.colors.push(l[e].clone());
          var c = t.faces;
          for (e = 0, n = c.length; e < n; e++) this.faces.push(c[e].clone());
          for (e = 0, n = t.faceVertexUvs.length; e < n; e++) {
            var h = t.faceVertexUvs[e];
            for (
              void 0 === this.faceVertexUvs[e] && (this.faceVertexUvs[e] = []),
                i = 0,
                r = h.length;
              i < r;
              i++
            ) {
              var u = h[i],
                d = [];
              for (a = 0, o = u.length; a < o; a++) {
                var f = u[a];
                d.push(f.clone());
              }
              this.faceVertexUvs[e].push(d);
            }
          }
          var p = t.morphTargets;
          for (e = 0, n = p.length; e < n; e++) {
            var m = {};
            if (((m.name = p[e].name), void 0 !== p[e].vertices))
              for (m.vertices = [], i = 0, r = p[e].vertices.length; i < r; i++)
                m.vertices.push(p[e].vertices[i].clone());
            if (void 0 !== p[e].normals)
              for (m.normals = [], i = 0, r = p[e].normals.length; i < r; i++)
                m.normals.push(p[e].normals[i].clone());
            this.morphTargets.push(m);
          }
          var g = t.morphNormals;
          for (e = 0, n = g.length; e < n; e++) {
            var v = {};
            if (void 0 !== g[e].vertexNormals)
              for (
                v.vertexNormals = [], i = 0, r = g[e].vertexNormals.length;
                i < r;
                i++
              ) {
                var _ = g[e].vertexNormals[i],
                  y = {};
                (y.a = _.a.clone()),
                  (y.b = _.b.clone()),
                  (y.c = _.c.clone()),
                  v.vertexNormals.push(y);
              }
            if (void 0 !== g[e].faceNormals)
              for (
                v.faceNormals = [], i = 0, r = g[e].faceNormals.length;
                i < r;
                i++
              )
                v.faceNormals.push(g[e].faceNormals[i].clone());
            this.morphNormals.push(v);
          }
          var x = t.skinWeights;
          for (e = 0, n = x.length; e < n; e++)
            this.skinWeights.push(x[e].clone());
          var b = t.skinIndices;
          for (e = 0, n = b.length; e < n; e++)
            this.skinIndices.push(b[e].clone());
          var w = t.lineDistances;
          for (e = 0, n = w.length; e < n; e++) this.lineDistances.push(w[e]);
          var T = t.boundingBox;
          null !== T && (this.boundingBox = T.clone());
          var M = t.boundingSphere;
          return (
            null !== M && (this.boundingSphere = M.clone()),
            (this.elementsNeedUpdate = t.elementsNeedUpdate),
            (this.verticesNeedUpdate = t.verticesNeedUpdate),
            (this.uvsNeedUpdate = t.uvsNeedUpdate),
            (this.normalsNeedUpdate = t.normalsNeedUpdate),
            (this.colorsNeedUpdate = t.colorsNeedUpdate),
            (this.lineDistancesNeedUpdate = t.lineDistancesNeedUpdate),
            (this.groupsNeedUpdate = t.groupsNeedUpdate),
            this
          );
        },
        dispose: function() {
          this.dispatchEvent({ type: "dispose" });
        }
      });
    },
    function(t, e, n) {
      "use strict";
      n.d(e, "a", function() {
        return a;
      });
      var i = n(8),
        r = n(1);
      function a(t, e, n, a, o, s) {
        (this.a = t),
          (this.b = e),
          (this.c = n),
          (this.normal = a && a.isVector3 ? a : new r.a()),
          (this.vertexNormals = Array.isArray(a) ? a : []),
          (this.color = o && o.isColor ? o : new i.a()),
          (this.vertexColors = Array.isArray(o) ? o : []),
          (this.materialIndex = void 0 !== s ? s : 0);
      }
      Object.assign(a.prototype, {
        clone: function() {
          return new this.constructor().copy(this);
        },
        copy: function(t) {
          (this.a = t.a),
            (this.b = t.b),
            (this.c = t.c),
            this.normal.copy(t.normal),
            this.color.copy(t.color),
            (this.materialIndex = t.materialIndex);
          for (var e = 0, n = t.vertexNormals.length; e < n; e++)
            this.vertexNormals[e] = t.vertexNormals[e].clone();
          for (e = 0, n = t.vertexColors.length; e < n; e++)
            this.vertexColors[e] = t.vertexColors[e].clone();
          return this;
        }
      });
    },
    function(t, e, n) {
      var i, r;
      /*!
 * imagesLoaded v4.1.4
 * JavaScript is all like "You images are done yet or what?"
 * MIT License
 */
      /*!
 * imagesLoaded v4.1.4
 * JavaScript is all like "You images are done yet or what?"
 * MIT License
 */
      !(function(a, o) {
        "use strict";
        (i = [n(50)]),
          void 0 ===
            (r = function(t) {
              return (function(t, e) {
                var n = t.jQuery,
                  i = t.console;
                function r(t, e) {
                  for (var n in e) t[n] = e[n];
                  return t;
                }
                var a = Array.prototype.slice;
                function o(t, e, s) {
                  if (!(this instanceof o)) return new o(t, e, s);
                  var l = t;
                  "string" == typeof t && (l = document.querySelectorAll(t)),
                    l
                      ? ((this.elements = (function(t) {
                          if (Array.isArray(t)) return t;
                          if (
                            "object" == typeof t &&
                            "number" == typeof t.length
                          )
                            return a.call(t);
                          return [t];
                        })(l)),
                        (this.options = r({}, this.options)),
                        "function" == typeof e ? (s = e) : r(this.options, e),
                        s && this.on("always", s),
                        this.getImages(),
                        n && (this.jqDeferred = new n.Deferred()),
                        setTimeout(this.check.bind(this)))
                      : i.error("Bad element for imagesLoaded " + (l || t));
                }
                (o.prototype = Object.create(e.prototype)),
                  (o.prototype.options = {}),
                  (o.prototype.getImages = function() {
                    (this.images = []),
                      this.elements.forEach(this.addElementImages, this);
                  }),
                  (o.prototype.addElementImages = function(t) {
                    "IMG" == t.nodeName && this.addImage(t),
                      !0 === this.options.background &&
                        this.addElementBackgroundImages(t);
                    var e = t.nodeType;
                    if (e && s[e]) {
                      for (
                        var n = t.querySelectorAll("img"), i = 0;
                        i < n.length;
                        i++
                      ) {
                        var r = n[i];
                        this.addImage(r);
                      }
                      if ("string" == typeof this.options.background) {
                        var a = t.querySelectorAll(this.options.background);
                        for (i = 0; i < a.length; i++) {
                          var o = a[i];
                          this.addElementBackgroundImages(o);
                        }
                      }
                    }
                  });
                var s = { 1: !0, 9: !0, 11: !0 };
                function l(t) {
                  this.img = t;
                }
                function c(t, e) {
                  (this.url = t), (this.element = e), (this.img = new Image());
                }
                return (
                  (o.prototype.addElementBackgroundImages = function(t) {
                    var e = getComputedStyle(t);
                    if (e)
                      for (
                        var n = /url\((['"])?(.*?)\1\)/gi,
                          i = n.exec(e.backgroundImage);
                        null !== i;

                      ) {
                        var r = i && i[2];
                        r && this.addBackground(r, t),
                          (i = n.exec(e.backgroundImage));
                      }
                  }),
                  (o.prototype.addImage = function(t) {
                    var e = new l(t);
                    this.images.push(e);
                  }),
                  (o.prototype.addBackground = function(t, e) {
                    var n = new c(t, e);
                    this.images.push(n);
                  }),
                  (o.prototype.check = function() {
                    var t = this;
                    function e(e, n, i) {
                      setTimeout(function() {
                        t.progress(e, n, i);
                      });
                    }
                    (this.progressedCount = 0),
                      (this.hasAnyBroken = !1),
                      this.images.length
                        ? this.images.forEach(function(t) {
                            t.once("progress", e), t.check();
                          })
                        : this.complete();
                  }),
                  (o.prototype.progress = function(t, e, n) {
                    this.progressedCount++,
                      (this.hasAnyBroken = this.hasAnyBroken || !t.isLoaded),
                      this.emitEvent("progress", [this, t, e]),
                      this.jqDeferred &&
                        this.jqDeferred.notify &&
                        this.jqDeferred.notify(this, t),
                      this.progressedCount == this.images.length &&
                        this.complete(),
                      this.options.debug && i && i.log("progress: " + n, t, e);
                  }),
                  (o.prototype.complete = function() {
                    var t = this.hasAnyBroken ? "fail" : "done";
                    if (
                      ((this.isComplete = !0),
                      this.emitEvent(t, [this]),
                      this.emitEvent("always", [this]),
                      this.jqDeferred)
                    ) {
                      var e = this.hasAnyBroken ? "reject" : "resolve";
                      this.jqDeferred[e](this);
                    }
                  }),
                  (l.prototype = Object.create(e.prototype)),
                  (l.prototype.check = function() {
                    this.getIsImageComplete()
                      ? this.confirm(
                          0 !== this.img.naturalWidth,
                          "naturalWidth"
                        )
                      : ((this.proxyImage = new Image()),
                        this.proxyImage.addEventListener("load", this),
                        this.proxyImage.addEventListener("error", this),
                        this.img.addEventListener("load", this),
                        this.img.addEventListener("error", this),
                        (this.proxyImage.src = this.img.src));
                  }),
                  (l.prototype.getIsImageComplete = function() {
                    return this.img.complete && this.img.naturalWidth;
                  }),
                  (l.prototype.confirm = function(t, e) {
                    (this.isLoaded = t),
                      this.emitEvent("progress", [this, this.img, e]);
                  }),
                  (l.prototype.handleEvent = function(t) {
                    var e = "on" + t.type;
                    this[e] && this[e](t);
                  }),
                  (l.prototype.onload = function() {
                    this.confirm(!0, "onload"), this.unbindEvents();
                  }),
                  (l.prototype.onerror = function() {
                    this.confirm(!1, "onerror"), this.unbindEvents();
                  }),
                  (l.prototype.unbindEvents = function() {
                    this.proxyImage.removeEventListener("load", this),
                      this.proxyImage.removeEventListener("error", this),
                      this.img.removeEventListener("load", this),
                      this.img.removeEventListener("error", this);
                  }),
                  (c.prototype = Object.create(l.prototype)),
                  (c.prototype.check = function() {
                    this.img.addEventListener("load", this),
                      this.img.addEventListener("error", this),
                      (this.img.src = this.url),
                      this.getIsImageComplete() &&
                        (this.confirm(
                          0 !== this.img.naturalWidth,
                          "naturalWidth"
                        ),
                        this.unbindEvents());
                  }),
                  (c.prototype.unbindEvents = function() {
                    this.img.removeEventListener("load", this),
                      this.img.removeEventListener("error", this);
                  }),
                  (c.prototype.confirm = function(t, e) {
                    (this.isLoaded = t),
                      this.emitEvent("progress", [this, this.element, e]);
                  }),
                  (o.makeJQueryPlugin = function(e) {
                    (e = e || t.jQuery) &&
                      ((n = e).fn.imagesLoaded = function(t, e) {
                        return new o(this, t, e).jqDeferred.promise(n(this));
                      });
                  }),
                  o.makeJQueryPlugin(),
                  o
                );
              })(a, t);
            }.apply(e, i)) || (t.exports = r);
      })("undefined" != typeof window ? window : this);
    },
    function(t, e, n) {
      "use strict";
      var i = n(51),
        r = n(52),
        a = n(53).Lethargy,
        o = n(54),
        s = (n(55), n(56)),
        l = "virtualscroll";
      t.exports = p;
      var c = 37,
        h = 38,
        u = 39,
        d = 40,
        f = 32;
      function p(t) {
        s(
          this,
          "_onWheel",
          "_onMouseWheel",
          "_onTouchStart",
          "_onTouchMove",
          "_onKeyDown"
        ),
          (this.el = window),
          t && t.el && ((this.el = t.el), delete t.el),
          (this.options = i(
            {
              mouseMultiplier: 1,
              touchMultiplier: 2,
              firefoxMultiplier: 15,
              keyStep: 120,
              preventTouch: !1,
              unpreventTouchClass: "vs-touchmove-allowed",
              limitInertia: !1
            },
            t
          )),
          this.options.limitInertia && (this._lethargy = new a()),
          (this._emitter = new r()),
          (this._event = { y: 0, x: 0, deltaX: 0, deltaY: 0 }),
          (this.touchStartX = null),
          (this.touchStartY = null),
          (this.bodyTouchAction = null),
          void 0 !== this.options.passive &&
            (this.listenerOptions = { passive: this.options.passive });
      }
      (p.prototype._notify = function(t) {
        var e = this._event;
        (e.x += e.deltaX),
          (e.y += e.deltaY),
          this._emitter.emit(l, {
            x: e.x,
            y: e.y,
            deltaX: e.deltaX,
            deltaY: e.deltaY,
            originalEvent: t
          });
      }),
        (p.prototype._onWheel = function(t) {
          var e = this.options;
          if (!this._lethargy || !1 !== this._lethargy.check(t)) {
            var n = this._event;
            (n.deltaX = t.wheelDeltaX || -1 * t.deltaX),
              (n.deltaY = t.wheelDeltaY || -1 * t.deltaY),
              o.isFirefox &&
                1 == t.deltaMode &&
                ((n.deltaX *= e.firefoxMultiplier),
                (n.deltaY *= e.firefoxMultiplier)),
              (n.deltaX *= e.mouseMultiplier),
              (n.deltaY *= e.mouseMultiplier),
              this._notify(t);
          }
        }),
        (p.prototype._onMouseWheel = function(t) {
          if (!this.options.limitInertia || !1 !== this._lethargy.check(t)) {
            var e = this._event;
            (e.deltaX = t.wheelDeltaX ? t.wheelDeltaX : 0),
              (e.deltaY = t.wheelDeltaY ? t.wheelDeltaY : t.wheelDelta),
              this._notify(t);
          }
        }),
        (p.prototype._onTouchStart = function(t) {
          var e = t.targetTouches ? t.targetTouches[0] : t;
          (this.touchStartX = e.pageX), (this.touchStartY = e.pageY);
        }),
        (p.prototype._onTouchMove = function(t) {
          var e = this.options;
          e.preventTouch &&
            !t.target.classList.contains(e.unpreventTouchClass) &&
            t.preventDefault();
          var n = this._event,
            i = t.targetTouches ? t.targetTouches[0] : t;
          (n.deltaX = (i.pageX - this.touchStartX) * e.touchMultiplier),
            (n.deltaY = (i.pageY - this.touchStartY) * e.touchMultiplier),
            (this.touchStartX = i.pageX),
            (this.touchStartY = i.pageY),
            this._notify(t);
        }),
        (p.prototype._onKeyDown = function(t) {
          var e = this._event;
          e.deltaX = e.deltaY = 0;
          var n = window.innerHeight - 40;
          switch (t.keyCode) {
            case c:
            case h:
              e.deltaY = this.options.keyStep;
              break;
            case u:
            case d:
              e.deltaY = -this.options.keyStep;
              break;
            case f && t.shiftKey:
              e.deltaY = n;
              break;
            case f:
              e.deltaY = -n;
              break;
            default:
              return;
          }
          this._notify(t);
        }),
        (p.prototype._bind = function() {
          o.hasWheelEvent &&
            this.el.addEventListener(
              "wheel",
              this._onWheel,
              this.listenerOptions
            ),
            o.hasMouseWheelEvent &&
              this.el.addEventListener(
                "mousewheel",
                this._onMouseWheel,
                this.listenerOptions
              ),
            o.hasTouch &&
              (this.el.addEventListener(
                "touchstart",
                this._onTouchStart,
                this.listenerOptions
              ),
              this.el.addEventListener(
                "touchmove",
                this._onTouchMove,
                this.listenerOptions
              )),
            o.hasPointer &&
              o.hasTouchWin &&
              ((this.bodyTouchAction = document.body.style.msTouchAction),
              (document.body.style.msTouchAction = "none"),
              this.el.addEventListener("MSPointerDown", this._onTouchStart, !0),
              this.el.addEventListener("MSPointerMove", this._onTouchMove, !0)),
            o.hasKeyDown &&
              document.addEventListener("keydown", this._onKeyDown);
        }),
        (p.prototype._unbind = function() {
          o.hasWheelEvent &&
            this.el.removeEventListener("wheel", this._onWheel),
            o.hasMouseWheelEvent &&
              this.el.removeEventListener("mousewheel", this._onMouseWheel),
            o.hasTouch &&
              (this.el.removeEventListener("touchstart", this._onTouchStart),
              this.el.removeEventListener("touchmove", this._onTouchMove)),
            o.hasPointer &&
              o.hasTouchWin &&
              ((document.body.style.msTouchAction = this.bodyTouchAction),
              this.el.removeEventListener(
                "MSPointerDown",
                this._onTouchStart,
                !0
              ),
              this.el.removeEventListener(
                "MSPointerMove",
                this._onTouchMove,
                !0
              )),
            o.hasKeyDown &&
              document.removeEventListener("keydown", this._onKeyDown);
        }),
        (p.prototype.on = function(t, e) {
          this._emitter.on(l, t, e);
          var n = this._emitter.e;
          n && n[l] && 1 === n[l].length && this._bind();
        }),
        (p.prototype.off = function(t, e) {
          this._emitter.off(l, t, e);
          var n = this._emitter.e;
          (!n[l] || n[l].length <= 0) && this._unbind();
        }),
        (p.prototype.reset = function() {
          var t = this._event;
          (t.x = 0), (t.y = 0);
        }),
        (p.prototype.destroy = function() {
          this._emitter.off(), this._unbind();
        });
    },
    function(t, e, n) {
      "use strict";
      function i(t) {
        if (0 === t.length) return -1 / 0;
        for (var e = t[0], n = 1, i = t.length; n < i; ++n)
          t[n] > e && (e = t[n]);
        return e;
      }
      n.d(e, "a", function() {
        return i;
      });
    },
    function(t, e, n) {
      "use strict";
      (function(e) {
        var i = n(17),
          r = n(62),
          a = { "Content-Type": "application/x-www-form-urlencoded" };
        function o(t, e) {
          !i.isUndefined(t) &&
            i.isUndefined(t["Content-Type"]) &&
            (t["Content-Type"] = e);
        }
        var s,
          l = {
            adapter: ("undefined" != typeof XMLHttpRequest
              ? (s = n(36))
              : void 0 !== e && (s = n(36)),
            s),
            transformRequest: [
              function(t, e) {
                return (
                  r(e, "Content-Type"),
                  i.isFormData(t) ||
                  i.isArrayBuffer(t) ||
                  i.isBuffer(t) ||
                  i.isStream(t) ||
                  i.isFile(t) ||
                  i.isBlob(t)
                    ? t
                    : i.isArrayBufferView(t)
                      ? t.buffer
                      : i.isURLSearchParams(t)
                        ? (o(
                            e,
                            "application/x-www-form-urlencoded;charset=utf-8"
                          ),
                          t.toString())
                        : i.isObject(t)
                          ? (o(e, "application/json;charset=utf-8"),
                            JSON.stringify(t))
                          : t
                );
              }
            ],
            transformResponse: [
              function(t) {
                if ("string" == typeof t)
                  try {
                    t = JSON.parse(t);
                  } catch (t) {}
                return t;
              }
            ],
            timeout: 0,
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN",
            maxContentLength: -1,
            validateStatus: function(t) {
              return t >= 200 && t < 300;
            }
          };
        (l.headers = {
          common: { Accept: "application/json, text/plain, */*" }
        }),
          i.forEach(["delete", "get", "head"], function(t) {
            l.headers[t] = {};
          }),
          i.forEach(["post", "put", "patch"], function(t) {
            l.headers[t] = i.merge(a);
          }),
          (t.exports = l);
      }.call(this, n(61)));
    },
    function(t, e, n) {
      "use strict";
      /**
       * @license get-closest https://github.com/cosmosio/get-closest
       *
       * The MIT License (MIT)
       *
       * Copyright (c) 2014-2017 Olivier Scherrer <pode.fr@gmail.com>
       */ function i(t, e, n) {
        var i, r;
        if (!Array.isArray(e))
          throw new Error("Get closest expects an array as second argument");
        return (
          e.forEach(function(e, a) {
            var o = n(e, t);
            o >= 0 && (void 0 === r || o < r) && ((r = o), (i = a));
          }),
          i
        );
      }
      t.exports = {
        number: function(t, e) {
          return i(t, e, function(t, e) {
            return Math.abs(t - e);
          });
        },
        greaterNumber: function(t, e) {
          return i(t, e, function(t, e) {
            return t - e;
          });
        },
        lowerNumber: function(t, e) {
          return i(t, e, function(t, e) {
            return e - t;
          });
        },
        custom: function(t, e, n) {
          return i(t, e, n);
        }
      };
    },
    function(t, e, n) {
      "use strict";
      var i = n(48);
      function r() {
        var t = navigator.userAgent.toLowerCase(),
          e = navigator.appVersion.toLowerCase(),
          n = /windows phone|iemobile|wpdesktop/.test(t),
          i = !n && /android.*mobile/.test(t),
          r = !n && !i && /android/i.test(t),
          a = i || r,
          o = !n && /ip(hone|od|ad)/i.test(t) && !window.MSStream,
          s = !n && /ipad/i.test(t) && o,
          l = r || s,
          c = i || (o && !s) || n,
          h = c || l,
          u = t.indexOf("firefox") > -1,
          d = !!t.match(/version\/[\d\.]+.*safari/),
          f = t.indexOf("opr") > -1,
          p = !window.ActiveXObject && "ActiveXObject" in window,
          m = e.indexOf("msie") > -1 || p || e.indexOf("edge") > -1,
          g = t.indexOf("edge") > -1,
          v =
            null !== window.chrome &&
            void 0 !== window.chrome &&
            "google inc." == navigator.vendor.toLowerCase() &&
            !f &&
            !g;
        (this.infos = {
          isDroid: a,
          isDroidPhone: i,
          isDroidTablet: r,
          isWindowsPhone: n,
          isIos: o,
          isIpad: s,
          isDevice: h,
          isEdge: g,
          isIE: m,
          isIE11: p,
          isPhone: c,
          isTablet: l,
          isFirefox: u,
          isSafari: d,
          isOpera: f,
          isChrome: v,
          isDesktop: !c && !l
        }),
          Object.keys(this.infos).forEach(function(t) {
            Object.defineProperty(this, t, {
              get: function() {
                return this.infos[t];
              }
            });
          }, this),
          Object.freeze(this);
      }
      (t.exports = new r()),
        (r.prototype.addClasses = function(t) {
          Object.keys(this.infos).forEach(function(e) {
            this.infos[e] &&
              (function(t, e) {
                t.addClass
                  ? t.addClass(e)
                  : t.classList ? t.classList.add(e) : (t.className += " " + e);
              })(t, i(e));
          }, this);
        }),
        (r.prototype.getInfos = function() {
          return (t = this.infos), JSON.parse(JSON.stringify(t));
          var t;
        });
    },
    function(t, e, n) {
      "use strict";
      n.d(e, "a", function() {
        return a;
      });
      var i = n(13),
        r = n(11);
      function a(t) {
        i.a.call(this),
          (this.type = "ShaderMaterial"),
          (this.defines = {}),
          (this.uniforms = {}),
          (this.vertexShader =
            "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"),
          (this.fragmentShader =
            "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}"),
          (this.linewidth = 1),
          (this.wireframe = !1),
          (this.wireframeLinewidth = 1),
          (this.fog = !1),
          (this.lights = !1),
          (this.clipping = !1),
          (this.skinning = !1),
          (this.morphTargets = !1),
          (this.morphNormals = !1),
          (this.extensions = {
            derivatives: !1,
            fragDepth: !1,
            drawBuffers: !1,
            shaderTextureLOD: !1
          }),
          (this.defaultAttributeValues = {
            color: [1, 1, 1],
            uv: [0, 0],
            uv2: [0, 0]
          }),
          (this.index0AttributeName = void 0),
          (this.uniformsNeedUpdate = !1),
          void 0 !== t &&
            (void 0 !== t.attributes &&
              console.error(
                "THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."
              ),
            this.setValues(t));
      }
      (a.prototype = Object.create(i.a.prototype)),
        (a.prototype.constructor = a),
        (a.prototype.isShaderMaterial = !0),
        (a.prototype.copy = function(t) {
          return (
            i.a.prototype.copy.call(this, t),
            (this.fragmentShader = t.fragmentShader),
            (this.vertexShader = t.vertexShader),
            (this.uniforms = Object(r.a)(t.uniforms)),
            (this.defines = Object.assign({}, t.defines)),
            (this.wireframe = t.wireframe),
            (this.wireframeLinewidth = t.wireframeLinewidth),
            (this.lights = t.lights),
            (this.clipping = t.clipping),
            (this.skinning = t.skinning),
            (this.morphTargets = t.morphTargets),
            (this.morphNormals = t.morphNormals),
            (this.extensions = t.extensions),
            this
          );
        }),
        (a.prototype.toJSON = function(t) {
          var e = i.a.prototype.toJSON.call(this, t);
          for (var n in ((e.uniforms = {}), this.uniforms)) {
            var r = this.uniforms[n].value;
            r.isTexture
              ? (e.uniforms[n] = { type: "t", value: r.toJSON(t).uuid })
              : r.isColor
                ? (e.uniforms[n] = { type: "c", value: r.getHex() })
                : r.isVector2
                  ? (e.uniforms[n] = { type: "v2", value: r.toArray() })
                  : r.isVector3
                    ? (e.uniforms[n] = { type: "v3", value: r.toArray() })
                    : r.isVector4
                      ? (e.uniforms[n] = { type: "v4", value: r.toArray() })
                      : r.isMatrix4
                        ? (e.uniforms[n] = { type: "m4", value: r.toArray() })
                        : (e.uniforms[n] = { value: r });
          }
          return (
            Object.keys(this.defines).length > 0 && (e.defines = this.defines),
            (e.vertexShader = this.vertexShader),
            (e.fragmentShader = this.fragmentShader),
            e
          );
        });
    },
    function(t, e, n) {
      "use strict";
      var i,
        r,
        a,
        o,
        s,
        l = n(1),
        c = n(6),
        h = n(19);
      function u(t, e) {
        (this.origin = void 0 !== t ? t : new l.a()),
          (this.direction = void 0 !== e ? e : new l.a());
      }
      Object.assign(u.prototype, {
        set: function(t, e) {
          return this.origin.copy(t), this.direction.copy(e), this;
        },
        clone: function() {
          return new this.constructor().copy(this);
        },
        copy: function(t) {
          return (
            this.origin.copy(t.origin), this.direction.copy(t.direction), this
          );
        },
        at: function(t, e) {
          return (
            void 0 === e &&
              (console.warn("THREE.Ray: .at() target is now required"),
              (e = new l.a())),
            e
              .copy(this.direction)
              .multiplyScalar(t)
              .add(this.origin)
          );
        },
        lookAt: function(t) {
          return (
            this.direction
              .copy(t)
              .sub(this.origin)
              .normalize(),
            this
          );
        },
        recast: ((s = new l.a()),
        function(t) {
          return this.origin.copy(this.at(t, s)), this;
        }),
        closestPointToPoint: function(t, e) {
          void 0 === e &&
            (console.warn(
              "THREE.Ray: .closestPointToPoint() target is now required"
            ),
            (e = new l.a())),
            e.subVectors(t, this.origin);
          var n = e.dot(this.direction);
          return n < 0
            ? e.copy(this.origin)
            : e
                .copy(this.direction)
                .multiplyScalar(n)
                .add(this.origin);
        },
        distanceToPoint: function(t) {
          return Math.sqrt(this.distanceSqToPoint(t));
        },
        distanceSqToPoint: (function() {
          var t = new l.a();
          return function(e) {
            var n = t.subVectors(e, this.origin).dot(this.direction);
            return n < 0
              ? this.origin.distanceToSquared(e)
              : (t
                  .copy(this.direction)
                  .multiplyScalar(n)
                  .add(this.origin),
                t.distanceToSquared(e));
          };
        })(),
        distanceSqToSegment: ((r = new l.a()),
        (a = new l.a()),
        (o = new l.a()),
        function(t, e, n, i) {
          r
            .copy(t)
            .add(e)
            .multiplyScalar(0.5),
            a
              .copy(e)
              .sub(t)
              .normalize(),
            o.copy(this.origin).sub(r);
          var s,
            l,
            c,
            h,
            u = 0.5 * t.distanceTo(e),
            d = -this.direction.dot(a),
            f = o.dot(this.direction),
            p = -o.dot(a),
            m = o.lengthSq(),
            g = Math.abs(1 - d * d);
          if (g > 0)
            if (((l = d * f - p), (h = u * g), (s = d * p - f) >= 0))
              if (l >= -h)
                if (l <= h) {
                  var v = 1 / g;
                  c =
                    (s *= v) * (s + d * (l *= v) + 2 * f) +
                    l * (d * s + l + 2 * p) +
                    m;
                } else
                  (l = u),
                    (c =
                      -(s = Math.max(0, -(d * l + f))) * s +
                      l * (l + 2 * p) +
                      m);
              else
                (l = -u),
                  (c =
                    -(s = Math.max(0, -(d * l + f))) * s + l * (l + 2 * p) + m);
            else
              l <= -h
                ? (c =
                    -(s = Math.max(0, -(-d * u + f))) * s +
                    (l = s > 0 ? -u : Math.min(Math.max(-u, -p), u)) *
                      (l + 2 * p) +
                    m)
                : l <= h
                  ? ((s = 0),
                    (c = (l = Math.min(Math.max(-u, -p), u)) * (l + 2 * p) + m))
                  : (c =
                      -(s = Math.max(0, -(d * u + f))) * s +
                      (l = s > 0 ? u : Math.min(Math.max(-u, -p), u)) *
                        (l + 2 * p) +
                      m);
          else
            (l = d > 0 ? -u : u),
              (c = -(s = Math.max(0, -(d * l + f))) * s + l * (l + 2 * p) + m);
          return (
            n &&
              n
                .copy(this.direction)
                .multiplyScalar(s)
                .add(this.origin),
            i &&
              i
                .copy(a)
                .multiplyScalar(l)
                .add(r),
            c
          );
        }),
        intersectSphere: (function() {
          var t = new l.a();
          return function(e, n) {
            t.subVectors(e.center, this.origin);
            var i = t.dot(this.direction),
              r = t.dot(t) - i * i,
              a = e.radius * e.radius;
            if (r > a) return null;
            var o = Math.sqrt(a - r),
              s = i - o,
              l = i + o;
            return s < 0 && l < 0
              ? null
              : s < 0 ? this.at(l, n) : this.at(s, n);
          };
        })(),
        intersectsSphere: function(t) {
          return this.distanceSqToPoint(t.center) <= t.radius * t.radius;
        },
        distanceToPlane: function(t) {
          var e = t.normal.dot(this.direction);
          if (0 === e) return 0 === t.distanceToPoint(this.origin) ? 0 : null;
          var n = -(this.origin.dot(t.normal) + t.constant) / e;
          return n >= 0 ? n : null;
        },
        intersectPlane: function(t, e) {
          var n = this.distanceToPlane(t);
          return null === n ? null : this.at(n, e);
        },
        intersectsPlane: function(t) {
          var e = t.distanceToPoint(this.origin);
          return 0 === e || t.normal.dot(this.direction) * e < 0;
        },
        intersectBox: function(t, e) {
          var n,
            i,
            r,
            a,
            o,
            s,
            l = 1 / this.direction.x,
            c = 1 / this.direction.y,
            h = 1 / this.direction.z,
            u = this.origin;
          return (
            l >= 0
              ? ((n = (t.min.x - u.x) * l), (i = (t.max.x - u.x) * l))
              : ((n = (t.max.x - u.x) * l), (i = (t.min.x - u.x) * l)),
            c >= 0
              ? ((r = (t.min.y - u.y) * c), (a = (t.max.y - u.y) * c))
              : ((r = (t.max.y - u.y) * c), (a = (t.min.y - u.y) * c)),
            n > a || r > i
              ? null
              : ((r > n || n != n) && (n = r),
                (a < i || i != i) && (i = a),
                h >= 0
                  ? ((o = (t.min.z - u.z) * h), (s = (t.max.z - u.z) * h))
                  : ((o = (t.max.z - u.z) * h), (s = (t.min.z - u.z) * h)),
                n > s || o > i
                  ? null
                  : ((o > n || n != n) && (n = o),
                    (s < i || i != i) && (i = s),
                    i < 0 ? null : this.at(n >= 0 ? n : i, e)))
          );
        },
        intersectsBox: ((i = new l.a()),
        function(t) {
          return null !== this.intersectBox(t, i);
        }),
        intersectTriangle: (function() {
          var t = new l.a(),
            e = new l.a(),
            n = new l.a(),
            i = new l.a();
          return function(r, a, o, s, l) {
            e.subVectors(a, r), n.subVectors(o, r), i.crossVectors(e, n);
            var c,
              h = this.direction.dot(i);
            if (h > 0) {
              if (s) return null;
              c = 1;
            } else {
              if (!(h < 0)) return null;
              (c = -1), (h = -h);
            }
            t.subVectors(this.origin, r);
            var u = c * this.direction.dot(n.crossVectors(t, n));
            if (u < 0) return null;
            var d = c * this.direction.dot(e.cross(t));
            if (d < 0) return null;
            if (u + d > h) return null;
            var f = -c * t.dot(i);
            return f < 0 ? null : this.at(f / h, l);
          };
        })(),
        applyMatrix4: function(t) {
          return (
            this.origin.applyMatrix4(t),
            this.direction.transformDirection(t),
            this
          );
        },
        equals: function(t) {
          return (
            t.origin.equals(this.origin) && t.direction.equals(this.direction)
          );
        }
      });
      var d,
        f,
        p,
        m,
        g,
        v,
        _,
        y,
        x = n(4),
        b = n(10);
      function w(t, e, n) {
        (this.a = void 0 !== t ? t : new l.a()),
          (this.b = void 0 !== e ? e : new l.a()),
          (this.c = void 0 !== n ? n : new l.a());
      }
      Object.assign(w, {
        getNormal: ((f = new l.a()),
        function(t, e, n, i) {
          void 0 === i &&
            (console.warn(
              "THREE.Triangle: .getNormal() target is now required"
            ),
            (i = new l.a())),
            i.subVectors(n, e),
            f.subVectors(t, e),
            i.cross(f);
          var r = i.lengthSq();
          return r > 0 ? i.multiplyScalar(1 / Math.sqrt(r)) : i.set(0, 0, 0);
        }),
        getBarycoord: (function() {
          var t = new l.a(),
            e = new l.a(),
            n = new l.a();
          return function(i, r, a, o, s) {
            t.subVectors(o, r), e.subVectors(a, r), n.subVectors(i, r);
            var c = t.dot(t),
              h = t.dot(e),
              u = t.dot(n),
              d = e.dot(e),
              f = e.dot(n),
              p = c * d - h * h;
            if (
              (void 0 === s &&
                (console.warn(
                  "THREE.Triangle: .getBarycoord() target is now required"
                ),
                (s = new l.a())),
              0 === p)
            )
              return s.set(-2, -1, -1);
            var m = 1 / p,
              g = (d * u - h * f) * m,
              v = (c * f - h * u) * m;
            return s.set(1 - g - v, v, g);
          };
        })(),
        containsPoint: (function() {
          var t = new l.a();
          return function(e, n, i, r) {
            return (
              w.getBarycoord(e, n, i, r, t),
              t.x >= 0 && t.y >= 0 && t.x + t.y <= 1
            );
          };
        })(),
        getUV: ((d = new l.a()),
        function(t, e, n, i, r, a, o, s) {
          return (
            this.getBarycoord(t, e, n, i, d),
            s.set(0, 0),
            s.addScaledVector(r, d.x),
            s.addScaledVector(a, d.y),
            s.addScaledVector(o, d.z),
            s
          );
        })
      }),
        Object.assign(w.prototype, {
          set: function(t, e, n) {
            return this.a.copy(t), this.b.copy(e), this.c.copy(n), this;
          },
          setFromPointsAndIndices: function(t, e, n, i) {
            return (
              this.a.copy(t[e]), this.b.copy(t[n]), this.c.copy(t[i]), this
            );
          },
          clone: function() {
            return new this.constructor().copy(this);
          },
          copy: function(t) {
            return this.a.copy(t.a), this.b.copy(t.b), this.c.copy(t.c), this;
          },
          getArea: (function() {
            var t = new l.a(),
              e = new l.a();
            return function() {
              return (
                t.subVectors(this.c, this.b),
                e.subVectors(this.a, this.b),
                0.5 * t.cross(e).length()
              );
            };
          })(),
          getMidpoint: function(t) {
            return (
              void 0 === t &&
                (console.warn(
                  "THREE.Triangle: .getMidpoint() target is now required"
                ),
                (t = new l.a())),
              t
                .addVectors(this.a, this.b)
                .add(this.c)
                .multiplyScalar(1 / 3)
            );
          },
          getNormal: function(t) {
            return w.getNormal(this.a, this.b, this.c, t);
          },
          getPlane: function(t) {
            return (
              void 0 === t &&
                (console.warn(
                  "THREE.Triangle: .getPlane() target is now required"
                ),
                (t = new l.a())),
              t.setFromCoplanarPoints(this.a, this.b, this.c)
            );
          },
          getBarycoord: function(t, e) {
            return w.getBarycoord(t, this.a, this.b, this.c, e);
          },
          containsPoint: function(t) {
            return w.containsPoint(t, this.a, this.b, this.c);
          },
          getUV: function(t, e, n, i, r) {
            return w.getUV(t, this.a, this.b, this.c, e, n, i, r);
          },
          intersectsBox: function(t) {
            return t.intersectsTriangle(this);
          },
          closestPointToPoint: ((p = new l.a()),
          (m = new l.a()),
          (g = new l.a()),
          (v = new l.a()),
          (_ = new l.a()),
          (y = new l.a()),
          function(t, e) {
            void 0 === e &&
              (console.warn(
                "THREE.Triangle: .closestPointToPoint() target is now required"
              ),
              (e = new l.a()));
            var n,
              i,
              r = this.a,
              a = this.b,
              o = this.c;
            p.subVectors(a, r), m.subVectors(o, r), v.subVectors(t, r);
            var s = p.dot(v),
              c = m.dot(v);
            if (s <= 0 && c <= 0) return e.copy(r);
            _.subVectors(t, a);
            var h = p.dot(_),
              u = m.dot(_);
            if (h >= 0 && u <= h) return e.copy(a);
            var d = s * u - h * c;
            if (d <= 0 && s >= 0 && h <= 0)
              return (n = s / (s - h)), e.copy(r).addScaledVector(p, n);
            y.subVectors(t, o);
            var f = p.dot(y),
              x = m.dot(y);
            if (x >= 0 && f <= x) return e.copy(o);
            var b = f * c - s * x;
            if (b <= 0 && c >= 0 && x <= 0)
              return (i = c / (c - x)), e.copy(r).addScaledVector(m, i);
            var w = h * x - f * u;
            if (w <= 0 && u - h >= 0 && f - x >= 0)
              return (
                g.subVectors(o, a),
                (i = (u - h) / (u - h + (f - x))),
                e.copy(a).addScaledVector(g, i)
              );
            var T = 1 / (w + b + d);
            return (
              (n = b * T),
              (i = d * T),
              e
                .copy(r)
                .addScaledVector(p, n)
                .addScaledVector(m, i)
            );
          }),
          equals: function(t) {
            return (
              t.a.equals(this.a) && t.b.equals(this.b) && t.c.equals(this.c)
            );
          }
        });
      var T = n(25),
        M = n(0),
        E = n(13),
        S = n(8);
      function L(t) {
        E.a.call(this),
          (this.type = "MeshBasicMaterial"),
          (this.color = new S.a(16777215)),
          (this.map = null),
          (this.lightMap = null),
          (this.lightMapIntensity = 1),
          (this.aoMap = null),
          (this.aoMapIntensity = 1),
          (this.specularMap = null),
          (this.alphaMap = null),
          (this.envMap = null),
          (this.combine = M.X),
          (this.reflectivity = 1),
          (this.refractionRatio = 0.98),
          (this.wireframe = !1),
          (this.wireframeLinewidth = 1),
          (this.wireframeLinecap = "round"),
          (this.wireframeLinejoin = "round"),
          (this.skinning = !1),
          (this.morphTargets = !1),
          (this.lights = !1),
          this.setValues(t);
      }
      (L.prototype = Object.create(E.a.prototype)),
        (L.prototype.constructor = L),
        (L.prototype.isMeshBasicMaterial = !0),
        (L.prototype.copy = function(t) {
          return (
            E.a.prototype.copy.call(this, t),
            this.color.copy(t.color),
            (this.map = t.map),
            (this.lightMap = t.lightMap),
            (this.lightMapIntensity = t.lightMapIntensity),
            (this.aoMap = t.aoMap),
            (this.aoMapIntensity = t.aoMapIntensity),
            (this.specularMap = t.specularMap),
            (this.alphaMap = t.alphaMap),
            (this.envMap = t.envMap),
            (this.combine = t.combine),
            (this.reflectivity = t.reflectivity),
            (this.refractionRatio = t.refractionRatio),
            (this.wireframe = t.wireframe),
            (this.wireframeLinewidth = t.wireframeLinewidth),
            (this.wireframeLinecap = t.wireframeLinecap),
            (this.wireframeLinejoin = t.wireframeLinejoin),
            (this.skinning = t.skinning),
            (this.morphTargets = t.morphTargets),
            this
          );
        });
      var P = n(20);
      function A(t, e) {
        b.a.call(this),
          (this.type = "Mesh"),
          (this.geometry = void 0 !== t ? t : new P.a()),
          (this.material =
            void 0 !== e ? e : new L({ color: 16777215 * Math.random() })),
          (this.drawMode = M.hc),
          this.updateMorphTargets();
      }
      n.d(e, "a", function() {
        return A;
      }),
        (A.prototype = Object.assign(Object.create(b.a.prototype), {
          constructor: A,
          isMesh: !0,
          setDrawMode: function(t) {
            this.drawMode = t;
          },
          copy: function(t) {
            return (
              b.a.prototype.copy.call(this, t),
              (this.drawMode = t.drawMode),
              void 0 !== t.morphTargetInfluences &&
                (this.morphTargetInfluences = t.morphTargetInfluences.slice()),
              void 0 !== t.morphTargetDictionary &&
                (this.morphTargetDictionary = Object.assign(
                  {},
                  t.morphTargetDictionary
                )),
              this
            );
          },
          updateMorphTargets: function() {
            var t,
              e,
              n,
              i = this.geometry;
            if (i.isBufferGeometry) {
              var r = i.morphAttributes,
                a = Object.keys(r);
              if (a.length > 0) {
                var o = r[a[0]];
                if (void 0 !== o)
                  for (
                    this.morphTargetInfluences = [],
                      this.morphTargetDictionary = {},
                      t = 0,
                      e = o.length;
                    t < e;
                    t++
                  )
                    (n = o[t].name || String(t)),
                      this.morphTargetInfluences.push(0),
                      (this.morphTargetDictionary[n] = t);
              }
            } else {
              var s = i.morphTargets;
              if (void 0 !== s && s.length > 0)
                for (
                  this.morphTargetInfluences = [],
                    this.morphTargetDictionary = {},
                    t = 0,
                    e = s.length;
                  t < e;
                  t++
                )
                  (n = s[t].name || String(t)),
                    this.morphTargetInfluences.push(0),
                    (this.morphTargetDictionary[n] = t);
            }
          },
          raycast: (function() {
            var t = new x.a(),
              e = new u(),
              n = new h.a(),
              i = new l.a(),
              r = new l.a(),
              a = new l.a(),
              o = new l.a(),
              s = new l.a(),
              d = new l.a(),
              f = new c.a(),
              p = new c.a(),
              m = new c.a(),
              g = new l.a(),
              v = new l.a();
            function _(t, e, n, i, r, a, o, s) {
              if (
                null ===
                (e.side === M.g
                  ? i.intersectTriangle(o, a, r, !0, s)
                  : i.intersectTriangle(r, a, o, e.side !== M.v, s))
              )
                return null;
              v.copy(s), v.applyMatrix4(t.matrixWorld);
              var l = n.ray.origin.distanceTo(v);
              return l < n.near || l > n.far
                ? null
                : { distance: l, point: v.clone(), object: t };
            }
            function y(t, e, n, o, s, l, h, u, d) {
              i.fromBufferAttribute(s, h),
                r.fromBufferAttribute(s, u),
                a.fromBufferAttribute(s, d);
              var v = _(t, e, n, o, i, r, a, g);
              if (v) {
                l &&
                  (f.fromBufferAttribute(l, h),
                  p.fromBufferAttribute(l, u),
                  m.fromBufferAttribute(l, d),
                  (v.uv = w.getUV(g, i, r, a, f, p, m, new c.a())));
                var y = new T.a(h, u, d);
                w.getNormal(i, r, a, y.normal), (v.face = y);
              }
              return v;
            }
            return function(l, h) {
              var u,
                v = this.geometry,
                x = this.material,
                b = this.matrixWorld;
              if (
                void 0 !== x &&
                (null === v.boundingSphere && v.computeBoundingSphere(),
                n.copy(v.boundingSphere),
                n.applyMatrix4(b),
                !1 !== l.ray.intersectsSphere(n) &&
                  (t.getInverse(b),
                  e.copy(l.ray).applyMatrix4(t),
                  null === v.boundingBox ||
                    !1 !== e.intersectsBox(v.boundingBox)))
              )
                if (v.isBufferGeometry) {
                  var T,
                    M,
                    E,
                    S,
                    L,
                    P,
                    A,
                    R,
                    C,
                    D = v.index,
                    O = v.attributes.position,
                    I = v.attributes.uv,
                    N = v.groups,
                    U = v.drawRange;
                  if (null !== D)
                    if (Array.isArray(x))
                      for (S = 0, P = N.length; S < P; S++)
                        for (
                          C = x[(R = N[S]).materialIndex],
                            L = Math.max(R.start, U.start),
                            A = Math.min(R.start + R.count, U.start + U.count);
                          L < A;
                          L += 3
                        )
                          (T = D.getX(L)),
                            (M = D.getX(L + 1)),
                            (E = D.getX(L + 2)),
                            (u = y(this, C, l, e, O, I, T, M, E)) &&
                              ((u.faceIndex = Math.floor(L / 3)), h.push(u));
                    else
                      for (
                        S = Math.max(0, U.start),
                          P = Math.min(D.count, U.start + U.count);
                        S < P;
                        S += 3
                      )
                        (T = D.getX(S)),
                          (M = D.getX(S + 1)),
                          (E = D.getX(S + 2)),
                          (u = y(this, x, l, e, O, I, T, M, E)) &&
                            ((u.faceIndex = Math.floor(S / 3)), h.push(u));
                  else if (void 0 !== O)
                    if (Array.isArray(x))
                      for (S = 0, P = N.length; S < P; S++)
                        for (
                          C = x[(R = N[S]).materialIndex],
                            L = Math.max(R.start, U.start),
                            A = Math.min(R.start + R.count, U.start + U.count);
                          L < A;
                          L += 3
                        )
                          (u = y(
                            this,
                            C,
                            l,
                            e,
                            O,
                            I,
                            (T = L),
                            (M = L + 1),
                            (E = L + 2)
                          )) && ((u.faceIndex = Math.floor(L / 3)), h.push(u));
                    else
                      for (
                        S = Math.max(0, U.start),
                          P = Math.min(O.count, U.start + U.count);
                        S < P;
                        S += 3
                      )
                        (u = y(
                          this,
                          x,
                          l,
                          e,
                          O,
                          I,
                          (T = S),
                          (M = S + 1),
                          (E = S + 2)
                        )) && ((u.faceIndex = Math.floor(S / 3)), h.push(u));
                } else if (v.isGeometry) {
                  var F,
                    z,
                    k,
                    B,
                    G = Array.isArray(x),
                    V = v.vertices,
                    H = v.faces,
                    W = v.faceVertexUvs[0];
                  W.length > 0 && (B = W);
                  for (var X = 0, j = H.length; X < j; X++) {
                    var Y = H[X],
                      q = G ? x[Y.materialIndex] : x;
                    if (void 0 !== q) {
                      if (
                        ((F = V[Y.a]),
                        (z = V[Y.b]),
                        (k = V[Y.c]),
                        !0 === q.morphTargets)
                      ) {
                        var Z = v.morphTargets,
                          J = this.morphTargetInfluences;
                        i.set(0, 0, 0), r.set(0, 0, 0), a.set(0, 0, 0);
                        for (var K = 0, Q = Z.length; K < Q; K++) {
                          var $ = J[K];
                          if (0 !== $) {
                            var tt = Z[K].vertices;
                            i.addScaledVector(o.subVectors(tt[Y.a], F), $),
                              r.addScaledVector(s.subVectors(tt[Y.b], z), $),
                              a.addScaledVector(d.subVectors(tt[Y.c], k), $);
                          }
                        }
                        i.add(F), r.add(z), a.add(k), (F = i), (z = r), (k = a);
                      }
                      if ((u = _(this, q, l, e, F, z, k, g))) {
                        if (B && B[X]) {
                          var et = B[X];
                          f.copy(et[0]),
                            p.copy(et[1]),
                            m.copy(et[2]),
                            (u.uv = w.getUV(g, F, z, k, f, p, m, new c.a()));
                        }
                        (u.face = Y), (u.faceIndex = X), h.push(u);
                      }
                    }
                  }
                }
            };
          })(),
          clone: function() {
            return new this.constructor(this.geometry, this.material).copy(
              this
            );
          }
        }));
    },
    function(t, e) {
      var n;
      n = (function() {
        return this;
      })();
      try {
        n = n || new Function("return this")();
      } catch (t) {
        "object" == typeof window && (n = window);
      }
      t.exports = n;
    },
    function(t, e, n) {
      "use strict";
      t.exports = function(t, e) {
        return function() {
          for (var n = new Array(arguments.length), i = 0; i < n.length; i++)
            n[i] = arguments[i];
          return t.apply(e, n);
        };
      };
    },
    function(t, e, n) {
      "use strict";
      var i = n(17),
        r = n(63),
        a = n(65),
        o = n(66),
        s = n(67),
        l = n(37),
        c =
          ("undefined" != typeof window &&
            window.btoa &&
            window.btoa.bind(window)) ||
          n(68);
      t.exports = function(t) {
        return new Promise(function(e, h) {
          var u = t.data,
            d = t.headers;
          i.isFormData(u) && delete d["Content-Type"];
          var f = new XMLHttpRequest(),
            p = "onreadystatechange",
            m = !1;
          if (
            ("undefined" == typeof window ||
              !window.XDomainRequest ||
              "withCredentials" in f ||
              s(t.url) ||
              ((f = new window.XDomainRequest()),
              (p = "onload"),
              (m = !0),
              (f.onprogress = function() {}),
              (f.ontimeout = function() {})),
            t.auth)
          ) {
            var g = t.auth.username || "",
              v = t.auth.password || "";
            d.Authorization = "Basic " + c(g + ":" + v);
          }
          if (
            (f.open(
              t.method.toUpperCase(),
              a(t.url, t.params, t.paramsSerializer),
              !0
            ),
            (f.timeout = t.timeout),
            (f[p] = function() {
              if (
                f &&
                (4 === f.readyState || m) &&
                (0 !== f.status ||
                  (f.responseURL && 0 === f.responseURL.indexOf("file:")))
              ) {
                var n =
                    "getAllResponseHeaders" in f
                      ? o(f.getAllResponseHeaders())
                      : null,
                  i = {
                    data:
                      t.responseType && "text" !== t.responseType
                        ? f.response
                        : f.responseText,
                    status: 1223 === f.status ? 204 : f.status,
                    statusText: 1223 === f.status ? "No Content" : f.statusText,
                    headers: n,
                    config: t,
                    request: f
                  };
                r(e, h, i), (f = null);
              }
            }),
            (f.onerror = function() {
              h(l("Network Error", t, null, f)), (f = null);
            }),
            (f.ontimeout = function() {
              h(
                l(
                  "timeout of " + t.timeout + "ms exceeded",
                  t,
                  "ECONNABORTED",
                  f
                )
              ),
                (f = null);
            }),
            i.isStandardBrowserEnv())
          ) {
            var _ = n(69),
              y =
                (t.withCredentials || s(t.url)) && t.xsrfCookieName
                  ? _.read(t.xsrfCookieName)
                  : void 0;
            y && (d[t.xsrfHeaderName] = y);
          }
          if (
            ("setRequestHeader" in f &&
              i.forEach(d, function(t, e) {
                void 0 === u && "content-type" === e.toLowerCase()
                  ? delete d[e]
                  : f.setRequestHeader(e, t);
              }),
            t.withCredentials && (f.withCredentials = !0),
            t.responseType)
          )
            try {
              f.responseType = t.responseType;
            } catch (e) {
              if ("json" !== t.responseType) throw e;
            }
          "function" == typeof t.onDownloadProgress &&
            f.addEventListener("progress", t.onDownloadProgress),
            "function" == typeof t.onUploadProgress &&
              f.upload &&
              f.upload.addEventListener("progress", t.onUploadProgress),
            t.cancelToken &&
              t.cancelToken.promise.then(function(t) {
                f && (f.abort(), h(t), (f = null));
              }),
            void 0 === u && (u = null),
            f.send(u);
        });
      };
    },
    function(t, e, n) {
      "use strict";
      var i = n(64);
      t.exports = function(t, e, n, r, a) {
        var o = new Error(t);
        return i(o, e, n, r, a);
      };
    },
    function(t, e, n) {
      "use strict";
      t.exports = function(t) {
        return !(!t || !t.__CANCEL__);
      };
    },
    function(t, e, n) {
      "use strict";
      function i(t) {
        this.message = t;
      }
      (i.prototype.toString = function() {
        return "Cancel" + (this.message ? ": " + this.message : "");
      }),
        (i.prototype.__CANCEL__ = !0),
        (t.exports = i);
    },
    function(t, e) {
      function n() {}
      (n.prototype = {
        on: function(t, e, n) {
          var i = this.e || (this.e = {});
          return (i[t] || (i[t] = [])).push({ fn: e, ctx: n }), this;
        },
        once: function(t, e, n) {
          var i = this;
          function r() {
            i.off(t, r), e.apply(n, arguments);
          }
          return (r._ = e), this.on(t, r, n);
        },
        emit: function(t) {
          for (
            var e = [].slice.call(arguments, 1),
              n = ((this.e || (this.e = {}))[t] || []).slice(),
              i = 0,
              r = n.length;
            i < r;
            i++
          )
            n[i].fn.apply(n[i].ctx, e);
          return this;
        },
        off: function(t, e) {
          var n = this.e || (this.e = {}),
            i = n[t],
            r = [];
          if (i && e)
            for (var a = 0, o = i.length; a < o; a++)
              i[a].fn !== e && i[a].fn._ !== e && r.push(i[a]);
          return r.length ? (n[t] = r) : delete n[t], this;
        }
      }),
        (t.exports = n);
    },
    function(t, e, n) {
      (function(e) {
        var n = "Expected a function",
          i = NaN,
          r = "[object Symbol]",
          a = /^\s+|\s+$/g,
          o = /^[-+]0x[0-9a-f]+$/i,
          s = /^0b[01]+$/i,
          l = /^0o[0-7]+$/i,
          c = parseInt,
          h = "object" == typeof e && e && e.Object === Object && e,
          u = "object" == typeof self && self && self.Object === Object && self,
          d = h || u || Function("return this")(),
          f = Object.prototype.toString,
          p = Math.max,
          m = Math.min,
          g = function() {
            return d.Date.now();
          };
        function v(t, e, i) {
          var r,
            a,
            o,
            s,
            l,
            c,
            h = 0,
            u = !1,
            d = !1,
            f = !0;
          if ("function" != typeof t) throw new TypeError(n);
          function v(e) {
            var n = r,
              i = a;
            return (r = a = void 0), (h = e), (s = t.apply(i, n));
          }
          function x(t) {
            var n = t - c;
            return void 0 === c || n >= e || n < 0 || (d && t - h >= o);
          }
          function b() {
            var t = g();
            if (x(t)) return w(t);
            l = setTimeout(
              b,
              (function(t) {
                var n = e - (t - c);
                return d ? m(n, o - (t - h)) : n;
              })(t)
            );
          }
          function w(t) {
            return (l = void 0), f && r ? v(t) : ((r = a = void 0), s);
          }
          function T() {
            var t = g(),
              n = x(t);
            if (((r = arguments), (a = this), (c = t), n)) {
              if (void 0 === l)
                return (function(t) {
                  return (h = t), (l = setTimeout(b, e)), u ? v(t) : s;
                })(c);
              if (d) return (l = setTimeout(b, e)), v(c);
            }
            return void 0 === l && (l = setTimeout(b, e)), s;
          }
          return (
            (e = y(e) || 0),
            _(i) &&
              ((u = !!i.leading),
              (o = (d = "maxWait" in i) ? p(y(i.maxWait) || 0, e) : o),
              (f = "trailing" in i ? !!i.trailing : f)),
            (T.cancel = function() {
              void 0 !== l && clearTimeout(l),
                (h = 0),
                (r = c = a = l = void 0);
            }),
            (T.flush = function() {
              return void 0 === l ? s : w(g());
            }),
            T
          );
        }
        function _(t) {
          var e = typeof t;
          return !!t && ("object" == e || "function" == e);
        }
        function y(t) {
          if ("number" == typeof t) return t;
          if (
            (function(t) {
              return (
                "symbol" == typeof t ||
                ((function(t) {
                  return !!t && "object" == typeof t;
                })(t) &&
                  f.call(t) == r)
              );
            })(t)
          )
            return i;
          if (_(t)) {
            var e = "function" == typeof t.valueOf ? t.valueOf() : t;
            t = _(e) ? e + "" : e;
          }
          if ("string" != typeof t) return 0 === t ? t : +t;
          t = t.replace(a, "");
          var n = s.test(t);
          return n || l.test(t) ? c(t.slice(2), n ? 2 : 8) : o.test(t) ? i : +t;
        }
        t.exports = function(t, e, i) {
          var r = !0,
            a = !0;
          if ("function" != typeof t) throw new TypeError(n);
          return (
            _(i) &&
              ((r = "leading" in i ? !!i.leading : r),
              (a = "trailing" in i ? !!i.trailing : a)),
            v(t, e, { leading: r, maxWait: e, trailing: a })
          );
        };
      }.call(this, n(34)));
    },
    function(t, e, n) {
      "use strict";
      n.d(e, "a", function() {
        return s;
      });
      var i = n(24),
        r = n(20),
        a = n(7);
      function o(t, e, n, r) {
        i.a.call(this),
          (this.type = "PlaneGeometry"),
          (this.parameters = {
            width: t,
            height: e,
            widthSegments: n,
            heightSegments: r
          }),
          this.fromBufferGeometry(new s(t, e, n, r)),
          this.mergeVertices();
      }
      function s(t, e, n, i) {
        r.a.call(this),
          (this.type = "PlaneBufferGeometry"),
          (this.parameters = {
            width: t,
            height: e,
            widthSegments: n,
            heightSegments: i
          });
        var o,
          s,
          l = (t = t || 1) / 2,
          c = (e = e || 1) / 2,
          h = Math.floor(n) || 1,
          u = Math.floor(i) || 1,
          d = h + 1,
          f = u + 1,
          p = t / h,
          m = e / u,
          g = [],
          v = [],
          _ = [],
          y = [];
        for (s = 0; s < f; s++) {
          var x = s * m - c;
          for (o = 0; o < d; o++) {
            var b = o * p - l;
            v.push(b, -x, 0), _.push(0, 0, 1), y.push(o / h), y.push(1 - s / u);
          }
        }
        for (s = 0; s < u; s++)
          for (o = 0; o < h; o++) {
            var w = o + d * s,
              T = o + d * (s + 1),
              M = o + 1 + d * (s + 1),
              E = o + 1 + d * s;
            g.push(w, T, E), g.push(T, M, E);
          }
        this.setIndex(g),
          this.addAttribute("position", new a.b(v, 3)),
          this.addAttribute("normal", new a.b(_, 3)),
          this.addAttribute("uv", new a.b(y, 2));
      }
      (o.prototype = Object.create(i.a.prototype)),
        (o.prototype.constructor = o),
        (s.prototype = Object.create(r.a.prototype)),
        (s.prototype.constructor = s);
    },
    function(t, e, n) {
      t.exports = n(58);
    },
    ,
    ,
    ,
    function(t, e) {
      !(function(t, e) {
        "use strict";
        if (
          "IntersectionObserver" in t &&
          "IntersectionObserverEntry" in t &&
          "intersectionRatio" in t.IntersectionObserverEntry.prototype
        )
          "isIntersecting" in t.IntersectionObserverEntry.prototype ||
            Object.defineProperty(
              t.IntersectionObserverEntry.prototype,
              "isIntersecting",
              {
                get: function() {
                  return this.intersectionRatio > 0;
                }
              }
            );
        else {
          var n = [];
          (r.prototype.THROTTLE_TIMEOUT = 100),
            (r.prototype.POLL_INTERVAL = null),
            (r.prototype.USE_MUTATION_OBSERVER = !0),
            (r.prototype.observe = function(t) {
              if (
                !this._observationTargets.some(function(e) {
                  return e.element == t;
                })
              ) {
                if (!t || 1 != t.nodeType)
                  throw new Error("target must be an Element");
                this._registerInstance(),
                  this._observationTargets.push({ element: t, entry: null }),
                  this._monitorIntersections(),
                  this._checkForIntersections();
              }
            }),
            (r.prototype.unobserve = function(t) {
              (this._observationTargets = this._observationTargets.filter(
                function(e) {
                  return e.element != t;
                }
              )),
                this._observationTargets.length ||
                  (this._unmonitorIntersections(), this._unregisterInstance());
            }),
            (r.prototype.disconnect = function() {
              (this._observationTargets = []),
                this._unmonitorIntersections(),
                this._unregisterInstance();
            }),
            (r.prototype.takeRecords = function() {
              var t = this._queuedEntries.slice();
              return (this._queuedEntries = []), t;
            }),
            (r.prototype._initThresholds = function(t) {
              var e = t || [0];
              return (
                Array.isArray(e) || (e = [e]),
                e.sort().filter(function(t, e, n) {
                  if ("number" != typeof t || isNaN(t) || t < 0 || t > 1)
                    throw new Error(
                      "threshold must be a number between 0 and 1 inclusively"
                    );
                  return t !== n[e - 1];
                })
              );
            }),
            (r.prototype._parseRootMargin = function(t) {
              var e = (t || "0px").split(/\s+/).map(function(t) {
                var e = /^(-?\d*\.?\d+)(px|%)$/.exec(t);
                if (!e)
                  throw new Error(
                    "rootMargin must be specified in pixels or percent"
                  );
                return { value: parseFloat(e[1]), unit: e[2] };
              });
              return (
                (e[1] = e[1] || e[0]),
                (e[2] = e[2] || e[0]),
                (e[3] = e[3] || e[1]),
                e
              );
            }),
            (r.prototype._monitorIntersections = function() {
              this._monitoringIntersections ||
                ((this._monitoringIntersections = !0),
                this.POLL_INTERVAL
                  ? (this._monitoringInterval = setInterval(
                      this._checkForIntersections,
                      this.POLL_INTERVAL
                    ))
                  : (a(t, "resize", this._checkForIntersections, !0),
                    a(e, "scroll", this._checkForIntersections, !0),
                    this.USE_MUTATION_OBSERVER &&
                      "MutationObserver" in t &&
                      ((this._domObserver = new MutationObserver(
                        this._checkForIntersections
                      )),
                      this._domObserver.observe(e, {
                        attributes: !0,
                        childList: !0,
                        characterData: !0,
                        subtree: !0
                      }))));
            }),
            (r.prototype._unmonitorIntersections = function() {
              this._monitoringIntersections &&
                ((this._monitoringIntersections = !1),
                clearInterval(this._monitoringInterval),
                (this._monitoringInterval = null),
                o(t, "resize", this._checkForIntersections, !0),
                o(e, "scroll", this._checkForIntersections, !0),
                this._domObserver &&
                  (this._domObserver.disconnect(), (this._domObserver = null)));
            }),
            (r.prototype._checkForIntersections = function() {
              var e = this._rootIsInDom(),
                n = e
                  ? this._getRootRect()
                  : {
                      top: 0,
                      bottom: 0,
                      left: 0,
                      right: 0,
                      width: 0,
                      height: 0
                    };
              this._observationTargets.forEach(function(r) {
                var a = r.element,
                  o = s(a),
                  l = this._rootContainsTarget(a),
                  c = r.entry,
                  h = e && l && this._computeTargetAndRootIntersection(a, n),
                  u = (r.entry = new i({
                    time: t.performance && performance.now && performance.now(),
                    target: a,
                    boundingClientRect: o,
                    rootBounds: n,
                    intersectionRect: h
                  }));
                c
                  ? e && l
                    ? this._hasCrossedThreshold(c, u) &&
                      this._queuedEntries.push(u)
                    : c && c.isIntersecting && this._queuedEntries.push(u)
                  : this._queuedEntries.push(u);
              }, this),
                this._queuedEntries.length &&
                  this._callback(this.takeRecords(), this);
            }),
            (r.prototype._computeTargetAndRootIntersection = function(n, i) {
              if ("none" != t.getComputedStyle(n).display) {
                for (
                  var r, a, o, l, h, u, d, f, p = s(n), m = c(n), g = !1;
                  !g;

                ) {
                  var v = null,
                    _ = 1 == m.nodeType ? t.getComputedStyle(m) : {};
                  if ("none" == _.display) return;
                  if (
                    (m == this.root || m == e
                      ? ((g = !0), (v = i))
                      : m != e.body &&
                        m != e.documentElement &&
                        "visible" != _.overflow &&
                        (v = s(m)),
                    v &&
                      ((r = v),
                      (a = p),
                      (o = void 0),
                      (l = void 0),
                      (h = void 0),
                      (u = void 0),
                      (d = void 0),
                      (f = void 0),
                      (o = Math.max(r.top, a.top)),
                      (l = Math.min(r.bottom, a.bottom)),
                      (h = Math.max(r.left, a.left)),
                      (u = Math.min(r.right, a.right)),
                      (f = l - o),
                      !(p = (d = u - h) >= 0 &&
                        f >= 0 && {
                          top: o,
                          bottom: l,
                          left: h,
                          right: u,
                          width: d,
                          height: f
                        })))
                  )
                    break;
                  m = c(m);
                }
                return p;
              }
            }),
            (r.prototype._getRootRect = function() {
              var t;
              if (this.root) t = s(this.root);
              else {
                var n = e.documentElement,
                  i = e.body;
                t = {
                  top: 0,
                  left: 0,
                  right: n.clientWidth || i.clientWidth,
                  width: n.clientWidth || i.clientWidth,
                  bottom: n.clientHeight || i.clientHeight,
                  height: n.clientHeight || i.clientHeight
                };
              }
              return this._expandRectByRootMargin(t);
            }),
            (r.prototype._expandRectByRootMargin = function(t) {
              var e = this._rootMarginValues.map(function(e, n) {
                  return "px" == e.unit
                    ? e.value
                    : e.value * (n % 2 ? t.width : t.height) / 100;
                }),
                n = {
                  top: t.top - e[0],
                  right: t.right + e[1],
                  bottom: t.bottom + e[2],
                  left: t.left - e[3]
                };
              return (
                (n.width = n.right - n.left), (n.height = n.bottom - n.top), n
              );
            }),
            (r.prototype._hasCrossedThreshold = function(t, e) {
              var n = t && t.isIntersecting ? t.intersectionRatio || 0 : -1,
                i = e.isIntersecting ? e.intersectionRatio || 0 : -1;
              if (n !== i)
                for (var r = 0; r < this.thresholds.length; r++) {
                  var a = this.thresholds[r];
                  if (a == n || a == i || a < n != a < i) return !0;
                }
            }),
            (r.prototype._rootIsInDom = function() {
              return !this.root || l(e, this.root);
            }),
            (r.prototype._rootContainsTarget = function(t) {
              return l(this.root || e, t);
            }),
            (r.prototype._registerInstance = function() {
              n.indexOf(this) < 0 && n.push(this);
            }),
            (r.prototype._unregisterInstance = function() {
              var t = n.indexOf(this);
              -1 != t && n.splice(t, 1);
            }),
            (t.IntersectionObserver = r),
            (t.IntersectionObserverEntry = i);
        }
        function i(t) {
          (this.time = t.time),
            (this.target = t.target),
            (this.rootBounds = t.rootBounds),
            (this.boundingClientRect = t.boundingClientRect),
            (this.intersectionRect = t.intersectionRect || {
              top: 0,
              bottom: 0,
              left: 0,
              right: 0,
              width: 0,
              height: 0
            }),
            (this.isIntersecting = !!t.intersectionRect);
          var e = this.boundingClientRect,
            n = e.width * e.height,
            i = this.intersectionRect,
            r = i.width * i.height;
          this.intersectionRatio = n
            ? Number((r / n).toFixed(4))
            : this.isIntersecting ? 1 : 0;
        }
        function r(t, e) {
          var n,
            i,
            r,
            a = e || {};
          if ("function" != typeof t)
            throw new Error("callback must be a function");
          if (a.root && 1 != a.root.nodeType)
            throw new Error("root must be an Element");
          (this._checkForIntersections = ((n = this._checkForIntersections.bind(
            this
          )),
          (i = this.THROTTLE_TIMEOUT),
          (r = null),
          function() {
            r ||
              (r = setTimeout(function() {
                n(), (r = null);
              }, i));
          })),
            (this._callback = t),
            (this._observationTargets = []),
            (this._queuedEntries = []),
            (this._rootMarginValues = this._parseRootMargin(a.rootMargin)),
            (this.thresholds = this._initThresholds(a.threshold)),
            (this.root = a.root || null),
            (this.rootMargin = this._rootMarginValues
              .map(function(t) {
                return t.value + t.unit;
              })
              .join(" "));
        }
        function a(t, e, n, i) {
          "function" == typeof t.addEventListener
            ? t.addEventListener(e, n, i || !1)
            : "function" == typeof t.attachEvent && t.attachEvent("on" + e, n);
        }
        function o(t, e, n, i) {
          "function" == typeof t.removeEventListener
            ? t.removeEventListener(e, n, i || !1)
            : "function" == typeof t.detatchEvent &&
              t.detatchEvent("on" + e, n);
        }
        function s(t) {
          var e;
          try {
            e = t.getBoundingClientRect();
          } catch (t) {}
          return e
            ? ((e.width && e.height) ||
                (e = {
                  top: e.top,
                  right: e.right,
                  bottom: e.bottom,
                  left: e.left,
                  width: e.right - e.left,
                  height: e.bottom - e.top
                }),
              e)
            : { top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0 };
        }
        function l(t, e) {
          for (var n = e; n; ) {
            if (n == t) return !0;
            n = c(n);
          }
          return !1;
        }
        function c(t) {
          var e = t.parentNode;
          return e && 11 == e.nodeType && e.host ? e.host : e;
        }
      })(window, document);
    },
    function(t, e, n) {
      "use strict";
      /*!
 * dashify <https://github.com/jonschlinkert/dashify>
 *
 * Copyright (c) 2015 Jon Schlinkert.
 * Licensed under the MIT license.
 */ t.exports = function(
        t
      ) {
        if ("string" != typeof t) throw new TypeError("expected a string");
        return (t = (t = (t = t.replace(/([a-z])([A-Z])/g, "$1-$2")).replace(
          /[ \t\W]/g,
          "-"
        )).replace(/^-+|-+$/g, "")).toLowerCase();
      };
    },
    function(t, e) {
      t.exports = function(t) {
        if (!t.webpackPolyfill) {
          var e = Object.create(t);
          e.children || (e.children = []),
            Object.defineProperty(e, "loaded", {
              enumerable: !0,
              get: function() {
                return e.l;
              }
            }),
            Object.defineProperty(e, "id", {
              enumerable: !0,
              get: function() {
                return e.i;
              }
            }),
            Object.defineProperty(e, "exports", { enumerable: !0 }),
            (e.webpackPolyfill = 1);
        }
        return e;
      };
    },
    function(t, e, n) {
      var i, r;
      "undefined" != typeof window && window,
        void 0 ===
          (r =
            "function" ==
            typeof (i = function() {
              "use strict";
              function t() {}
              var e = t.prototype;
              return (
                (e.on = function(t, e) {
                  if (t && e) {
                    var n = (this._events = this._events || {}),
                      i = (n[t] = n[t] || []);
                    return -1 == i.indexOf(e) && i.push(e), this;
                  }
                }),
                (e.once = function(t, e) {
                  if (t && e) {
                    this.on(t, e);
                    var n = (this._onceEvents = this._onceEvents || {});
                    return ((n[t] = n[t] || {})[e] = !0), this;
                  }
                }),
                (e.off = function(t, e) {
                  var n = this._events && this._events[t];
                  if (n && n.length) {
                    var i = n.indexOf(e);
                    return -1 != i && n.splice(i, 1), this;
                  }
                }),
                (e.emitEvent = function(t, e) {
                  var n = this._events && this._events[t];
                  if (n && n.length) {
                    (n = n.slice(0)), (e = e || []);
                    for (
                      var i = this._onceEvents && this._onceEvents[t], r = 0;
                      r < n.length;
                      r++
                    ) {
                      var a = n[r];
                      i && i[a] && (this.off(t, a), delete i[a]),
                        a.apply(this, e);
                    }
                    return this;
                  }
                }),
                (e.allOff = function() {
                  delete this._events, delete this._onceEvents;
                }),
                t
              );
            })
              ? i.call(e, n, e, t)
              : i) || (t.exports = r);
    },
    function(t, e, n) {
      "use strict";
      /*
object-assign
(c) Sindre Sorhus
@license MIT
*/ var i =
          Object.getOwnPropertySymbols,
        r = Object.prototype.hasOwnProperty,
        a = Object.prototype.propertyIsEnumerable;
      t.exports = (function() {
        try {
          if (!Object.assign) return !1;
          var t = new String("abc");
          if (((t[5] = "de"), "5" === Object.getOwnPropertyNames(t)[0]))
            return !1;
          for (var e = {}, n = 0; n < 10; n++)
            e["_" + String.fromCharCode(n)] = n;
          if (
            "0123456789" !==
            Object.getOwnPropertyNames(e)
              .map(function(t) {
                return e[t];
              })
              .join("")
          )
            return !1;
          var i = {};
          return (
            "abcdefghijklmnopqrst".split("").forEach(function(t) {
              i[t] = t;
            }),
            "abcdefghijklmnopqrst" ===
              Object.keys(Object.assign({}, i)).join("")
          );
        } catch (t) {
          return !1;
        }
      })()
        ? Object.assign
        : function(t, e) {
            for (
              var n,
                o,
                s = (function(t) {
                  if (null == t)
                    throw new TypeError(
                      "Object.assign cannot be called with null or undefined"
                    );
                  return Object(t);
                })(t),
                l = 1;
              l < arguments.length;
              l++
            ) {
              for (var c in (n = Object(arguments[l])))
                r.call(n, c) && (s[c] = n[c]);
              if (i) {
                o = i(n);
                for (var h = 0; h < o.length; h++)
                  a.call(n, o[h]) && (s[o[h]] = n[o[h]]);
              }
            }
            return s;
          };
    },
    function(t, e) {
      function n() {}
      (n.prototype = {
        on: function(t, e, n) {
          var i = this.e || (this.e = {});
          return (i[t] || (i[t] = [])).push({ fn: e, ctx: n }), this;
        },
        once: function(t, e, n) {
          var i = this;
          function r() {
            i.off(t, r), e.apply(n, arguments);
          }
          return (r._ = e), this.on(t, r, n);
        },
        emit: function(t) {
          for (
            var e = [].slice.call(arguments, 1),
              n = ((this.e || (this.e = {}))[t] || []).slice(),
              i = 0,
              r = n.length;
            i < r;
            i++
          )
            n[i].fn.apply(n[i].ctx, e);
          return this;
        },
        off: function(t, e) {
          var n = this.e || (this.e = {}),
            i = n[t],
            r = [];
          if (i && e)
            for (var a = 0, o = i.length; a < o; a++)
              i[a].fn !== e && i[a].fn._ !== e && r.push(i[a]);
          return r.length ? (n[t] = r) : delete n[t], this;
        }
      }),
        (t.exports = n);
    },
    function(t, e, n) {
      (function() {
        (null !== e ? e : this).Lethargy = (function() {
          function t(t, e, n, i) {
            (this.stability = null != t ? Math.abs(t) : 8),
              (this.sensitivity = null != e ? 1 + Math.abs(e) : 100),
              (this.tolerance = null != n ? 1 + Math.abs(n) : 1.1),
              (this.delay = null != i ? i : 150),
              (this.lastUpDeltas = function() {
                var t, e, n;
                for (
                  n = [], t = 1, e = 2 * this.stability;
                  1 <= e ? t <= e : t >= e;
                  1 <= e ? t++ : t--
                )
                  n.push(null);
                return n;
              }.call(this)),
              (this.lastDownDeltas = function() {
                var t, e, n;
                for (
                  n = [], t = 1, e = 2 * this.stability;
                  1 <= e ? t <= e : t >= e;
                  1 <= e ? t++ : t--
                )
                  n.push(null);
                return n;
              }.call(this)),
              (this.deltasTimestamp = function() {
                var t, e, n;
                for (
                  n = [], t = 1, e = 2 * this.stability;
                  1 <= e ? t <= e : t >= e;
                  1 <= e ? t++ : t--
                )
                  n.push(null);
                return n;
              }.call(this));
          }
          return (
            (t.prototype.check = function(t) {
              var e;
              return (
                null != (t = t.originalEvent || t).wheelDelta
                  ? (e = t.wheelDelta)
                  : null != t.deltaY
                    ? (e = -40 * t.deltaY)
                    : (null == t.detail && 0 !== t.detail) ||
                      (e = -40 * t.detail),
                this.deltasTimestamp.push(Date.now()),
                this.deltasTimestamp.shift(),
                e > 0
                  ? (this.lastUpDeltas.push(e),
                    this.lastUpDeltas.shift(),
                    this.isInertia(1))
                  : (this.lastDownDeltas.push(e),
                    this.lastDownDeltas.shift(),
                    this.isInertia(-1))
              );
            }),
            (t.prototype.isInertia = function(t) {
              var e, n, i, r, a, o, s;
              return null ===
                (e = -1 === t ? this.lastDownDeltas : this.lastUpDeltas)[0]
                ? t
                : !(
                    this.deltasTimestamp[2 * this.stability - 2] + this.delay >
                      Date.now() && e[0] === e[2 * this.stability - 1]
                  ) &&
                    ((i = e.slice(0, this.stability)),
                    (n = e.slice(this.stability, 2 * this.stability)),
                    (s = i.reduce(function(t, e) {
                      return t + e;
                    })),
                    (a = n.reduce(function(t, e) {
                      return t + e;
                    })),
                    (o = s / i.length),
                    (r = a / n.length),
                    Math.abs(o) < Math.abs(r * this.tolerance) &&
                      this.sensitivity < Math.abs(r) &&
                      t);
            }),
            (t.prototype.showLastUpDeltas = function() {
              return this.lastUpDeltas;
            }),
            (t.prototype.showLastDownDeltas = function() {
              return this.lastDownDeltas;
            }),
            t
          );
        })();
      }.call(this));
    },
    function(t, e, n) {
      "use strict";
      t.exports = {
        hasWheelEvent: "onwheel" in document,
        hasMouseWheelEvent: "onmousewheel" in document,
        hasTouch: "ontouchstart" in document,
        hasTouchWin:
          navigator.msMaxTouchPoints && navigator.msMaxTouchPoints > 1,
        hasPointer: !!window.navigator.msPointerEnabled,
        hasKeyDown: "onkeydown" in document,
        isFirefox: navigator.userAgent.indexOf("Firefox") > -1
      };
    },
    function(t, e, n) {
      "use strict";
      t.exports = function(t) {
        return JSON.parse(JSON.stringify(t));
      };
    },
    function(t, e, n) {
      "use strict";
      var i = Object.prototype.toString,
        r = Object.prototype.hasOwnProperty;
      function a(t, e) {
        return function() {
          return t.apply(e, arguments);
        };
      }
      t.exports = function(t) {
        if (!t) return console.warn("bindAll requires at least one argument.");
        var e = Array.prototype.slice.call(arguments, 1);
        if (0 === e.length)
          for (var n in t)
            r.call(t, n) &&
              "function" == typeof t[n] &&
              "[object Function]" == i.call(t[n]) &&
              e.push(n);
        for (var o = 0; o < e.length; o++) {
          var s = e[o];
          t[s] = a(t[s], t);
        }
      };
    },
    function(t, e, n) {
      /*!
 * PEP v0.4.3 | https://github.com/jquery/PEP
 * Copyright jQuery Foundation and other contributors | http://jquery.org/license
 */
      t.exports = (function() {
        "use strict";
        var t = [
            "bubbles",
            "cancelable",
            "view",
            "detail",
            "screenX",
            "screenY",
            "clientX",
            "clientY",
            "ctrlKey",
            "altKey",
            "shiftKey",
            "metaKey",
            "button",
            "relatedTarget",
            "pageX",
            "pageY"
          ],
          e = [!1, !1, null, null, 0, 0, 0, 0, !1, !1, !1, !1, 0, null, 0, 0];
        function n(n, i) {
          i = i || Object.create(null);
          var r = document.createEvent("Event");
          r.initEvent(n, i.bubbles || !1, i.cancelable || !1);
          for (var a, o = 2; o < t.length; o++)
            (a = t[o]), (r[a] = i[a] || e[o]);
          r.buttons = i.buttons || 0;
          var s = 0;
          return (
            (s = i.pressure && r.buttons ? i.pressure : r.buttons ? 0.5 : 0),
            (r.x = r.clientX),
            (r.y = r.clientY),
            (r.pointerId = i.pointerId || 0),
            (r.width = i.width || 0),
            (r.height = i.height || 0),
            (r.pressure = s),
            (r.tiltX = i.tiltX || 0),
            (r.tiltY = i.tiltY || 0),
            (r.twist = i.twist || 0),
            (r.tangentialPressure = i.tangentialPressure || 0),
            (r.pointerType = i.pointerType || ""),
            (r.hwTimestamp = i.hwTimestamp || 0),
            (r.isPrimary = i.isPrimary || !1),
            r
          );
        }
        var i = window.Map && window.Map.prototype.forEach ? Map : r;
        function r() {
          (this.array = []), (this.size = 0);
        }
        r.prototype = {
          set: function(t, e) {
            if (void 0 === e) return this.delete(t);
            this.has(t) || this.size++, (this.array[t] = e);
          },
          has: function(t) {
            return void 0 !== this.array[t];
          },
          delete: function(t) {
            this.has(t) && (delete this.array[t], this.size--);
          },
          get: function(t) {
            return this.array[t];
          },
          clear: function() {
            (this.array.length = 0), (this.size = 0);
          },
          forEach: function(t, e) {
            return this.array.forEach(function(n, i) {
              t.call(e, n, i, this);
            }, this);
          }
        };
        var a = [
            "bubbles",
            "cancelable",
            "view",
            "detail",
            "screenX",
            "screenY",
            "clientX",
            "clientY",
            "ctrlKey",
            "altKey",
            "shiftKey",
            "metaKey",
            "button",
            "relatedTarget",
            "buttons",
            "pointerId",
            "width",
            "height",
            "pressure",
            "tiltX",
            "tiltY",
            "pointerType",
            "hwTimestamp",
            "isPrimary",
            "type",
            "target",
            "currentTarget",
            "which",
            "pageX",
            "pageY",
            "timeStamp"
          ],
          o = [
            !1,
            !1,
            null,
            null,
            0,
            0,
            0,
            0,
            !1,
            !1,
            !1,
            !1,
            0,
            null,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            "",
            0,
            !1,
            "",
            null,
            null,
            0,
            0,
            0,
            0
          ],
          s = {
            pointerover: 1,
            pointerout: 1,
            pointerenter: 1,
            pointerleave: 1
          },
          l = "undefined" != typeof SVGElementInstance,
          c = {
            pointermap: new i(),
            eventMap: Object.create(null),
            captureInfo: Object.create(null),
            eventSources: Object.create(null),
            eventSourceList: [],
            registerSource: function(t, e) {
              var n = e,
                i = n.events;
              i &&
                (i.forEach(function(t) {
                  n[t] && (this.eventMap[t] = n[t].bind(n));
                }, this),
                (this.eventSources[t] = n),
                this.eventSourceList.push(n));
            },
            register: function(t) {
              for (
                var e, n = this.eventSourceList.length, i = 0;
                i < n && (e = this.eventSourceList[i]);
                i++
              )
                e.register.call(e, t);
            },
            unregister: function(t) {
              for (
                var e, n = this.eventSourceList.length, i = 0;
                i < n && (e = this.eventSourceList[i]);
                i++
              )
                e.unregister.call(e, t);
            },
            contains: function(t, e) {
              try {
                return t.contains(e);
              } catch (t) {
                return !1;
              }
            },
            down: function(t) {
              (t.bubbles = !0), this.fireEvent("pointerdown", t);
            },
            move: function(t) {
              (t.bubbles = !0), this.fireEvent("pointermove", t);
            },
            up: function(t) {
              (t.bubbles = !0), this.fireEvent("pointerup", t);
            },
            enter: function(t) {
              (t.bubbles = !1), this.fireEvent("pointerenter", t);
            },
            leave: function(t) {
              (t.bubbles = !1), this.fireEvent("pointerleave", t);
            },
            over: function(t) {
              (t.bubbles = !0), this.fireEvent("pointerover", t);
            },
            out: function(t) {
              (t.bubbles = !0), this.fireEvent("pointerout", t);
            },
            cancel: function(t) {
              (t.bubbles = !0), this.fireEvent("pointercancel", t);
            },
            leaveOut: function(t) {
              this.out(t), this.propagate(t, this.leave, !1);
            },
            enterOver: function(t) {
              this.over(t), this.propagate(t, this.enter, !0);
            },
            eventHandler: function(t) {
              if (!t._handledByPE) {
                var e = t.type,
                  n = this.eventMap && this.eventMap[e];
                n && n(t), (t._handledByPE = !0);
              }
            },
            listen: function(t, e) {
              e.forEach(function(e) {
                this.addEvent(t, e);
              }, this);
            },
            unlisten: function(t, e) {
              e.forEach(function(e) {
                this.removeEvent(t, e);
              }, this);
            },
            addEvent: function(t, e) {
              t.addEventListener(e, this.boundHandler);
            },
            removeEvent: function(t, e) {
              t.removeEventListener(e, this.boundHandler);
            },
            makeEvent: function(t, e) {
              this.captureInfo[e.pointerId] && (e.relatedTarget = null);
              var i = new n(t, e);
              return (
                e.preventDefault && (i.preventDefault = e.preventDefault),
                (i._target = i._target || e.target),
                i
              );
            },
            fireEvent: function(t, e) {
              var n = this.makeEvent(t, e);
              return this.dispatchEvent(n);
            },
            cloneEvent: function(t) {
              for (var e, n = Object.create(null), i = 0; i < a.length; i++)
                (n[(e = a[i])] = t[e] || o[i]),
                  !l ||
                    ("target" !== e && "relatedTarget" !== e) ||
                    (n[e] instanceof SVGElementInstance &&
                      (n[e] = n[e].correspondingUseElement));
              return (
                t.preventDefault &&
                  (n.preventDefault = function() {
                    t.preventDefault();
                  }),
                n
              );
            },
            getTarget: function(t) {
              var e = this.captureInfo[t.pointerId];
              return e
                ? t._target !== e && t.type in s ? void 0 : e
                : t._target;
            },
            propagate: function(t, e, n) {
              for (
                var i = t.target, r = [];
                i !== document && !i.contains(t.relatedTarget);

              )
                if ((r.push(i), !(i = i.parentNode))) return;
              n && r.reverse(),
                r.forEach(function(n) {
                  (t.target = n), e.call(this, t);
                }, this);
            },
            setCapture: function(t, e, i) {
              this.captureInfo[t] && this.releaseCapture(t, i),
                (this.captureInfo[t] = e),
                (this.implicitRelease = this.releaseCapture.bind(this, t, i)),
                document.addEventListener("pointerup", this.implicitRelease),
                document.addEventListener(
                  "pointercancel",
                  this.implicitRelease
                );
              var r = new n("gotpointercapture");
              (r.pointerId = t),
                (r._target = e),
                i || this.asyncDispatchEvent(r);
            },
            releaseCapture: function(t, e) {
              var i = this.captureInfo[t];
              if (i) {
                (this.captureInfo[t] = void 0),
                  document.removeEventListener(
                    "pointerup",
                    this.implicitRelease
                  ),
                  document.removeEventListener(
                    "pointercancel",
                    this.implicitRelease
                  );
                var r = new n("lostpointercapture");
                (r.pointerId = t),
                  (r._target = i),
                  e || this.asyncDispatchEvent(r);
              }
            },
            dispatchEvent: function(t) {
              var e = this.getTarget(t);
              if (e) return e.dispatchEvent(t);
            },
            asyncDispatchEvent: function(t) {
              requestAnimationFrame(this.dispatchEvent.bind(this, t));
            }
          };
        c.boundHandler = c.eventHandler.bind(c);
        var h = {
            shadow: function(t) {
              if (t) return t.shadowRoot || t.webkitShadowRoot;
            },
            canTarget: function(t) {
              return t && Boolean(t.elementFromPoint);
            },
            targetingShadow: function(t) {
              var e = this.shadow(t);
              if (this.canTarget(e)) return e;
            },
            olderShadow: function(t) {
              var e = t.olderShadowRoot;
              if (!e) {
                var n = t.querySelector("shadow");
                n && (e = n.olderShadowRoot);
              }
              return e;
            },
            allShadows: function(t) {
              for (var e = [], n = this.shadow(t); n; )
                e.push(n), (n = this.olderShadow(n));
              return e;
            },
            searchRoot: function(t, e, n) {
              if (t) {
                var i,
                  r,
                  a = t.elementFromPoint(e, n);
                for (r = this.targetingShadow(a); r; ) {
                  if ((i = r.elementFromPoint(e, n))) {
                    var o = this.targetingShadow(i);
                    return this.searchRoot(o, e, n) || i;
                  }
                  r = this.olderShadow(r);
                }
                return a;
              }
            },
            owner: function(t) {
              for (var e = t; e.parentNode; ) e = e.parentNode;
              return (
                e.nodeType !== Node.DOCUMENT_NODE &&
                  e.nodeType !== Node.DOCUMENT_FRAGMENT_NODE &&
                  (e = document),
                e
              );
            },
            findTarget: function(t) {
              var e = t.clientX,
                n = t.clientY,
                i = this.owner(t.target);
              return (
                i.elementFromPoint(e, n) || (i = document),
                this.searchRoot(i, e, n)
              );
            }
          },
          u = Array.prototype.forEach.call.bind(Array.prototype.forEach),
          d = Array.prototype.map.call.bind(Array.prototype.map),
          f = Array.prototype.slice.call.bind(Array.prototype.slice),
          p = Array.prototype.filter.call.bind(Array.prototype.filter),
          m = window.MutationObserver || window.WebKitMutationObserver,
          g = {
            subtree: !0,
            childList: !0,
            attributes: !0,
            attributeOldValue: !0,
            attributeFilter: ["touch-action"]
          };
        function v(t, e, n, i) {
          (this.addCallback = t.bind(i)),
            (this.removeCallback = e.bind(i)),
            (this.changedCallback = n.bind(i)),
            m && (this.observer = new m(this.mutationWatcher.bind(this)));
        }
        function _(t) {
          return "body /shadow-deep/ " + y(t);
        }
        function y(t) {
          return '[touch-action="' + t + '"]';
        }
        function x(t) {
          return "{ -ms-touch-action: " + t + "; touch-action: " + t + "; }";
        }
        v.prototype = {
          watchSubtree: function(t) {
            this.observer && h.canTarget(t) && this.observer.observe(t, g);
          },
          enableOnSubtree: function(t) {
            this.watchSubtree(t),
              t === document && "complete" !== document.readyState
                ? this.installOnLoad()
                : this.installNewSubtree(t);
          },
          installNewSubtree: function(t) {
            u(this.findElements(t), this.addElement, this);
          },
          findElements: function(t) {
            return t.querySelectorAll
              ? t.querySelectorAll("[touch-action]")
              : [];
          },
          removeElement: function(t) {
            this.removeCallback(t);
          },
          addElement: function(t) {
            this.addCallback(t);
          },
          elementChanged: function(t, e) {
            this.changedCallback(t, e);
          },
          concatLists: function(t, e) {
            return t.concat(f(e));
          },
          installOnLoad: function() {
            document.addEventListener(
              "readystatechange",
              function() {
                "complete" === document.readyState &&
                  this.installNewSubtree(document);
              }.bind(this)
            );
          },
          isElement: function(t) {
            return t.nodeType === Node.ELEMENT_NODE;
          },
          flattenMutationTree: function(t) {
            var e = d(t, this.findElements, this);
            return e.push(p(t, this.isElement)), e.reduce(this.concatLists, []);
          },
          mutationWatcher: function(t) {
            t.forEach(this.mutationHandler, this);
          },
          mutationHandler: function(t) {
            if ("childList" === t.type) {
              var e = this.flattenMutationTree(t.addedNodes);
              e.forEach(this.addElement, this);
              var n = this.flattenMutationTree(t.removedNodes);
              n.forEach(this.removeElement, this);
            } else
              "attributes" === t.type &&
                this.elementChanged(t.target, t.oldValue);
          }
        };
        var b = [
            "none",
            "auto",
            "pan-x",
            "pan-y",
            { rule: "pan-x pan-y", selectors: ["pan-x pan-y", "pan-y pan-x"] }
          ],
          w = "",
          T = window.PointerEvent || window.MSPointerEvent,
          M = !window.ShadowDOMPolyfill && document.head.createShadowRoot,
          E = c.pointermap,
          S = [1, 4, 2, 8, 16],
          L = !1;
        try {
          L = 1 === new MouseEvent("test", { buttons: 1 }).buttons;
        } catch (t) {}
        var P,
          A = {
            POINTER_ID: 1,
            POINTER_TYPE: "mouse",
            events: [
              "mousedown",
              "mousemove",
              "mouseup",
              "mouseover",
              "mouseout"
            ],
            register: function(t) {
              c.listen(t, this.events);
            },
            unregister: function(t) {
              c.unlisten(t, this.events);
            },
            lastTouches: [],
            isEventSimulatedFromTouch: function(t) {
              for (
                var e,
                  n = this.lastTouches,
                  i = t.clientX,
                  r = t.clientY,
                  a = 0,
                  o = n.length;
                a < o && (e = n[a]);
                a++
              ) {
                var s = Math.abs(i - e.x),
                  l = Math.abs(r - e.y);
                if (s <= 25 && l <= 25) return !0;
              }
            },
            prepareEvent: function(t) {
              var e = c.cloneEvent(t),
                n = e.preventDefault;
              return (
                (e.preventDefault = function() {
                  t.preventDefault(), n();
                }),
                (e.pointerId = this.POINTER_ID),
                (e.isPrimary = !0),
                (e.pointerType = this.POINTER_TYPE),
                e
              );
            },
            prepareButtonsForMove: function(t, e) {
              var n = E.get(this.POINTER_ID);
              0 !== e.which && n ? (t.buttons = n.buttons) : (t.buttons = 0),
                (e.buttons = t.buttons);
            },
            mousedown: function(t) {
              if (!this.isEventSimulatedFromTouch(t)) {
                var e = E.get(this.POINTER_ID),
                  n = this.prepareEvent(t);
                L ||
                  ((n.buttons = S[n.button]),
                  e && (n.buttons |= e.buttons),
                  (t.buttons = n.buttons)),
                  E.set(this.POINTER_ID, t),
                  e && 0 !== e.buttons ? c.move(n) : c.down(n);
              }
            },
            mousemove: function(t) {
              if (!this.isEventSimulatedFromTouch(t)) {
                var e = this.prepareEvent(t);
                L || this.prepareButtonsForMove(e, t),
                  (e.button = -1),
                  E.set(this.POINTER_ID, t),
                  c.move(e);
              }
            },
            mouseup: function(t) {
              if (!this.isEventSimulatedFromTouch(t)) {
                var e = E.get(this.POINTER_ID),
                  n = this.prepareEvent(t);
                if (!L) {
                  var i = S[n.button];
                  (n.buttons = e ? e.buttons & ~i : 0), (t.buttons = n.buttons);
                }
                E.set(this.POINTER_ID, t),
                  (n.buttons &= ~S[n.button]),
                  0 === n.buttons ? c.up(n) : c.move(n);
              }
            },
            mouseover: function(t) {
              if (!this.isEventSimulatedFromTouch(t)) {
                var e = this.prepareEvent(t);
                L || this.prepareButtonsForMove(e, t),
                  (e.button = -1),
                  E.set(this.POINTER_ID, t),
                  c.enterOver(e);
              }
            },
            mouseout: function(t) {
              if (!this.isEventSimulatedFromTouch(t)) {
                var e = this.prepareEvent(t);
                L || this.prepareButtonsForMove(e, t),
                  (e.button = -1),
                  c.leaveOut(e);
              }
            },
            cancel: function(t) {
              var e = this.prepareEvent(t);
              c.cancel(e), this.deactivateMouse();
            },
            deactivateMouse: function() {
              E.delete(this.POINTER_ID);
            }
          },
          R = c.captureInfo,
          C = h.findTarget.bind(h),
          D = h.allShadows.bind(h),
          O = c.pointermap,
          I = {
            events: ["touchstart", "touchmove", "touchend", "touchcancel"],
            register: function(t) {
              P.enableOnSubtree(t);
            },
            unregister: function() {},
            elementAdded: function(t) {
              var e = t.getAttribute("touch-action"),
                n = this.touchActionToScrollType(e);
              n &&
                ((t._scrollType = n),
                c.listen(t, this.events),
                D(t).forEach(function(t) {
                  (t._scrollType = n), c.listen(t, this.events);
                }, this));
            },
            elementRemoved: function(t) {
              (t._scrollType = void 0),
                c.unlisten(t, this.events),
                D(t).forEach(function(t) {
                  (t._scrollType = void 0), c.unlisten(t, this.events);
                }, this);
            },
            elementChanged: function(t, e) {
              var n = t.getAttribute("touch-action"),
                i = this.touchActionToScrollType(n),
                r = this.touchActionToScrollType(e);
              i && r
                ? ((t._scrollType = i),
                  D(t).forEach(function(t) {
                    t._scrollType = i;
                  }, this))
                : r ? this.elementRemoved(t) : i && this.elementAdded(t);
            },
            scrollTypes: {
              EMITTER: "none",
              XSCROLLER: "pan-x",
              YSCROLLER: "pan-y",
              SCROLLER: /^(?:pan-x pan-y)|(?:pan-y pan-x)|auto$/
            },
            touchActionToScrollType: function(t) {
              var e = t,
                n = this.scrollTypes;
              return "none" === e
                ? "none"
                : e === n.XSCROLLER
                  ? "X"
                  : e === n.YSCROLLER
                    ? "Y"
                    : n.SCROLLER.exec(e) ? "XY" : void 0;
            },
            POINTER_TYPE: "touch",
            firstTouch: null,
            isPrimaryTouch: function(t) {
              return this.firstTouch === t.identifier;
            },
            setPrimaryTouch: function(t) {
              (0 === O.size || (1 === O.size && O.has(1))) &&
                ((this.firstTouch = t.identifier),
                (this.firstXY = { X: t.clientX, Y: t.clientY }),
                (this.scrolling = !1),
                this.cancelResetClickCount());
            },
            removePrimaryPointer: function(t) {
              t.isPrimary &&
                ((this.firstTouch = null),
                (this.firstXY = null),
                this.resetClickCount());
            },
            clickCount: 0,
            resetId: null,
            resetClickCount: function() {
              var t = function() {
                (this.clickCount = 0), (this.resetId = null);
              }.bind(this);
              this.resetId = setTimeout(t, 200);
            },
            cancelResetClickCount: function() {
              this.resetId && clearTimeout(this.resetId);
            },
            typeToButtons: function(t) {
              var e = 0;
              return ("touchstart" !== t && "touchmove" !== t) || (e = 1), e;
            },
            touchToPointer: function(t) {
              var e = this.currentTouchEvent,
                n = c.cloneEvent(t),
                i = (n.pointerId = t.identifier + 2);
              (n.target = R[i] || C(n)),
                (n.bubbles = !0),
                (n.cancelable = !0),
                (n.detail = this.clickCount),
                (n.button = 0),
                (n.buttons = this.typeToButtons(e.type)),
                (n.width = 2 * (t.radiusX || t.webkitRadiusX || 0)),
                (n.height = 2 * (t.radiusY || t.webkitRadiusY || 0)),
                (n.pressure = t.force || t.webkitForce || 0.5),
                (n.isPrimary = this.isPrimaryTouch(t)),
                (n.pointerType = this.POINTER_TYPE),
                (n.altKey = e.altKey),
                (n.ctrlKey = e.ctrlKey),
                (n.metaKey = e.metaKey),
                (n.shiftKey = e.shiftKey);
              var r = this;
              return (
                (n.preventDefault = function() {
                  (r.scrolling = !1), (r.firstXY = null), e.preventDefault();
                }),
                n
              );
            },
            processTouches: function(t, e) {
              var n = t.changedTouches;
              this.currentTouchEvent = t;
              for (var i, r = 0; r < n.length; r++)
                (i = n[r]), e.call(this, this.touchToPointer(i));
            },
            shouldScroll: function(t) {
              if (this.firstXY) {
                var e,
                  n = t.currentTarget._scrollType;
                if ("none" === n) e = !1;
                else if ("XY" === n) e = !0;
                else {
                  var i = t.changedTouches[0],
                    r = n,
                    a = "Y" === n ? "X" : "Y",
                    o = Math.abs(i["client" + r] - this.firstXY[r]),
                    s = Math.abs(i["client" + a] - this.firstXY[a]);
                  e = o >= s;
                }
                return (this.firstXY = null), e;
              }
            },
            findTouch: function(t, e) {
              for (var n, i = 0, r = t.length; i < r && (n = t[i]); i++)
                if (n.identifier === e) return !0;
            },
            vacuumTouches: function(t) {
              var e = t.touches;
              if (O.size >= e.length) {
                var n = [];
                O.forEach(function(t, i) {
                  if (1 !== i && !this.findTouch(e, i - 2)) {
                    var r = t.out;
                    n.push(r);
                  }
                }, this),
                  n.forEach(this.cancelOut, this);
              }
            },
            touchstart: function(t) {
              this.vacuumTouches(t),
                this.setPrimaryTouch(t.changedTouches[0]),
                this.dedupSynthMouse(t),
                this.scrolling ||
                  (this.clickCount++, this.processTouches(t, this.overDown));
            },
            overDown: function(t) {
              O.set(t.pointerId, {
                target: t.target,
                out: t,
                outTarget: t.target
              }),
                c.enterOver(t),
                c.down(t);
            },
            touchmove: function(t) {
              this.scrolling ||
                (this.shouldScroll(t)
                  ? ((this.scrolling = !0), this.touchcancel(t))
                  : (t.preventDefault(),
                    this.processTouches(t, this.moveOverOut)));
            },
            moveOverOut: function(t) {
              var e = t,
                n = O.get(e.pointerId);
              if (n) {
                var i = n.out,
                  r = n.outTarget;
                c.move(e),
                  i &&
                    r !== e.target &&
                    ((i.relatedTarget = e.target),
                    (e.relatedTarget = r),
                    (i.target = r),
                    e.target
                      ? (c.leaveOut(i), c.enterOver(e))
                      : ((e.target = r),
                        (e.relatedTarget = null),
                        this.cancelOut(e))),
                  (n.out = e),
                  (n.outTarget = e.target);
              }
            },
            touchend: function(t) {
              this.dedupSynthMouse(t), this.processTouches(t, this.upOut);
            },
            upOut: function(t) {
              this.scrolling || (c.up(t), c.leaveOut(t)),
                this.cleanUpPointer(t);
            },
            touchcancel: function(t) {
              this.processTouches(t, this.cancelOut);
            },
            cancelOut: function(t) {
              c.cancel(t), c.leaveOut(t), this.cleanUpPointer(t);
            },
            cleanUpPointer: function(t) {
              O.delete(t.pointerId), this.removePrimaryPointer(t);
            },
            dedupSynthMouse: function(t) {
              var e = A.lastTouches,
                n = t.changedTouches[0];
              if (this.isPrimaryTouch(n)) {
                var i = { x: n.clientX, y: n.clientY };
                e.push(i);
                var r = function(t, e) {
                  var n = t.indexOf(e);
                  n > -1 && t.splice(n, 1);
                }.bind(null, e, i);
                setTimeout(r, 2500);
              }
            }
          };
        P = new v(I.elementAdded, I.elementRemoved, I.elementChanged, I);
        var N,
          U,
          F,
          z = c.pointermap,
          k =
            window.MSPointerEvent &&
            "number" == typeof window.MSPointerEvent.MSPOINTER_TYPE_MOUSE,
          B = {
            events: [
              "MSPointerDown",
              "MSPointerMove",
              "MSPointerUp",
              "MSPointerOut",
              "MSPointerOver",
              "MSPointerCancel",
              "MSGotPointerCapture",
              "MSLostPointerCapture"
            ],
            register: function(t) {
              c.listen(t, this.events);
            },
            unregister: function(t) {
              c.unlisten(t, this.events);
            },
            POINTER_TYPES: ["", "unavailable", "touch", "pen", "mouse"],
            prepareEvent: function(t) {
              var e = t;
              return (
                k &&
                  ((e = c.cloneEvent(t)).pointerType = this.POINTER_TYPES[
                    t.pointerType
                  ]),
                e
              );
            },
            cleanup: function(t) {
              z.delete(t);
            },
            MSPointerDown: function(t) {
              z.set(t.pointerId, t);
              var e = this.prepareEvent(t);
              c.down(e);
            },
            MSPointerMove: function(t) {
              var e = this.prepareEvent(t);
              c.move(e);
            },
            MSPointerUp: function(t) {
              var e = this.prepareEvent(t);
              c.up(e), this.cleanup(t.pointerId);
            },
            MSPointerOut: function(t) {
              var e = this.prepareEvent(t);
              c.leaveOut(e);
            },
            MSPointerOver: function(t) {
              var e = this.prepareEvent(t);
              c.enterOver(e);
            },
            MSPointerCancel: function(t) {
              var e = this.prepareEvent(t);
              c.cancel(e), this.cleanup(t.pointerId);
            },
            MSLostPointerCapture: function(t) {
              var e = c.makeEvent("lostpointercapture", t);
              c.dispatchEvent(e);
            },
            MSGotPointerCapture: function(t) {
              var e = c.makeEvent("gotpointercapture", t);
              c.dispatchEvent(e);
            }
          };
        function G(t) {
          if (!c.pointermap.has(t)) {
            var e = new Error("InvalidPointerId");
            throw ((e.name = "InvalidPointerId"), e);
          }
        }
        function V(t) {
          for (var e = t.parentNode; e && e !== t.ownerDocument; )
            e = e.parentNode;
          if (!e) {
            var n = new Error("InvalidStateError");
            throw ((n.name = "InvalidStateError"), n);
          }
        }
        function H(t) {
          var e = c.pointermap.get(t);
          return 0 !== e.buttons;
        }
        return (
          window.navigator.msPointerEnabled
            ? ((N = function(t) {
                G(t),
                  V(this),
                  H(t) &&
                    (c.setCapture(t, this, !0), this.msSetPointerCapture(t));
              }),
              (U = function(t) {
                G(t), c.releaseCapture(t, !0), this.msReleasePointerCapture(t);
              }))
            : ((N = function(t) {
                G(t), V(this), H(t) && c.setCapture(t, this);
              }),
              (U = function(t) {
                G(t), c.releaseCapture(t);
              })),
          (F = function(t) {
            return !!c.captureInfo[t];
          }),
          (function() {
            if (T) {
              b.forEach(function(t) {
                String(t) === t
                  ? ((w += y(t) + x(t) + "\n"), M && (w += _(t) + x(t) + "\n"))
                  : ((w += t.selectors.map(y) + x(t.rule) + "\n"),
                    M && (w += t.selectors.map(_) + x(t.rule) + "\n"));
              });
              var t = document.createElement("style");
              (t.textContent = w), document.head.appendChild(t);
            }
          })(),
          (function() {
            if (!window.PointerEvent) {
              if (
                ((window.PointerEvent = n), window.navigator.msPointerEnabled)
              ) {
                var t = window.navigator.msMaxTouchPoints;
                Object.defineProperty(window.navigator, "maxTouchPoints", {
                  value: t,
                  enumerable: !0
                }),
                  c.registerSource("ms", B);
              } else
                Object.defineProperty(window.navigator, "maxTouchPoints", {
                  value: 0,
                  enumerable: !0
                }),
                  c.registerSource("mouse", A),
                  void 0 !== window.ontouchstart &&
                    c.registerSource("touch", I);
              c.register(document);
            }
          })(),
          window.Element &&
            !Element.prototype.setPointerCapture &&
            Object.defineProperties(Element.prototype, {
              setPointerCapture: { value: N },
              releasePointerCapture: { value: U },
              hasPointerCapture: { value: F }
            }),
          {
            dispatcher: c,
            Installer: v,
            PointerEvent: n,
            PointerMap: i,
            targetFinding: h
          }
        );
      })();
    },
    function(t, e, n) {
      "use strict";
      var i = n(17),
        r = n(35),
        a = n(60),
        o = n(29);
      function s(t) {
        var e = new a(t),
          n = r(a.prototype.request, e);
        return i.extend(n, a.prototype, e), i.extend(n, e), n;
      }
      var l = s(o);
      (l.Axios = a),
        (l.create = function(t) {
          return s(i.merge(o, t));
        }),
        (l.Cancel = n(39)),
        (l.CancelToken = n(75)),
        (l.isCancel = n(38)),
        (l.all = function(t) {
          return Promise.all(t);
        }),
        (l.spread = n(76)),
        (t.exports = l),
        (t.exports.default = l);
    },
    function(t, e) {
      function n(t) {
        return (
          !!t.constructor &&
          "function" == typeof t.constructor.isBuffer &&
          t.constructor.isBuffer(t)
        );
      }
      /*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
      t.exports = function(t) {
        return (
          null != t &&
          (n(t) ||
            (function(t) {
              return (
                "function" == typeof t.readFloatLE &&
                "function" == typeof t.slice &&
                n(t.slice(0, 0))
              );
            })(t) ||
            !!t._isBuffer)
        );
      };
    },
    function(t, e, n) {
      "use strict";
      var i = n(29),
        r = n(17),
        a = n(70),
        o = n(71);
      function s(t) {
        (this.defaults = t),
          (this.interceptors = { request: new a(), response: new a() });
      }
      (s.prototype.request = function(t) {
        "string" == typeof t &&
          (t = r.merge({ url: arguments[0] }, arguments[1])),
          ((t = r.merge(
            i,
            { method: "get" },
            this.defaults,
            t
          )).method = t.method.toLowerCase());
        var e = [o, void 0],
          n = Promise.resolve(t);
        for (
          this.interceptors.request.forEach(function(t) {
            e.unshift(t.fulfilled, t.rejected);
          }),
            this.interceptors.response.forEach(function(t) {
              e.push(t.fulfilled, t.rejected);
            });
          e.length;

        )
          n = n.then(e.shift(), e.shift());
        return n;
      }),
        r.forEach(["delete", "get", "head", "options"], function(t) {
          s.prototype[t] = function(e, n) {
            return this.request(r.merge(n || {}, { method: t, url: e }));
          };
        }),
        r.forEach(["post", "put", "patch"], function(t) {
          s.prototype[t] = function(e, n, i) {
            return this.request(
              r.merge(i || {}, { method: t, url: e, data: n })
            );
          };
        }),
        (t.exports = s);
    },
    function(t, e) {
      var n,
        i,
        r = (t.exports = {});
      function a() {
        throw new Error("setTimeout has not been defined");
      }
      function o() {
        throw new Error("clearTimeout has not been defined");
      }
      function s(t) {
        if (n === setTimeout) return setTimeout(t, 0);
        if ((n === a || !n) && setTimeout)
          return (n = setTimeout), setTimeout(t, 0);
        try {
          return n(t, 0);
        } catch (e) {
          try {
            return n.call(null, t, 0);
          } catch (e) {
            return n.call(this, t, 0);
          }
        }
      }
      !(function() {
        try {
          n = "function" == typeof setTimeout ? setTimeout : a;
        } catch (t) {
          n = a;
        }
        try {
          i = "function" == typeof clearTimeout ? clearTimeout : o;
        } catch (t) {
          i = o;
        }
      })();
      var l,
        c = [],
        h = !1,
        u = -1;
      function d() {
        h &&
          l &&
          ((h = !1), l.length ? (c = l.concat(c)) : (u = -1), c.length && f());
      }
      function f() {
        if (!h) {
          var t = s(d);
          h = !0;
          for (var e = c.length; e; ) {
            for (l = c, c = []; ++u < e; ) l && l[u].run();
            (u = -1), (e = c.length);
          }
          (l = null),
            (h = !1),
            (function(t) {
              if (i === clearTimeout) return clearTimeout(t);
              if ((i === o || !i) && clearTimeout)
                return (i = clearTimeout), clearTimeout(t);
              try {
                i(t);
              } catch (e) {
                try {
                  return i.call(null, t);
                } catch (e) {
                  return i.call(this, t);
                }
              }
            })(t);
        }
      }
      function p(t, e) {
        (this.fun = t), (this.array = e);
      }
      function m() {}
      (r.nextTick = function(t) {
        var e = new Array(arguments.length - 1);
        if (arguments.length > 1)
          for (var n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
        c.push(new p(t, e)), 1 !== c.length || h || s(f);
      }),
        (p.prototype.run = function() {
          this.fun.apply(null, this.array);
        }),
        (r.title = "browser"),
        (r.browser = !0),
        (r.env = {}),
        (r.argv = []),
        (r.version = ""),
        (r.versions = {}),
        (r.on = m),
        (r.addListener = m),
        (r.once = m),
        (r.off = m),
        (r.removeListener = m),
        (r.removeAllListeners = m),
        (r.emit = m),
        (r.prependListener = m),
        (r.prependOnceListener = m),
        (r.listeners = function(t) {
          return [];
        }),
        (r.binding = function(t) {
          throw new Error("process.binding is not supported");
        }),
        (r.cwd = function() {
          return "/";
        }),
        (r.chdir = function(t) {
          throw new Error("process.chdir is not supported");
        }),
        (r.umask = function() {
          return 0;
        });
    },
    function(t, e, n) {
      "use strict";
      var i = n(17);
      t.exports = function(t, e) {
        i.forEach(t, function(n, i) {
          i !== e &&
            i.toUpperCase() === e.toUpperCase() &&
            ((t[e] = n), delete t[i]);
        });
      };
    },
    function(t, e, n) {
      "use strict";
      var i = n(37);
      t.exports = function(t, e, n) {
        var r = n.config.validateStatus;
        n.status && r && !r(n.status)
          ? e(
              i(
                "Request failed with status code " + n.status,
                n.config,
                null,
                n.request,
                n
              )
            )
          : t(n);
      };
    },
    function(t, e, n) {
      "use strict";
      t.exports = function(t, e, n, i, r) {
        return (
          (t.config = e),
          n && (t.code = n),
          (t.request = i),
          (t.response = r),
          t
        );
      };
    },
    function(t, e, n) {
      "use strict";
      var i = n(17);
      function r(t) {
        return encodeURIComponent(t)
          .replace(/%40/gi, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",")
          .replace(/%20/g, "+")
          .replace(/%5B/gi, "[")
          .replace(/%5D/gi, "]");
      }
      t.exports = function(t, e, n) {
        if (!e) return t;
        var a;
        if (n) a = n(e);
        else if (i.isURLSearchParams(e)) a = e.toString();
        else {
          var o = [];
          i.forEach(e, function(t, e) {
            null != t &&
              (i.isArray(t) ? (e += "[]") : (t = [t]),
              i.forEach(t, function(t) {
                i.isDate(t)
                  ? (t = t.toISOString())
                  : i.isObject(t) && (t = JSON.stringify(t)),
                  o.push(r(e) + "=" + r(t));
              }));
          }),
            (a = o.join("&"));
        }
        return a && (t += (-1 === t.indexOf("?") ? "?" : "&") + a), t;
      };
    },
    function(t, e, n) {
      "use strict";
      var i = n(17),
        r = [
          "age",
          "authorization",
          "content-length",
          "content-type",
          "etag",
          "expires",
          "from",
          "host",
          "if-modified-since",
          "if-unmodified-since",
          "last-modified",
          "location",
          "max-forwards",
          "proxy-authorization",
          "referer",
          "retry-after",
          "user-agent"
        ];
      t.exports = function(t) {
        var e,
          n,
          a,
          o = {};
        return t
          ? (i.forEach(t.split("\n"), function(t) {
              if (
                ((a = t.indexOf(":")),
                (e = i.trim(t.substr(0, a)).toLowerCase()),
                (n = i.trim(t.substr(a + 1))),
                e)
              ) {
                if (o[e] && r.indexOf(e) >= 0) return;
                o[e] =
                  "set-cookie" === e
                    ? (o[e] ? o[e] : []).concat([n])
                    : o[e] ? o[e] + ", " + n : n;
              }
            }),
            o)
          : o;
      };
    },
    function(t, e, n) {
      "use strict";
      var i = n(17);
      t.exports = i.isStandardBrowserEnv()
        ? (function() {
            var t,
              e = /(msie|trident)/i.test(navigator.userAgent),
              n = document.createElement("a");
            function r(t) {
              var i = t;
              return (
                e && (n.setAttribute("href", i), (i = n.href)),
                n.setAttribute("href", i),
                {
                  href: n.href,
                  protocol: n.protocol ? n.protocol.replace(/:$/, "") : "",
                  host: n.host,
                  search: n.search ? n.search.replace(/^\?/, "") : "",
                  hash: n.hash ? n.hash.replace(/^#/, "") : "",
                  hostname: n.hostname,
                  port: n.port,
                  pathname:
                    "/" === n.pathname.charAt(0) ? n.pathname : "/" + n.pathname
                }
              );
            }
            return (
              (t = r(window.location.href)),
              function(e) {
                var n = i.isString(e) ? r(e) : e;
                return n.protocol === t.protocol && n.host === t.host;
              }
            );
          })()
        : function() {
            return !0;
          };
    },
    function(t, e, n) {
      "use strict";
      var i =
        "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
      function r() {
        this.message = "String contains an invalid character";
      }
      (r.prototype = new Error()),
        (r.prototype.code = 5),
        (r.prototype.name = "InvalidCharacterError"),
        (t.exports = function(t) {
          for (
            var e, n, a = String(t), o = "", s = 0, l = i;
            a.charAt(0 | s) || ((l = "="), s % 1);
            o += l.charAt(63 & (e >> (8 - (s % 1) * 8)))
          ) {
            if ((n = a.charCodeAt((s += 0.75))) > 255) throw new r();
            e = (e << 8) | n;
          }
          return o;
        });
    },
    function(t, e, n) {
      "use strict";
      var i = n(17);
      t.exports = i.isStandardBrowserEnv()
        ? {
            write: function(t, e, n, r, a, o) {
              var s = [];
              s.push(t + "=" + encodeURIComponent(e)),
                i.isNumber(n) && s.push("expires=" + new Date(n).toGMTString()),
                i.isString(r) && s.push("path=" + r),
                i.isString(a) && s.push("domain=" + a),
                !0 === o && s.push("secure"),
                (document.cookie = s.join("; "));
            },
            read: function(t) {
              var e = document.cookie.match(
                new RegExp("(^|;\\s*)(" + t + ")=([^;]*)")
              );
              return e ? decodeURIComponent(e[3]) : null;
            },
            remove: function(t) {
              this.write(t, "", Date.now() - 864e5);
            }
          }
        : {
            write: function() {},
            read: function() {
              return null;
            },
            remove: function() {}
          };
    },
    function(t, e, n) {
      "use strict";
      var i = n(17);
      function r() {
        this.handlers = [];
      }
      (r.prototype.use = function(t, e) {
        return (
          this.handlers.push({ fulfilled: t, rejected: e }),
          this.handlers.length - 1
        );
      }),
        (r.prototype.eject = function(t) {
          this.handlers[t] && (this.handlers[t] = null);
        }),
        (r.prototype.forEach = function(t) {
          i.forEach(this.handlers, function(e) {
            null !== e && t(e);
          });
        }),
        (t.exports = r);
    },
    function(t, e, n) {
      "use strict";
      var i = n(17),
        r = n(72),
        a = n(38),
        o = n(29),
        s = n(73),
        l = n(74);
      function c(t) {
        t.cancelToken && t.cancelToken.throwIfRequested();
      }
      t.exports = function(t) {
        return (
          c(t),
          t.baseURL && !s(t.url) && (t.url = l(t.baseURL, t.url)),
          (t.headers = t.headers || {}),
          (t.data = r(t.data, t.headers, t.transformRequest)),
          (t.headers = i.merge(
            t.headers.common || {},
            t.headers[t.method] || {},
            t.headers || {}
          )),
          i.forEach(
            ["delete", "get", "head", "post", "put", "patch", "common"],
            function(e) {
              delete t.headers[e];
            }
          ),
          (t.adapter || o.adapter)(t).then(
            function(e) {
              return (
                c(t), (e.data = r(e.data, e.headers, t.transformResponse)), e
              );
            },
            function(e) {
              return (
                a(e) ||
                  (c(t),
                  e &&
                    e.response &&
                    (e.response.data = r(
                      e.response.data,
                      e.response.headers,
                      t.transformResponse
                    ))),
                Promise.reject(e)
              );
            }
          )
        );
      };
    },
    function(t, e, n) {
      "use strict";
      var i = n(17);
      t.exports = function(t, e, n) {
        return (
          i.forEach(n, function(n) {
            t = n(t, e);
          }),
          t
        );
      };
    },
    function(t, e, n) {
      "use strict";
      t.exports = function(t) {
        return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(t);
      };
    },
    function(t, e, n) {
      "use strict";
      t.exports = function(t, e) {
        return e ? t.replace(/\/+$/, "") + "/" + e.replace(/^\/+/, "") : t;
      };
    },
    function(t, e, n) {
      "use strict";
      var i = n(39);
      function r(t) {
        if ("function" != typeof t)
          throw new TypeError("executor must be a function.");
        var e;
        this.promise = new Promise(function(t) {
          e = t;
        });
        var n = this;
        t(function(t) {
          n.reason || ((n.reason = new i(t)), e(n.reason));
        });
      }
      (r.prototype.throwIfRequested = function() {
        if (this.reason) throw this.reason;
      }),
        (r.source = function() {
          var t;
          return {
            token: new r(function(e) {
              t = e;
            }),
            cancel: t
          };
        }),
        (t.exports = r);
    },
    function(t, e, n) {
      "use strict";
      t.exports = function(t) {
        return function(e) {
          return t.apply(null, e);
        };
      };
    },
    ,
    function(t, e, n) {
      "use strict";
      n.d(e, "a", function() {
        return a;
      });
      var i = n(22),
        r = n(10);
      function a(t, e, n, r, a, o) {
        i.a.call(this),
          (this.type = "OrthographicCamera"),
          (this.zoom = 1),
          (this.view = null),
          (this.left = void 0 !== t ? t : -1),
          (this.right = void 0 !== e ? e : 1),
          (this.top = void 0 !== n ? n : 1),
          (this.bottom = void 0 !== r ? r : -1),
          (this.near = void 0 !== a ? a : 0.1),
          (this.far = void 0 !== o ? o : 2e3),
          this.updateProjectionMatrix();
      }
      a.prototype = Object.assign(Object.create(i.a.prototype), {
        constructor: a,
        isOrthographicCamera: !0,
        copy: function(t, e) {
          return (
            i.a.prototype.copy.call(this, t, e),
            (this.left = t.left),
            (this.right = t.right),
            (this.top = t.top),
            (this.bottom = t.bottom),
            (this.near = t.near),
            (this.far = t.far),
            (this.zoom = t.zoom),
            (this.view = null === t.view ? null : Object.assign({}, t.view)),
            this
          );
        },
        setViewOffset: function(t, e, n, i, r, a) {
          null === this.view &&
            (this.view = {
              enabled: !0,
              fullWidth: 1,
              fullHeight: 1,
              offsetX: 0,
              offsetY: 0,
              width: 1,
              height: 1
            }),
            (this.view.enabled = !0),
            (this.view.fullWidth = t),
            (this.view.fullHeight = e),
            (this.view.offsetX = n),
            (this.view.offsetY = i),
            (this.view.width = r),
            (this.view.height = a),
            this.updateProjectionMatrix();
        },
        clearViewOffset: function() {
          null !== this.view && (this.view.enabled = !1),
            this.updateProjectionMatrix();
        },
        updateProjectionMatrix: function() {
          var t = (this.right - this.left) / (2 * this.zoom),
            e = (this.top - this.bottom) / (2 * this.zoom),
            n = (this.right + this.left) / 2,
            i = (this.top + this.bottom) / 2,
            r = n - t,
            a = n + t,
            o = i + e,
            s = i - e;
          if (null !== this.view && this.view.enabled) {
            var l = this.zoom / (this.view.width / this.view.fullWidth),
              c = this.zoom / (this.view.height / this.view.fullHeight),
              h = (this.right - this.left) / this.view.width,
              u = (this.top - this.bottom) / this.view.height;
            (a =
              (r += h * (this.view.offsetX / l)) + h * (this.view.width / l)),
              (s =
                (o -= u * (this.view.offsetY / c)) -
                u * (this.view.height / c));
          }
          this.projectionMatrix.makeOrthographic(
            r,
            a,
            o,
            s,
            this.near,
            this.far
          ),
            this.projectionMatrixInverse.getInverse(this.projectionMatrix);
        },
        toJSON: function(t) {
          var e = r.a.prototype.toJSON.call(this, t);
          return (
            (e.object.zoom = this.zoom),
            (e.object.left = this.left),
            (e.object.right = this.right),
            (e.object.top = this.top),
            (e.object.bottom = this.bottom),
            (e.object.near = this.near),
            (e.object.far = this.far),
            null !== this.view &&
              (e.object.view = Object.assign({}, this.view)),
            e
          );
        }
      });
    },
    function(t, e, n) {
      "use strict";
      n.d(e, "a", function() {
        return r;
      });
      var i = n(10);
      function r() {
        i.a.call(this),
          (this.type = "Scene"),
          (this.background = null),
          (this.fog = null),
          (this.overrideMaterial = null),
          (this.autoUpdate = !0);
      }
      r.prototype = Object.assign(Object.create(i.a.prototype), {
        constructor: r,
        copy: function(t, e) {
          return (
            i.a.prototype.copy.call(this, t, e),
            null !== t.background && (this.background = t.background.clone()),
            null !== t.fog && (this.fog = t.fog.clone()),
            null !== t.overrideMaterial &&
              (this.overrideMaterial = t.overrideMaterial.clone()),
            (this.autoUpdate = t.autoUpdate),
            (this.matrixAutoUpdate = t.matrixAutoUpdate),
            this
          );
        },
        toJSON: function(t) {
          var e = i.a.prototype.toJSON.call(this, t);
          return (
            null !== this.background &&
              (e.object.background = this.background.toJSON(t)),
            null !== this.fog && (e.object.fog = this.fog.toJSON()),
            e
          );
        }
      });
    },
    function(t, e, n) {
      "use strict";
      function i(t) {
        (this.autoStart = void 0 === t || t),
          (this.startTime = 0),
          (this.oldTime = 0),
          (this.elapsedTime = 0),
          (this.running = !1);
      }
      n.d(e, "a", function() {
        return i;
      }),
        Object.assign(i.prototype, {
          start: function() {
            (this.startTime = ("undefined" == typeof performance
              ? Date
              : performance
            ).now()),
              (this.oldTime = this.startTime),
              (this.elapsedTime = 0),
              (this.running = !0);
          },
          stop: function() {
            this.getElapsedTime(), (this.running = !1), (this.autoStart = !1);
          },
          getElapsedTime: function() {
            return this.getDelta(), this.elapsedTime;
          },
          getDelta: function() {
            var t = 0;
            if (this.autoStart && !this.running) return this.start(), 0;
            if (this.running) {
              var e = ("undefined" == typeof performance
                ? Date
                : performance
              ).now();
              (t = (e - this.oldTime) / 1e3),
                (this.oldTime = e),
                (this.elapsedTime += t);
            }
            return t;
          }
        });
    },
    function(t, e, n) {
      "use strict";
      var i = n(0),
        r = n(5),
        a = n(14);
      function o(t, e, n, r, o, s, l, c, h, u, d, f) {
        a.a.call(this, null, s, l, c, h, u, r, o, d, f),
          (this.image = { data: t, width: e, height: n }),
          (this.magFilter = void 0 !== h ? h : i.Y),
          (this.minFilter = void 0 !== u ? u : i.Y),
          (this.generateMipmaps = !1),
          (this.flipY = !1),
          (this.unpackAlignment = 1);
      }
      (o.prototype = Object.create(a.a.prototype)),
        (o.prototype.constructor = o),
        (o.prototype.isDataTexture = !0);
      var s,
        l,
        c,
        h,
        u = n(1),
        d = n(19),
        f = n(12);
      function p(t, e) {
        (this.normal = void 0 !== t ? t : new u.a(1, 0, 0)),
          (this.constant = void 0 !== e ? e : 0);
      }
      function m(t, e, n, i, r, a) {
        this.planes = [
          void 0 !== t ? t : new p(),
          void 0 !== e ? e : new p(),
          void 0 !== n ? n : new p(),
          void 0 !== i ? i : new p(),
          void 0 !== r ? r : new p(),
          void 0 !== a ? a : new p()
        ];
      }
      Object.assign(p.prototype, {
        set: function(t, e) {
          return this.normal.copy(t), (this.constant = e), this;
        },
        setComponents: function(t, e, n, i) {
          return this.normal.set(t, e, n), (this.constant = i), this;
        },
        setFromNormalAndCoplanarPoint: function(t, e) {
          return (
            this.normal.copy(t), (this.constant = -e.dot(this.normal)), this
          );
        },
        setFromCoplanarPoints: ((s = new u.a()),
        (l = new u.a()),
        function(t, e, n) {
          var i = s
            .subVectors(n, e)
            .cross(l.subVectors(t, e))
            .normalize();
          return this.setFromNormalAndCoplanarPoint(i, t), this;
        }),
        clone: function() {
          return new this.constructor().copy(this);
        },
        copy: function(t) {
          return this.normal.copy(t.normal), (this.constant = t.constant), this;
        },
        normalize: function() {
          var t = 1 / this.normal.length();
          return this.normal.multiplyScalar(t), (this.constant *= t), this;
        },
        negate: function() {
          return (this.constant *= -1), this.normal.negate(), this;
        },
        distanceToPoint: function(t) {
          return this.normal.dot(t) + this.constant;
        },
        distanceToSphere: function(t) {
          return this.distanceToPoint(t.center) - t.radius;
        },
        projectPoint: function(t, e) {
          return (
            void 0 === e &&
              (console.warn(
                "THREE.Plane: .projectPoint() target is now required"
              ),
              (e = new u.a())),
            e
              .copy(this.normal)
              .multiplyScalar(-this.distanceToPoint(t))
              .add(t)
          );
        },
        intersectLine: (function() {
          var t = new u.a();
          return function(e, n) {
            void 0 === n &&
              (console.warn(
                "THREE.Plane: .intersectLine() target is now required"
              ),
              (n = new u.a()));
            var i = e.delta(t),
              r = this.normal.dot(i);
            if (0 === r)
              return 0 === this.distanceToPoint(e.start)
                ? n.copy(e.start)
                : void 0;
            var a = -(e.start.dot(this.normal) + this.constant) / r;
            return a < 0 || a > 1
              ? void 0
              : n
                  .copy(i)
                  .multiplyScalar(a)
                  .add(e.start);
          };
        })(),
        intersectsLine: function(t) {
          var e = this.distanceToPoint(t.start),
            n = this.distanceToPoint(t.end);
          return (e < 0 && n > 0) || (n < 0 && e > 0);
        },
        intersectsBox: function(t) {
          return t.intersectsPlane(this);
        },
        intersectsSphere: function(t) {
          return t.intersectsPlane(this);
        },
        coplanarPoint: function(t) {
          return (
            void 0 === t &&
              (console.warn(
                "THREE.Plane: .coplanarPoint() target is now required"
              ),
              (t = new u.a())),
            t.copy(this.normal).multiplyScalar(-this.constant)
          );
        },
        applyMatrix4: (function() {
          var t = new u.a(),
            e = new f.a();
          return function(n, i) {
            var r = i || e.getNormalMatrix(n),
              a = this.coplanarPoint(t).applyMatrix4(n),
              o = this.normal.applyMatrix3(r).normalize();
            return (this.constant = -a.dot(o)), this;
          };
        })(),
        translate: function(t) {
          return (this.constant -= t.dot(this.normal)), this;
        },
        equals: function(t) {
          return t.normal.equals(this.normal) && t.constant === this.constant;
        }
      }),
        Object.assign(m.prototype, {
          set: function(t, e, n, i, r, a) {
            var o = this.planes;
            return (
              o[0].copy(t),
              o[1].copy(e),
              o[2].copy(n),
              o[3].copy(i),
              o[4].copy(r),
              o[5].copy(a),
              this
            );
          },
          clone: function() {
            return new this.constructor().copy(this);
          },
          copy: function(t) {
            for (var e = this.planes, n = 0; n < 6; n++) e[n].copy(t.planes[n]);
            return this;
          },
          setFromMatrix: function(t) {
            var e = this.planes,
              n = t.elements,
              i = n[0],
              r = n[1],
              a = n[2],
              o = n[3],
              s = n[4],
              l = n[5],
              c = n[6],
              h = n[7],
              u = n[8],
              d = n[9],
              f = n[10],
              p = n[11],
              m = n[12],
              g = n[13],
              v = n[14],
              _ = n[15];
            return (
              e[0].setComponents(o - i, h - s, p - u, _ - m).normalize(),
              e[1].setComponents(o + i, h + s, p + u, _ + m).normalize(),
              e[2].setComponents(o + r, h + l, p + d, _ + g).normalize(),
              e[3].setComponents(o - r, h - l, p - d, _ - g).normalize(),
              e[4].setComponents(o - a, h - c, p - f, _ - v).normalize(),
              e[5].setComponents(o + a, h + c, p + f, _ + v).normalize(),
              this
            );
          },
          intersectsObject: ((h = new d.a()),
          function(t) {
            var e = t.geometry;
            return (
              null === e.boundingSphere && e.computeBoundingSphere(),
              h.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),
              this.intersectsSphere(h)
            );
          }),
          intersectsSprite: (function() {
            var t = new d.a();
            return function(e) {
              return (
                t.center.set(0, 0, 0),
                (t.radius = 0.7071067811865476),
                t.applyMatrix4(e.matrixWorld),
                this.intersectsSphere(t)
              );
            };
          })(),
          intersectsSphere: function(t) {
            for (
              var e = this.planes, n = t.center, i = -t.radius, r = 0;
              r < 6;
              r++
            ) {
              if (e[r].distanceToPoint(n) < i) return !1;
            }
            return !0;
          },
          intersectsBox: ((c = new u.a()),
          function(t) {
            for (var e = this.planes, n = 0; n < 6; n++) {
              var i = e[n];
              if (
                ((c.x = i.normal.x > 0 ? t.max.x : t.min.x),
                (c.y = i.normal.y > 0 ? t.max.y : t.min.y),
                (c.z = i.normal.z > 0 ? t.max.z : t.min.z),
                i.distanceToPoint(c) < 0)
              )
                return !1;
            }
            return !0;
          }),
          containsPoint: function(t) {
            for (var e = this.planes, n = 0; n < 6; n++)
              if (e[n].distanceToPoint(t) < 0) return !1;
            return !0;
          }
        });
      var g = n(4),
        v = {
          alphamap_fragment:
            "\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",
          alphamap_pars_fragment:
            "\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n",
          alphatest_fragment:
            "\n#ifdef ALPHATEST\n\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n",
          aomap_fragment:
            "\n#ifdef USE_AOMAP\n\n\t// reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\n\t#endif\n\n#endif\n",
          aomap_pars_fragment:
            "\n#ifdef USE_AOMAP\n\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n\n#endif\n",
          begin_vertex: "\nvec3 transformed = vec3( position );\n",
          beginnormal_vertex: "\nvec3 objectNormal = vec3( normal );\n",
          bsdfs:
            '\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\n\t// based upon Frostbite 3 Moving to Physically-based Rendering\n\t// page 32, equation 26: E[window1]\n\t// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t// this is intended to be used on spot and point lights who are represented as luminous intensity\n\t// but who must be converted to luminous irradiance for surface lighting calculation\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\n\tif( cutoffDistance > 0.0 ) {\n\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\n\t}\n\n\treturn distanceFalloff;\n\n#else\n\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n\t}\n\n\treturn 1.0;\n\n#endif\n\n}\n\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\n\treturn RECIPROCAL_PI * diffuseColor;\n\n} // validated\n\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\n\t// Original approximation by Christophe Schlick \'94\n\t// float fresnel = pow( 1.0 - dotLH, 5.0 );\n\n\t// Optimized variant (presented by Epic at SIGGRAPH \'13)\n\t// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n\n} // validated\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (34)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\t// geometry term (normalized) = G(l)⋅G(v) / 4(n⋅l)(n⋅v)\n\t// also see #12151\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\n\treturn 1.0 / ( gl * gv );\n\n} // validated\n\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\tfloat a2 = pow2( alpha );\n\n\t// dotNL and dotNV are explicitly swapped. This is not a mistake.\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\n\treturn 0.5 / max( gv + gl, EPSILON );\n\n}\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\n\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n\n}\n\n// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat alpha = pow2( roughness ); // UE4\'s roughness\n\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\n\tfloat D = D_GGX( alpha, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// Rect Area Light\n\n// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines\n// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt\n// code: https://github.com/selfshadow/ltc_code/\n\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\n\tfloat dotNV = saturate( dot( N, V ) );\n\n\t// texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\treturn uv;\n\n}\n\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\n\t// Real-Time Area Lighting: a Journey from Research to Production (p.102)\n\t// An approximation of the form factor of a horizon-clipped rectangle.\n\n\tfloat l = length( f );\n\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n\n}\n\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\n\tfloat x = dot( v1, v2 );\n\n\tfloat y = abs( x );\n\n\t// rational polynomial approximation to theta / sin( theta ) / 2PI\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\n\treturn cross( v1, v2 ) * theta_sintheta;\n\n}\n\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\n\t// bail if point is on back side of plane of light\n\t// assumes ccw winding order of light vertices\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\n\t// construct orthonormal basis around N\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system\n\n\t// compute transform\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\n\t// transform rect\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\n\t// project rect onto sphere\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\n\t// calculate vector form factor\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\n\t// adjust for horizon clipping\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\n/*\n\t// alternate method of adjusting for horizon clipping (see referece)\n\t// refactoring required\n\tfloat len = length( vectorFormFactor );\n\tfloat z = vectorFormFactor.z / len;\n\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\n\t// tabulated horizon-clipped sphere, apparently...\n\tvec2 uv = vec2( z * 0.5 + 0.5, len );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\tfloat scale = texture2D( ltc_2, uv ).w;\n\n\tfloat result = len * scale;\n*/\n\n\treturn vec3( result );\n\n}\n\n// End Rect Area Light\n\n// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n\tvec4 r = roughness * c0 + c1;\n\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\n\treturn specularColor * AB.x + AB.y;\n\n} // validated\n\n\nfloat G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {\n\n\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\n\treturn 0.25;\n\n}\n\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n\t//float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\t//float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\n\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n',
          bumpmap_pars_fragment:
            "\n#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n\t// http://api.unrealengine.com/attachments/Engine/Rendering/LightingAndShadows/BumpMappingWithoutTangentSpace/mm_sfgrad_bump.pdf\n\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n",
          clipping_planes_fragment:
            "\n#if NUM_CLIPPING_PLANES > 0\n\n\tvec4 plane;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\n\t}\n\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\n\t\tbool clipped = true;\n\n\t\t#pragma unroll_loop\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\n\t\t}\n\n\t\tif ( clipped ) discard;\n\n\t#endif\n\n#endif\n",
          clipping_planes_pars_fragment:
            "\n#if NUM_CLIPPING_PLANES > 0\n\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n\n#endif\n",
          clipping_planes_pars_vertex:
            "\n#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvarying vec3 vViewPosition;\n#endif\n",
          clipping_planes_vertex:
            "\n#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",
          color_fragment:
            "\n#ifdef USE_COLOR\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif\n",
          color_pars_fragment:
            "\n#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n",
          color_pars_vertex:
            "\n#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n",
          color_vertex:
            "\n#ifdef USE_COLOR\n\n\tvColor.xyz = color.xyz;\n\n#endif\n",
          common:
            "\n#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\n\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\n\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\n\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n}\n\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\n\treturn - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nmat3 transposeMat3( const in mat3 m ) {\n\n\tmat3 tmp;\n\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\n\treturn tmp;\n\n}\n\n// https://en.wikipedia.org/wiki/Relative_luminance\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\n\treturn dot( weights, color.rgb );\n\n}\n",
          cube_uv_reflection_fragment:
            "\n#ifdef ENVMAP_TYPE_CUBE_UV\n\n#define cubeUV_textureSize (1024.0)\n\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\n\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\t// Clamp the value to the max mip level counts. hard coded to 6 mips\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\n\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\t// float powScale = exp2(roughnessLevel + mipLevel);\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\t// float scale =  1.0 / exp2(roughnessLevel + 2.0 + mipLevel);\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\t// float mipOffset = 0.75*(1.0 - 1.0/exp2(mipLevel))/exp2(roughnessLevel);\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\n\tfloat rcpPowScale = 1.0 / powScale;\n\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\n\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\n\t// round to nearest mipmap if we are not interpolating.\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\n\t// Tri linear interpolation.\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\n\tvec4 result = mix(color10, color20, t);\n\n\treturn vec4(result.rgb, 1.0);\n}\n\n#endif\n",
          defaultnormal_vertex:
            "\nvec3 transformedNormal = normalMatrix * objectNormal;\n\n#ifdef FLIP_SIDED\n\n\ttransformedNormal = - transformedNormal;\n\n#endif\n",
          displacementmap_pars_vertex:
            "\n#ifdef USE_DISPLACEMENTMAP\n\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n\n#endif\n",
          displacementmap_vertex:
            "\n#ifdef USE_DISPLACEMENTMAP\n\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n\n#endif\n",
          emissivemap_fragment:
            "\n#ifdef USE_EMISSIVEMAP\n\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n\n#endif\n",
          emissivemap_pars_fragment:
            "\n#ifdef USE_EMISSIVEMAP\n\n\tuniform sampler2D emissiveMap;\n\n#endif\n",
          encodings_fragment:
            "\n  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",
          encodings_pars_fragment:
            "\n// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\n\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\n\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\n\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\n\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\n\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\n\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\n\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n//  return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\n\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\n\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\n\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\n\n// M matrix, for encoding\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\n\n// Inverse M matrix, for decoding\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}\n",
          envmap_fragment:
            "\n#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\n\t\tvec2 sampleUV;\n\n\t\treflectVec = normalize( reflectVec );\n\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\n\t\treflectVec = normalize( reflectVec );\n\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\n\t#else\n\n\t\tvec4 envColor = vec4( 0.0 );\n\n\t#endif\n\n\tenvColor = envMapTexelToLinear( envColor );\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n",
          envmap_pars_fragment:
            "\n#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n\n#ifdef USE_ENVMAP\n\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n\n#endif\n",
          envmap_pars_vertex:
            "\n#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\n\t#endif\n\n#endif\n",
          envmap_physical_pars_fragment:
            "\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\n\tvec3 getLightProbeIndirectIrradiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in int maxMIPLevel ) {\n\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\n\t\t\t// TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\n\t\t\t// of a specular cubemap, or just the default level of a specially created irradiance cubemap.\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#else\n\n\t\t\t\t// force the bias high to get the last LOD level as it is the most blurred.\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\n\n\t\t#else\n\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\n\t\t#endif\n\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\n\t}\n\n\t// taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\n\t\t//float envMapWidth = pow( 2.0, maxMIPLevelScalar );\n\t\t//float desiredMIPLevel = log2( envMapWidth * sqrt( 3.0 ) ) - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\n\t\t// clamp to allowable LOD ranges.\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n\t}\n\n\tvec3 getLightProbeIndirectRadiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\n\t\t#endif\n\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\n\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#endif\n\n\t\treturn envMapColor.rgb * envMapIntensity;\n\n\t}\n\n#endif\n",
          envmap_vertex:
            "\n#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tvWorldPosition = worldPosition.xyz;\n\n\t#else\n\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n",
          fog_vertex:
            "\n#ifdef USE_FOG\n\n\tfogDepth = -mvPosition.z;\n\n#endif\n",
          fog_pars_vertex:
            "\n#ifdef USE_FOG\n\n\tvarying float fogDepth;\n\n#endif\n",
          fog_fragment:
            "\n#ifdef USE_FOG\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\n\t#endif\n\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n\n#endif\n",
          fog_pars_fragment:
            "\n#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\n\t#endif\n\n#endif\n",
          gradientmap_pars_fragment:
            "\n#ifdef TOON\n\n\tuniform sampler2D gradientMap;\n\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\n\t\t// dotNL will be from -1.0 to 1.0\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\n\t\t#ifdef USE_GRADIENTMAP\n\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\n\t\t#else\n\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\n\t\t#endif\n\n\n\t}\n\n#endif\n",
          lightmap_fragment:
            "\n#ifdef USE_LIGHTMAP\n\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity; // factor of PI should not be present; included here to prevent breakage\n\n#endif\n",
          lightmap_pars_fragment:
            "\n#ifdef USE_LIGHTMAP\n\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n\n#endif\n",
          lights_lambert_vertex:
            "\nvec3 diffuse = vec3( 1.0 );\n\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\n\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\n\nvLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\n\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n\n#if NUM_POINT_LIGHTS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if NUM_SPOT_LIGHTS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\t}\n\n#endif\n\n/*\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\t// TODO (abelnation): implement\n\n\t}\n\n#endif\n*/\n\n#if NUM_DIR_LIGHTS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if NUM_HEMI_LIGHTS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\n\t\t#endif\n\n\t}\n\n#endif\n",
          lights_pars_begin:
            "\nuniform vec3 ambientLightColor;\n\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\n\tvec3 irradiance = ambientLightColor;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI;\n\n\t#endif\n\n\treturn irradiance;\n\n}\n\n#if NUM_DIR_LIGHTS > 0\n\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\n\t}\n\n#endif\n\n\n#if NUM_POINT_LIGHTS > 0\n\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\n\t}\n\n#endif\n\n\n#if NUM_SPOT_LIGHTS > 0\n\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\n\t\tif ( angleCos > spotLight.coneCos ) {\n\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\n\t\t} else {\n\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\n\t\t}\n\t}\n\n#endif\n\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\n\t// Pre-computed values of LinearTransformedCosine approximation of BRDF\n\t// BRDF approximation Texture is 64x64\n\tuniform sampler2D ltc_1; // RGBA Float\n\tuniform sampler2D ltc_2; // RGBA Float\n\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n\n#endif\n\n\n#if NUM_HEMI_LIGHTS > 0\n\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tirradiance *= PI;\n\n\t\t#endif\n\n\t\treturn irradiance;\n\n\t}\n\n#endif\n",
          lights_phong_fragment:
            "\nBlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",
          lights_phong_pars_fragment:
            "\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n\nstruct BlinnPhongMaterial {\n\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n\n};\n\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\t#ifdef TOON\n\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\n\t#else\n\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\n\t#endif\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n\n#define Material_LightProbeLOD( material )\t(0)\n",
          lights_physical_fragment:
            "\nPhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat ); // Burley clearcoat model\n\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",
          lights_physical_pars_fragment:
            "\nstruct PhysicalMaterial {\n\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n\n};\n\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\n\n// Clear coat directional hemishperical reflectance (this approximation should be improved)\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n\n}\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight; // counterclockwise\n\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\n\t\t// LTC Fresnel Approximation by Stephen Hill\n\t\t// http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\n\t}\n\n#endif\n\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n\tvec3 irradiance = dotNL * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n\t#ifndef STANDARD\n\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\n\t#endif\n\n}\n\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\n\t#ifndef STANDARD\n\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\n\t#endif\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\n\n// ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n\n}\n",
          lights_fragment_begin:
            "\n/**\n * This is a template that can be used to light a material, it uses pluggable\n * RenderEquations (RE)for specific lighting scenarios.\n *\n * Instructions for use:\n * - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined\n * - If you have defined an RE_IndirectSpecular, you need to also provide a Material_LightProbeLOD. <---- ???\n * - Create a material parameter that is to be passed as the third parameter to your lighting functions.\n *\n * TODO:\n * - Add area light support.\n * - Add sphere light support.\n * - Add diffuse light probe (irradiance cubemap) support.\n */\n\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tDirectionalLight directionalLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n\tRectAreaLight rectAreaLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t#pragma unroll_loop\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t}\n\n\t#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearCoatRadiance = vec3( 0.0 );\n\n#endif\n",
          lights_fragment_maps:
            "\n#if defined( RE_IndirectDiffuse )\n\n\t#ifdef USE_LIGHTMAP\n\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tlightMapIrradiance *= PI; // factor of PI should not be present; included here to prevent breakage\n\n\t\t#endif\n\n\t\tirradiance += lightMapIrradiance;\n\n\t#endif\n\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tirradiance += getLightProbeIndirectIrradiance( /*lightProbe,*/ geometry, maxMipLevel );\n\n\t#endif\n\n#endif\n\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\n\tradiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\n\n\t#ifndef STANDARD\n\t\tclearCoatRadiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\n\t#endif\n\n#endif\n",
          lights_fragment_end:
            "\n#if defined( RE_IndirectDiffuse )\n\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n\n#endif\n",
          logdepthbuf_fragment:
            "\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n\n#endif\n",
          logdepthbuf_pars_fragment:
            "\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\n#endif\n",
          logdepthbuf_pars_vertex:
            "\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#else\n\n\t\tuniform float logDepthBufFC;\n\n\t#endif\n\n#endif\n",
          logdepthbuf_vertex:
            "\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n\t#else\n\n\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\n\t\tgl_Position.z *= gl_Position.w;\n\n\t#endif\n\n#endif\n",
          map_fragment:
            "\n#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n\n#endif\n",
          map_pars_fragment:
            "\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n",
          map_particle_fragment:
            "\n#ifdef USE_MAP\n\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n\n#endif\n",
          map_particle_pars_fragment:
            "\n#ifdef USE_MAP\n\n\tuniform mat3 uvTransform;\n\tuniform sampler2D map;\n\n#endif\n",
          metalnessmap_fragment:
            "\nfloat metalnessFactor = metalness;\n\n#ifdef USE_METALNESSMAP\n\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\n\t// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tmetalnessFactor *= texelMetalness.b;\n\n#endif\n",
          metalnessmap_pars_fragment:
            "\n#ifdef USE_METALNESSMAP\n\n\tuniform sampler2D metalnessMap;\n\n#endif\n",
          morphnormal_vertex:
            "\n#ifdef USE_MORPHNORMALS\n\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n#endif\n",
          morphtarget_pars_vertex:
            "\n#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif\n",
          morphtarget_vertex:
            "\n#ifdef USE_MORPHTARGETS\n\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n#endif\n",
          normal_fragment_begin:
            "\n#ifdef FLAT_SHADED\n\n\t// Workaround for Adreno/Nexus5 not able able to do dFdx( vViewPosition ) ...\n\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#else\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t#endif\n\n#endif\n",
          normal_fragment_maps:
            "\n#ifdef USE_NORMALMAP\n\n\t#ifdef OBJECTSPACE_NORMALMAP\n\n\t\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\n\n\t\t#ifdef FLIP_SIDED\n\n\t\t\tnormal = - normal;\n\n\t\t#endif\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t#endif\n\n\t\tnormal = normalize( normalMatrix * normal );\n\n\t#else // tangent-space normal map\n\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n\t#endif\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n",
          normalmap_pars_fragment:
            "\n#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\t#ifdef OBJECTSPACE_NORMALMAP\n\n\t\tuniform mat3 normalMatrix;\n\n\t#else\n\n\t\t// Per-Pixel Tangent Space Normal Mapping\n\t\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\t\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\t\tvec2 st0 = dFdx( vUv.st );\n\t\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\n\n\t\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\t\tvec3 N = normalize( surf_norm );\n\t\t\tmat3 tsn = mat3( S, T, N );\n\n\t\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\n\t\t\tmapN.xy *= normalScale;\n\t\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t\treturn normalize( tsn * mapN );\n\n\t\t}\n\n\t#endif\n\n#endif\n",
          packing:
            "\nvec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\n\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\n\nconst float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\n\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\n\nconst float ShiftRight8 = 1. / 256.;\n\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8; // tidy overflow\n\treturn r * PackUpscale;\n}\n\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\n\n// NOTE: viewZ/eyeZ is < 0 when in front of the camera per OpenGL conventions\n\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\n\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",
          premultiplied_alpha_fragment:
            "\n#ifdef PREMULTIPLIED_ALPHA\n\n\t// Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\n\tgl_FragColor.rgb *= gl_FragColor.a;\n\n#endif\n",
          project_vertex:
            "\nvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n\ngl_Position = projectionMatrix * mvPosition;\n",
          dithering_fragment:
            "\n#if defined( DITHERING )\n\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n\n#endif\n",
          dithering_pars_fragment:
            "\n#if defined( DITHERING )\n\n\t// based on https://www.shadertoy.com/view/MslGR8\n\tvec3 dithering( vec3 color ) {\n\t\t//Calculate grid position\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\n\t\t//Shift the individual colors differently, thus making it even harder to see the dithering pattern\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\n\t\t//modify shift acording to grid position.\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\n\t\t//shift the color by dither_shift\n\t\treturn color + dither_shift_RGB;\n\t}\n\n#endif\n",
          roughnessmap_fragment:
            "\nfloat roughnessFactor = roughness;\n\n#ifdef USE_ROUGHNESSMAP\n\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\n\t// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\troughnessFactor *= texelRoughness.g;\n\n#endif\n",
          roughnessmap_pars_fragment:
            "\n#ifdef USE_ROUGHNESSMAP\n\n\tuniform sampler2D roughnessMap;\n\n#endif\n",
          shadowmap_pars_fragment:
            "\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHTS > 0\n\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): create uniforms for area light shadows\n\n\t#endif\n\t*/\n\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\n\t}\n\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\n\t\tvec2 f = fract( uv * size + 0.5 );\n\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\n\t\treturn c;\n\n\t}\n\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\n\t\tfloat shadow = 1.0;\n\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\n\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#else // no percentage-closer filtering:\n\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#endif\n\n\t\t}\n\n\t\treturn shadow;\n\n\t}\n\n\t// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\n\t// vector suitable for 2D texture mapping. This code uses the following layout for the\n\t// 2D texture:\n\t//\n\t// xzXZ\n\t//  y Y\n\t//\n\t// Y - Positive y direction\n\t// y - Negative y direction\n\t// X - Positive x direction\n\t// x - Negative x direction\n\t// Z - Positive z direction\n\t// z - Negative z direction\n\t//\n\t// Source and test bed:\n\t// https://gist.github.com/tschw/da10c43c467ce8afd0c4\n\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\t\t// Number of texels to avoid at the edge of each square\n\n\t\tvec3 absV = abs( v );\n\n\t\t// Intersect unit cube\n\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\n\t\t// Apply scale to avoid seams\n\n\t\t// two texels less per square (one texel will do for NEAREST)\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\t\t// Unwrap\n\n\t\t// space: -1 ... 1 range for each square\n\t\t//\n\t\t// #X##\t\tdim    := ( 4 , 2 )\n\t\t//  # #\t\tcenter := ( 1 , 1 )\n\n\t\tvec2 planar = v.xy;\n\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\n\t\tif ( absV.z >= almostOne ) {\n\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\n\t\t} else if ( absV.x >= almostOne ) {\n\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\n\t\t} else if ( absV.y >= almostOne ) {\n\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\n\t\t}\n\n\t\t// Transform to UV space\n\n\t\t// scale := 0.5 / dim\n\t\t// translate := ( center + 0.5 ) / dim\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n\t}\n\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\n\t\t// for point lights, the uniform @vShadowCoord is re-purposed to hold\n\t\t// the vector from the light to the world-space position of the fragment.\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\n\t\t// dp = normalized distance from light to fragment position\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\n\t\tdp += shadowBias;\n\n\t\t// bd3D = base direction 3D\n\t\tvec3 bd3D = normalize( lightToPosition );\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#else // no percentage-closer filtering\n\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\n\t\t#endif\n\n\t}\n\n#endif\n",
          shadowmap_pars_vertex:
            "\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHTS > 0\n\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): uniforms for area light shadows\n\n\t#endif\n\t*/\n\n#endif\n",
          shadowmap_vertex:
            "\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHTS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\n\t}\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\n\t}\n\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\n\t}\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update vAreaShadowCoord with area light info\n\n\t#endif\n\t*/\n\n#endif\n",
          shadowmask_pars_fragment:
            "\nfloat getShadowMask() {\n\n\tfloat shadow = 1.0;\n\n\t#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHTS > 0\n\n\tDirectionalLight directionalLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t}\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n\n\tSpotLight spotLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\n\t}\n\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n\n\tPointLight pointLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\n\t}\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update shadow for Area light\n\n\t#endif\n\t*/\n\n\t#endif\n\n\treturn shadow;\n\n}\n",
          skinbase_vertex:
            "\n#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif\n",
          skinning_pars_vertex:
            "\n#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n",
          skinning_vertex:
            "\n#ifdef USE_SKINNING\n\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n\n#endif\n",
          skinnormal_vertex:
            "\n#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n#endif\n",
          specularmap_fragment:
            "\nfloat specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif\n",
          specularmap_pars_fragment:
            "\n#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif\n",
          tonemapping_fragment:
            "\n#if defined( TONE_MAPPING )\n\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n\n#endif\n",
          tonemapping_pars_fragment:
            "\n#ifndef saturate\n\t#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\n\n// exposure only\nvec3 LinearToneMapping( vec3 color ) {\n\n\treturn toneMappingExposure * color;\n\n}\n\n// source: https://www.cs.utah.edu/~reinhard/cdrom/\nvec3 ReinhardToneMapping( vec3 color ) {\n\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n\n}\n\n// source: http://filmicgames.com/archives/75\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\n\t// John Hable's filmic operator from Uncharted 2 video game\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n\n}\n\n// source: http://filmicgames.com/archives/75\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\n\t// optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n\n}\n\n// source: https://knarkowicz.wordpress.com/2016/01/06/aces-filmic-tone-mapping-curve/\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n\n}\n",
          uv_pars_fragment:
            "\n#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\n\tvarying vec2 vUv;\n\n#endif\n",
          uv_pars_vertex:
            "\n#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n\n#endif\n",
          uv_vertex:
            "\n#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n#endif\n",
          uv2_pars_fragment:
            "\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvarying vec2 vUv2;\n\n#endif\n",
          uv2_pars_vertex:
            "\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\n#endif\n",
          uv2_vertex:
            "\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvUv2 = uv2;\n\n#endif\n",
          worldpos_vertex:
            "\n#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\n#endif\n",
          background_frag:
            "\nuniform sampler2D t2D;\n\nvarying vec2 vUv;\n\nvoid main() {\n\n\tvec4 texColor = texture2D( t2D, vUv );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n",
          background_vert:
            "\nvarying vec2 vUv;\nuniform mat3 uvTransform;\n\nvoid main() {\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n\n}\n",
          cube_frag:
            "\nuniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\n\nvarying vec3 vWorldDirection;\n\nvoid main() {\n\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\tgl_FragColor.a *= opacity;\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n",
          cube_vert:
            "\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n\tgl_Position.z = gl_Position.w; // set z to camera.far\n\n}\n",
          depth_frag:
            "\n#if DEPTH_PACKING == 3200\n\n\tuniform float opacity;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tdiffuseColor.a = opacity;\n\n\t#endif\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\t#include <logdepthbuf_fragment>\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n\n\t#elif DEPTH_PACKING == 3201\n\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\n\t#endif\n\n}\n",
          depth_vert:
            "\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n}\n",
          distanceRGBA_frag:
            "\n#define DISTANCE\n\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main () {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\n\n\tgl_FragColor = packDepthToRGBA( dist );\n\n}\n",
          distanceRGBA_vert:
            "\n#define DISTANCE\n\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvWorldPosition = worldPosition.xyz;\n\n}\n",
          equirect_frag:
            "\nuniform sampler2D tEquirect;\n\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvec3 direction = normalize( vWorldDirection );\n\n\tvec2 sampleUV;\n\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n",
          equirect_vert:
            "\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n}\n",
          linedashed_frag:
            "\nuniform vec3 diffuse;\nuniform float opacity;\n\nuniform float dashSize;\nuniform float totalSize;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\n\t\tdiscard;\n\n\t}\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\n\toutgoingLight = diffuseColor.rgb; // simple shader\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n",
          linedashed_vert:
            "\nuniform float scale;\nattribute float lineDistance;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <color_vertex>\n\n\tvLineDistance = scale * lineDistance;\n\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n",
          meshbasic_frag:
            "\nuniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\t// accumulation (baked indirect lighting only)\n\t#ifdef USE_LIGHTMAP\n\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\n\t#endif\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n",
          meshbasic_vert:
            "\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_ENVMAP\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n\n}\n",
          meshlambert_frag:
            "\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\nvarying vec3 vLightFront;\n\n#ifdef DOUBLE_SIDED\n\n\tvarying vec3 vLightBack;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\n\t#include <lightmap_fragment>\n\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\n\t#else\n\n\t\treflectedLight.directDiffuse = vLightFront;\n\n\t#endif\n\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n",
          meshlambert_vert:
            "\n#define LAMBERT\n\nvarying vec3 vLightFront;\n\n#ifdef DOUBLE_SIDED\n\n\tvarying vec3 vLightBack;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",
          meshmatcap_frag:
            "\n#define MATCAP\n\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks\n\n\t#ifdef USE_MATCAP\n\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\n\t#else\n\n\t\tvec4 matcapColor = vec4( 1.0 );\n\n\t#endif\n\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n",
          meshmatcap_vert:
            "\n#define MATCAP\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\t\tvNormal = normalize( transformedNormal );\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n}\n",
          meshphong_frag:
            "\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n",
          meshphong_vert:
            "\n#define PHONG\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",
          meshphysical_frag:
            "\n#define PHYSICAL\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n",
          meshphysical_vert:
            "\n#define PHYSICAL\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",
          normal_frag:
            "\n#define NORMAL\n\nuniform float opacity;\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n\nvoid main() {\n\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\n}\n",
          normal_vert:
            "\n#define NORMAL\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\n\tvViewPosition = - mvPosition.xyz;\n\n#endif\n\n}\n",
          points_frag:
            "\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n",
          points_vert:
            "\nuniform float size;\nuniform float scale;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\n\tgl_PointSize = size;\n\n\t#ifdef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\n\t#endif\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n\n}\n",
          shadow_frag:
            "\nuniform vec3 color;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n\nvoid main() {\n\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\n\t#include <fog_fragment>\n\n}\n",
          shadow_vert:
            "\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n\nvoid main() {\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",
          sprite_frag:
            "\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n",
          sprite_vert:
            "\nuniform float rotation;\nuniform vec2 center;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n\t#ifndef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\n\t#endif\n\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\n\tmvPosition.xy += rotatedPosition;\n\n\tgl_Position = projectionMatrix * mvPosition;\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n"
        },
        _ = n(11),
        y = n(8),
        x = n(6),
        b = {
          common: {
            diffuse: { value: new y.a(15658734) },
            opacity: { value: 1 },
            map: { value: null },
            uvTransform: { value: new f.a() },
            alphaMap: { value: null }
          },
          specularmap: { specularMap: { value: null } },
          envmap: {
            envMap: { value: null },
            flipEnvMap: { value: -1 },
            reflectivity: { value: 1 },
            refractionRatio: { value: 0.98 },
            maxMipLevel: { value: 0 }
          },
          aomap: { aoMap: { value: null }, aoMapIntensity: { value: 1 } },
          lightmap: {
            lightMap: { value: null },
            lightMapIntensity: { value: 1 }
          },
          emissivemap: { emissiveMap: { value: null } },
          bumpmap: { bumpMap: { value: null }, bumpScale: { value: 1 } },
          normalmap: {
            normalMap: { value: null },
            normalScale: { value: new x.a(1, 1) }
          },
          displacementmap: {
            displacementMap: { value: null },
            displacementScale: { value: 1 },
            displacementBias: { value: 0 }
          },
          roughnessmap: { roughnessMap: { value: null } },
          metalnessmap: { metalnessMap: { value: null } },
          gradientmap: { gradientMap: { value: null } },
          fog: {
            fogDensity: { value: 25e-5 },
            fogNear: { value: 1 },
            fogFar: { value: 2e3 },
            fogColor: { value: new y.a(16777215) }
          },
          lights: {
            ambientLightColor: { value: [] },
            directionalLights: {
              value: [],
              properties: {
                direction: {},
                color: {},
                shadow: {},
                shadowBias: {},
                shadowRadius: {},
                shadowMapSize: {}
              }
            },
            directionalShadowMap: { value: [] },
            directionalShadowMatrix: { value: [] },
            spotLights: {
              value: [],
              properties: {
                color: {},
                position: {},
                direction: {},
                distance: {},
                coneCos: {},
                penumbraCos: {},
                decay: {},
                shadow: {},
                shadowBias: {},
                shadowRadius: {},
                shadowMapSize: {}
              }
            },
            spotShadowMap: { value: [] },
            spotShadowMatrix: { value: [] },
            pointLights: {
              value: [],
              properties: {
                color: {},
                position: {},
                decay: {},
                distance: {},
                shadow: {},
                shadowBias: {},
                shadowRadius: {},
                shadowMapSize: {},
                shadowCameraNear: {},
                shadowCameraFar: {}
              }
            },
            pointShadowMap: { value: [] },
            pointShadowMatrix: { value: [] },
            hemisphereLights: {
              value: [],
              properties: { direction: {}, skyColor: {}, groundColor: {} }
            },
            rectAreaLights: {
              value: [],
              properties: { color: {}, position: {}, width: {}, height: {} }
            }
          },
          points: {
            diffuse: { value: new y.a(15658734) },
            opacity: { value: 1 },
            size: { value: 1 },
            scale: { value: 1 },
            map: { value: null },
            uvTransform: { value: new f.a() }
          },
          sprite: {
            diffuse: { value: new y.a(15658734) },
            opacity: { value: 1 },
            center: { value: new x.a(0.5, 0.5) },
            rotation: { value: 0 },
            map: { value: null },
            uvTransform: { value: new f.a() }
          }
        },
        w = {
          basic: {
            uniforms: Object(_.b)([
              b.common,
              b.specularmap,
              b.envmap,
              b.aomap,
              b.lightmap,
              b.fog
            ]),
            vertexShader: v.meshbasic_vert,
            fragmentShader: v.meshbasic_frag
          },
          lambert: {
            uniforms: Object(_.b)([
              b.common,
              b.specularmap,
              b.envmap,
              b.aomap,
              b.lightmap,
              b.emissivemap,
              b.fog,
              b.lights,
              { emissive: { value: new y.a(0) } }
            ]),
            vertexShader: v.meshlambert_vert,
            fragmentShader: v.meshlambert_frag
          },
          phong: {
            uniforms: Object(_.b)([
              b.common,
              b.specularmap,
              b.envmap,
              b.aomap,
              b.lightmap,
              b.emissivemap,
              b.bumpmap,
              b.normalmap,
              b.displacementmap,
              b.gradientmap,
              b.fog,
              b.lights,
              {
                emissive: { value: new y.a(0) },
                specular: { value: new y.a(1118481) },
                shininess: { value: 30 }
              }
            ]),
            vertexShader: v.meshphong_vert,
            fragmentShader: v.meshphong_frag
          },
          standard: {
            uniforms: Object(_.b)([
              b.common,
              b.envmap,
              b.aomap,
              b.lightmap,
              b.emissivemap,
              b.bumpmap,
              b.normalmap,
              b.displacementmap,
              b.roughnessmap,
              b.metalnessmap,
              b.fog,
              b.lights,
              {
                emissive: { value: new y.a(0) },
                roughness: { value: 0.5 },
                metalness: { value: 0.5 },
                envMapIntensity: { value: 1 }
              }
            ]),
            vertexShader: v.meshphysical_vert,
            fragmentShader: v.meshphysical_frag
          },
          matcap: {
            uniforms: Object(_.b)([
              b.common,
              b.bumpmap,
              b.normalmap,
              b.displacementmap,
              b.fog,
              { matcap: { value: null } }
            ]),
            vertexShader: v.meshmatcap_vert,
            fragmentShader: v.meshmatcap_frag
          },
          points: {
            uniforms: Object(_.b)([b.points, b.fog]),
            vertexShader: v.points_vert,
            fragmentShader: v.points_frag
          },
          dashed: {
            uniforms: Object(_.b)([
              b.common,
              b.fog,
              {
                scale: { value: 1 },
                dashSize: { value: 1 },
                totalSize: { value: 2 }
              }
            ]),
            vertexShader: v.linedashed_vert,
            fragmentShader: v.linedashed_frag
          },
          depth: {
            uniforms: Object(_.b)([b.common, b.displacementmap]),
            vertexShader: v.depth_vert,
            fragmentShader: v.depth_frag
          },
          normal: {
            uniforms: Object(_.b)([
              b.common,
              b.bumpmap,
              b.normalmap,
              b.displacementmap,
              { opacity: { value: 1 } }
            ]),
            vertexShader: v.normal_vert,
            fragmentShader: v.normal_frag
          },
          sprite: {
            uniforms: Object(_.b)([b.sprite, b.fog]),
            vertexShader: v.sprite_vert,
            fragmentShader: v.sprite_frag
          },
          background: {
            uniforms: {
              uvTransform: { value: new f.a() },
              t2D: { value: null }
            },
            vertexShader: v.background_vert,
            fragmentShader: v.background_frag
          },
          cube: {
            uniforms: {
              tCube: { value: null },
              tFlip: { value: -1 },
              opacity: { value: 1 }
            },
            vertexShader: v.cube_vert,
            fragmentShader: v.cube_frag
          },
          equirect: {
            uniforms: { tEquirect: { value: null } },
            vertexShader: v.equirect_vert,
            fragmentShader: v.equirect_frag
          },
          distanceRGBA: {
            uniforms: Object(_.b)([
              b.common,
              b.displacementmap,
              {
                referencePosition: { value: new u.a() },
                nearDistance: { value: 1 },
                farDistance: { value: 1e3 }
              }
            ]),
            vertexShader: v.distanceRGBA_vert,
            fragmentShader: v.distanceRGBA_frag
          },
          shadow: {
            uniforms: Object(_.b)([
              b.lights,
              b.fog,
              { color: { value: new y.a(0) }, opacity: { value: 1 } }
            ]),
            vertexShader: v.shadow_vert,
            fragmentShader: v.shadow_frag
          }
        };
      w.physical = {
        uniforms: Object(_.b)([
          w.standard.uniforms,
          { clearCoat: { value: 0 }, clearCoatRoughness: { value: 0 } }
        ]),
        vertexShader: v.meshphysical_vert,
        fragmentShader: v.meshphysical_frag
      };
      var T = n(9);
      function M() {
        var t = null,
          e = !1,
          n = null;
        function i(r, a) {
          !1 !== e && (n(r, a), t.requestAnimationFrame(i));
        }
        return {
          start: function() {
            !0 !== e && null !== n && (t.requestAnimationFrame(i), (e = !0));
          },
          stop: function() {
            e = !1;
          },
          setAnimationLoop: function(t) {
            n = t;
          },
          setContext: function(e) {
            t = e;
          }
        };
      }
      function E(t) {
        var e = new WeakMap();
        return {
          get: function(t) {
            return t.isInterleavedBufferAttribute && (t = t.data), e.get(t);
          },
          remove: function(n) {
            n.isInterleavedBufferAttribute && (n = n.data);
            var i = e.get(n);
            i && (t.deleteBuffer(i.buffer), e.delete(n));
          },
          update: function(n, i) {
            n.isInterleavedBufferAttribute && (n = n.data);
            var r = e.get(n);
            void 0 === r
              ? e.set(
                  n,
                  (function(e, n) {
                    var i = e.array,
                      r = e.dynamic ? t.DYNAMIC_DRAW : t.STATIC_DRAW,
                      a = t.createBuffer();
                    t.bindBuffer(n, a),
                      t.bufferData(n, i, r),
                      e.onUploadCallback();
                    var o = t.FLOAT;
                    return (
                      i instanceof Float32Array
                        ? (o = t.FLOAT)
                        : i instanceof Float64Array
                          ? console.warn(
                              "THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."
                            )
                          : i instanceof Uint16Array
                            ? (o = t.UNSIGNED_SHORT)
                            : i instanceof Int16Array
                              ? (o = t.SHORT)
                              : i instanceof Uint32Array
                                ? (o = t.UNSIGNED_INT)
                                : i instanceof Int32Array
                                  ? (o = t.INT)
                                  : i instanceof Int8Array
                                    ? (o = t.BYTE)
                                    : i instanceof Uint8Array &&
                                      (o = t.UNSIGNED_BYTE),
                      {
                        buffer: a,
                        type: o,
                        bytesPerElement: i.BYTES_PER_ELEMENT,
                        version: e.version
                      }
                    );
                  })(n, i)
                )
              : r.version < n.version &&
                ((function(e, n, i) {
                  var r = n.array,
                    a = n.updateRange;
                  t.bindBuffer(i, e),
                    !1 === n.dynamic
                      ? t.bufferData(i, r, t.STATIC_DRAW)
                      : -1 === a.count
                        ? t.bufferSubData(i, 0, r)
                        : 0 === a.count
                          ? console.error(
                              "THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."
                            )
                          : (t.bufferSubData(
                              i,
                              a.offset * r.BYTES_PER_ELEMENT,
                              r.subarray(a.offset, a.offset + a.count)
                            ),
                            (a.count = -1));
                })(r.buffer, n, i),
                (r.version = n.version));
          }
        };
      }
      var S = n(24),
        L = n(20),
        P = n(7);
      function A(t, e, n, i, r, a) {
        S.a.call(this),
          (this.type = "BoxGeometry"),
          (this.parameters = {
            width: t,
            height: e,
            depth: n,
            widthSegments: i,
            heightSegments: r,
            depthSegments: a
          }),
          this.fromBufferGeometry(new R(t, e, n, i, r, a)),
          this.mergeVertices();
      }
      function R(t, e, n, i, r, a) {
        L.a.call(this),
          (this.type = "BoxBufferGeometry"),
          (this.parameters = {
            width: t,
            height: e,
            depth: n,
            widthSegments: i,
            heightSegments: r,
            depthSegments: a
          });
        var o = this;
        (t = t || 1),
          (e = e || 1),
          (n = n || 1),
          (i = Math.floor(i) || 1),
          (r = Math.floor(r) || 1),
          (a = Math.floor(a) || 1);
        var s = [],
          l = [],
          c = [],
          h = [],
          d = 0,
          f = 0;
        function p(t, e, n, i, r, a, p, m, g, v, _) {
          var y,
            x,
            b = a / g,
            w = p / v,
            T = a / 2,
            M = p / 2,
            E = m / 2,
            S = g + 1,
            L = v + 1,
            P = 0,
            A = 0,
            R = new u.a();
          for (x = 0; x < L; x++) {
            var C = x * w - M;
            for (y = 0; y < S; y++) {
              var D = y * b - T;
              (R[t] = D * i),
                (R[e] = C * r),
                (R[n] = E),
                l.push(R.x, R.y, R.z),
                (R[t] = 0),
                (R[e] = 0),
                (R[n] = m > 0 ? 1 : -1),
                c.push(R.x, R.y, R.z),
                h.push(y / g),
                h.push(1 - x / v),
                (P += 1);
            }
          }
          for (x = 0; x < v; x++)
            for (y = 0; y < g; y++) {
              var O = d + y + S * x,
                I = d + y + S * (x + 1),
                N = d + (y + 1) + S * (x + 1),
                U = d + (y + 1) + S * x;
              s.push(O, I, U), s.push(I, N, U), (A += 6);
            }
          o.addGroup(f, A, _), (f += A), (d += P);
        }
        p("z", "y", "x", -1, -1, n, e, t, a, r, 0),
          p("z", "y", "x", 1, -1, n, e, -t, a, r, 1),
          p("x", "z", "y", 1, 1, t, n, e, i, a, 2),
          p("x", "z", "y", 1, -1, t, n, -e, i, a, 3),
          p("x", "y", "z", 1, -1, t, e, n, i, r, 4),
          p("x", "y", "z", -1, -1, t, e, -n, i, r, 5),
          this.setIndex(s),
          this.addAttribute("position", new P.b(l, 3)),
          this.addAttribute("normal", new P.b(c, 3)),
          this.addAttribute("uv", new P.b(h, 2));
      }
      (A.prototype = Object.create(S.a.prototype)),
        (A.prototype.constructor = A),
        (R.prototype = Object.create(L.a.prototype)),
        (R.prototype.constructor = R);
      var C = n(42),
        D = n(32),
        O = n(33);
      function I(t, e, n, r) {
        var a,
          o,
          s = new y.a(0),
          l = 0,
          c = null,
          h = 0;
        function u(t, n) {
          e.buffers.color.setClear(t.r, t.g, t.b, n, r);
        }
        return {
          getClearColor: function() {
            return s;
          },
          setClearColor: function(t, e) {
            s.set(t), u(s, (l = void 0 !== e ? e : 1));
          },
          getClearAlpha: function() {
            return l;
          },
          setClearAlpha: function(t) {
            u(s, (l = t));
          },
          render: function(e, r, d, f) {
            var p = r.background;
            if (
              (null === p
                ? (u(s, l), (c = null), (h = 0))
                : p && p.isColor && (u(p, 1), (f = !0), (c = null), (h = 0)),
              (t.autoClear || f) &&
                t.clear(t.autoClearColor, t.autoClearDepth, t.autoClearStencil),
              p && (p.isCubeTexture || p.isWebGLRenderTargetCube))
            ) {
              void 0 === o &&
                ((o = new O.a(
                  new R(1, 1, 1),
                  new D.a({
                    type: "BackgroundCubeMaterial",
                    uniforms: Object(_.a)(w.cube.uniforms),
                    vertexShader: w.cube.vertexShader,
                    fragmentShader: w.cube.fragmentShader,
                    side: i.g,
                    depthTest: !0,
                    depthWrite: !1,
                    fog: !1
                  })
                )).geometry.removeAttribute("normal"),
                o.geometry.removeAttribute("uv"),
                (o.onBeforeRender = function(t, e, n) {
                  this.matrixWorld.copyPosition(n.matrixWorld);
                }),
                Object.defineProperty(o.material, "map", {
                  get: function() {
                    return this.uniforms.tCube.value;
                  }
                }),
                n.update(o));
              var m = p.isWebGLRenderTargetCube ? p.texture : p;
              (o.material.uniforms.tCube.value = m),
                (o.material.uniforms.tFlip.value = p.isWebGLRenderTargetCube
                  ? 1
                  : -1),
                (c === p && h === m.version) ||
                  ((o.material.needsUpdate = !0), (c = p), (h = m.version)),
                e.unshift(o, o.geometry, o.material, 0, null);
            } else
              p &&
                p.isTexture &&
                (void 0 === a &&
                  ((a = new O.a(
                    new C.a(2, 2),
                    new D.a({
                      type: "BackgroundMaterial",
                      uniforms: Object(_.a)(w.background.uniforms),
                      vertexShader: w.background.vertexShader,
                      fragmentShader: w.background.fragmentShader,
                      side: i.D,
                      depthTest: !1,
                      depthWrite: !1,
                      fog: !1
                    })
                  )).geometry.removeAttribute("normal"),
                  Object.defineProperty(a.material, "map", {
                    get: function() {
                      return this.uniforms.t2D.value;
                    }
                  }),
                  n.update(a)),
                (a.material.uniforms.t2D.value = p),
                !0 === p.matrixAutoUpdate && p.updateMatrix(),
                a.material.uniforms.uvTransform.value.copy(p.matrix),
                (c === p && h === p.version) ||
                  ((a.material.needsUpdate = !0), (c = p), (h = p.version)),
                e.unshift(a, a.geometry, a.material, 0, null));
          }
        };
      }
      function N(t, e, n, i) {
        var r;
        (this.setMode = function(t) {
          r = t;
        }),
          (this.render = function(e, i) {
            t.drawArrays(r, e, i), n.update(i, r);
          }),
          (this.renderInstances = function(a, o, s) {
            var l;
            if (i.isWebGL2) l = t;
            else if (null === (l = e.get("ANGLE_instanced_arrays")))
              return void console.error(
                "THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
              );
            l[i.isWebGL2 ? "drawArraysInstanced" : "drawArraysInstancedANGLE"](
              r,
              o,
              s,
              a.maxInstancedCount
            ),
              n.update(s, r, a.maxInstancedCount);
          });
      }
      function U(t, e, n) {
        var i;
        function r(e) {
          if ("highp" === e) {
            if (
              t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.HIGH_FLOAT)
                .precision > 0 &&
              t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.HIGH_FLOAT)
                .precision > 0
            )
              return "highp";
            e = "mediump";
          }
          return "mediump" === e &&
            t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.MEDIUM_FLOAT)
              .precision > 0 &&
            t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.MEDIUM_FLOAT)
              .precision > 0
            ? "mediump"
            : "lowp";
        }
        var a =
            "undefined" != typeof WebGL2RenderingContext &&
            t instanceof WebGL2RenderingContext,
          o = void 0 !== n.precision ? n.precision : "highp",
          s = r(o);
        s !== o &&
          (console.warn(
            "THREE.WebGLRenderer:",
            o,
            "not supported, using",
            s,
            "instead."
          ),
          (o = s));
        var l = !0 === n.logarithmicDepthBuffer,
          c = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),
          h = t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
          u = t.getParameter(t.MAX_TEXTURE_SIZE),
          d = t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),
          f = t.getParameter(t.MAX_VERTEX_ATTRIBS),
          p = t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),
          m = t.getParameter(t.MAX_VARYING_VECTORS),
          g = t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),
          v = h > 0,
          _ = a || !!e.get("OES_texture_float");
        return {
          isWebGL2: a,
          getMaxAnisotropy: function() {
            if (void 0 !== i) return i;
            var n = e.get("EXT_texture_filter_anisotropic");
            return (i =
              null !== n
                ? t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)
                : 0);
          },
          getMaxPrecision: r,
          precision: o,
          logarithmicDepthBuffer: l,
          maxTextures: c,
          maxVertexTextures: h,
          maxTextureSize: u,
          maxCubemapSize: d,
          maxAttributes: f,
          maxVertexUniforms: p,
          maxVaryings: m,
          maxFragmentUniforms: g,
          vertexTextures: v,
          floatFragmentTextures: _,
          floatVertexTextures: v && _
        };
      }
      function F() {
        var t = this,
          e = null,
          n = 0,
          i = !1,
          r = !1,
          a = new p(),
          o = new f.a(),
          s = { value: null, needsUpdate: !1 };
        function l() {
          s.value !== e && ((s.value = e), (s.needsUpdate = n > 0)),
            (t.numPlanes = n),
            (t.numIntersection = 0);
        }
        function c(e, n, i, r) {
          var l = null !== e ? e.length : 0,
            c = null;
          if (0 !== l) {
            if (((c = s.value), !0 !== r || null === c)) {
              var h = i + 4 * l,
                u = n.matrixWorldInverse;
              o.getNormalMatrix(u),
                (null === c || c.length < h) && (c = new Float32Array(h));
              for (var d = 0, f = i; d !== l; ++d, f += 4)
                a.copy(e[d]).applyMatrix4(u, o),
                  a.normal.toArray(c, f),
                  (c[f + 3] = a.constant);
            }
            (s.value = c), (s.needsUpdate = !0);
          }
          return (t.numPlanes = l), c;
        }
        (this.uniform = s),
          (this.numPlanes = 0),
          (this.numIntersection = 0),
          (this.init = function(t, r, a) {
            var o = 0 !== t.length || r || 0 !== n || i;
            return (i = r), (e = c(t, a, 0)), (n = t.length), o;
          }),
          (this.beginShadows = function() {
            (r = !0), c(null);
          }),
          (this.endShadows = function() {
            (r = !1), l();
          }),
          (this.setState = function(t, a, o, h, u, d) {
            if (!i || null === t || 0 === t.length || (r && !o))
              r ? c(null) : l();
            else {
              var f = r ? 0 : n,
                p = 4 * f,
                m = u.clippingState || null;
              (s.value = m), (m = c(t, h, p, d));
              for (var g = 0; g !== p; ++g) m[g] = e[g];
              (u.clippingState = m),
                (this.numIntersection = a ? this.numPlanes : 0),
                (this.numPlanes += f);
            }
          });
      }
      function z(t) {
        var e = {};
        return {
          get: function(n) {
            if (void 0 !== e[n]) return e[n];
            var i;
            switch (n) {
              case "WEBGL_depth_texture":
                i =
                  t.getExtension("WEBGL_depth_texture") ||
                  t.getExtension("MOZ_WEBGL_depth_texture") ||
                  t.getExtension("WEBKIT_WEBGL_depth_texture");
                break;
              case "EXT_texture_filter_anisotropic":
                i =
                  t.getExtension("EXT_texture_filter_anisotropic") ||
                  t.getExtension("MOZ_EXT_texture_filter_anisotropic") ||
                  t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                break;
              case "WEBGL_compressed_texture_s3tc":
                i =
                  t.getExtension("WEBGL_compressed_texture_s3tc") ||
                  t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") ||
                  t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                break;
              case "WEBGL_compressed_texture_pvrtc":
                i =
                  t.getExtension("WEBGL_compressed_texture_pvrtc") ||
                  t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                break;
              default:
                i = t.getExtension(n);
            }
            return (
              null === i &&
                console.warn(
                  "THREE.WebGLRenderer: " + n + " extension not supported."
                ),
              (e[n] = i),
              i
            );
          }
        };
      }
      var k = n(28);
      function B(t, e, n) {
        var i = {},
          r = {};
        function a(t) {
          var o = t.target,
            s = i[o.id];
          for (var l in (null !== s.index && e.remove(s.index), s.attributes))
            e.remove(s.attributes[l]);
          o.removeEventListener("dispose", a), delete i[o.id];
          var c = r[s.id];
          c && (e.remove(c), delete r[s.id]), n.memory.geometries--;
        }
        return {
          get: function(t, e) {
            var r = i[e.id];
            return (
              r ||
              (e.addEventListener("dispose", a),
              e.isBufferGeometry
                ? (r = e)
                : e.isGeometry &&
                  (void 0 === e._bufferGeometry &&
                    (e._bufferGeometry = new L.a().setFromObject(t)),
                  (r = e._bufferGeometry)),
              (i[e.id] = r),
              n.memory.geometries++,
              r)
            );
          },
          update: function(n) {
            var i = n.index,
              r = n.attributes;
            for (var a in (null !== i && e.update(i, t.ELEMENT_ARRAY_BUFFER),
            r))
              e.update(r[a], t.ARRAY_BUFFER);
            var o = n.morphAttributes;
            for (var a in o)
              for (var s = o[a], l = 0, c = s.length; l < c; l++)
                e.update(s[l], t.ARRAY_BUFFER);
          },
          getWireframeAttribute: function(n) {
            var i = r[n.id];
            if (i) return i;
            var a,
              o = [],
              s = n.index,
              l = n.attributes;
            if (null !== s)
              for (var c = 0, h = (a = s.array).length; c < h; c += 3) {
                var u = a[c + 0],
                  d = a[c + 1],
                  f = a[c + 2];
                o.push(u, d, d, f, f, u);
              }
            else
              for (
                c = 0, h = (a = l.position.array).length / 3 - 1;
                c < h;
                c += 3
              )
                (u = c + 0), (d = c + 1), (f = c + 2), o.push(u, d, d, f, f, u);
            return (
              (i = new (Object(k.a)(o) > 65535 ? P.d : P.c)(o, 1)),
              e.update(i, t.ELEMENT_ARRAY_BUFFER),
              (r[n.id] = i),
              i
            );
          }
        };
      }
      function G(t, e, n, i) {
        var r, a, o;
        (this.setMode = function(t) {
          r = t;
        }),
          (this.setIndex = function(t) {
            (a = t.type), (o = t.bytesPerElement);
          }),
          (this.render = function(e, i) {
            t.drawElements(r, i, a, e * o), n.update(i, r);
          }),
          (this.renderInstances = function(s, l, c) {
            var h;
            if (i.isWebGL2) h = t;
            else if (null === (h = e.get("ANGLE_instanced_arrays")))
              return void console.error(
                "THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
              );
            h[
              i.isWebGL2
                ? "drawElementsInstanced"
                : "drawElementsInstancedANGLE"
            ](r, c, a, l * o, s.maxInstancedCount),
              n.update(c, r, s.maxInstancedCount);
          });
      }
      function V(t) {
        var e = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
        return {
          memory: { geometries: 0, textures: 0 },
          render: e,
          programs: null,
          autoReset: !0,
          reset: function() {
            e.frame++,
              (e.calls = 0),
              (e.triangles = 0),
              (e.points = 0),
              (e.lines = 0);
          },
          update: function(n, i, r) {
            switch (((r = r || 1), e.calls++, i)) {
              case t.TRIANGLES:
                e.triangles += r * (n / 3);
                break;
              case t.TRIANGLE_STRIP:
              case t.TRIANGLE_FAN:
                e.triangles += r * (n - 2);
                break;
              case t.LINES:
                e.lines += r * (n / 2);
                break;
              case t.LINE_STRIP:
                e.lines += r * (n - 1);
                break;
              case t.LINE_LOOP:
                e.lines += r * n;
                break;
              case t.POINTS:
                e.points += r * n;
                break;
              default:
                console.error("THREE.WebGLInfo: Unknown draw mode:", i);
            }
          }
        };
      }
      function H(t, e) {
        return Math.abs(e[1]) - Math.abs(t[1]);
      }
      function W(t) {
        var e = {},
          n = new Float32Array(8);
        return {
          update: function(i, r, a, o) {
            var s = i.morphTargetInfluences,
              l = s.length,
              c = e[r.id];
            if (void 0 === c) {
              c = [];
              for (var h = 0; h < l; h++) c[h] = [h, 0];
              e[r.id] = c;
            }
            var u = a.morphTargets && r.morphAttributes.position,
              d = a.morphNormals && r.morphAttributes.normal;
            for (h = 0; h < l; h++)
              0 !== (f = c[h])[1] &&
                (u && r.removeAttribute("morphTarget" + h),
                d && r.removeAttribute("morphNormal" + h));
            for (h = 0; h < l; h++) ((f = c[h])[0] = h), (f[1] = s[h]);
            for (c.sort(H), h = 0; h < 8; h++) {
              var f;
              if ((f = c[h])) {
                var p = f[0],
                  m = f[1];
                if (m) {
                  u && r.addAttribute("morphTarget" + h, u[p]),
                    d && r.addAttribute("morphNormal" + h, d[p]),
                    (n[h] = m);
                  continue;
                }
              }
              n[h] = 0;
            }
            o.getUniforms().setValue(t, "morphTargetInfluences", n);
          }
        };
      }
      function X(t, e) {
        var n = {};
        return {
          update: function(i) {
            var r = e.render.frame,
              a = i.geometry,
              o = t.get(i, a);
            return (
              n[o.id] !== r &&
                (a.isGeometry && o.updateFromObject(i),
                t.update(o),
                (n[o.id] = r)),
              o
            );
          },
          dispose: function() {
            n = {};
          }
        };
      }
      function j(t, e, n, r, o, s, l, c, h, u) {
        (t = void 0 !== t ? t : []),
          (e = void 0 !== e ? e : i.l),
          a.a.call(this, t, e, n, r, o, s, l, c, h, u),
          (this.flipY = !1);
      }
      function Y(t, e, n, r) {
        a.a.call(this, null),
          (this.image = { data: t, width: e, height: n, depth: r }),
          (this.magFilter = i.Y),
          (this.minFilter = i.Y),
          (this.generateMipmaps = !1),
          (this.flipY = !1);
      }
      (j.prototype = Object.create(a.a.prototype)),
        (j.prototype.constructor = j),
        (j.prototype.isCubeTexture = !0),
        Object.defineProperty(j.prototype, "images", {
          get: function() {
            return this.image;
          },
          set: function(t) {
            this.image = t;
          }
        }),
        (Y.prototype = Object.create(a.a.prototype)),
        (Y.prototype.constructor = Y),
        (Y.prototype.isDataTexture3D = !0);
      var q = new a.a(),
        Z = new Y(),
        J = new j();
      function K() {
        (this.seq = []), (this.map = {});
      }
      var Q = [],
        $ = [],
        tt = new Float32Array(16),
        et = new Float32Array(9),
        nt = new Float32Array(4);
      function it(t, e, n) {
        var i = t[0];
        if (i <= 0 || i > 0) return t;
        var r = e * n,
          a = Q[r];
        if (
          (void 0 === a && ((a = new Float32Array(r)), (Q[r] = a)), 0 !== e)
        ) {
          i.toArray(a, 0);
          for (var o = 1, s = 0; o !== e; ++o) (s += n), t[o].toArray(a, s);
        }
        return a;
      }
      function rt(t, e) {
        if (t.length !== e.length) return !1;
        for (var n = 0, i = t.length; n < i; n++) if (t[n] !== e[n]) return !1;
        return !0;
      }
      function at(t, e) {
        for (var n = 0, i = e.length; n < i; n++) t[n] = e[n];
      }
      function ot(t, e) {
        var n = $[e];
        void 0 === n && ((n = new Int32Array(e)), ($[e] = n));
        for (var i = 0; i !== e; ++i) n[i] = t.allocTextureUnit();
        return n;
      }
      function st(t, e) {
        var n = this.cache;
        n[0] !== e && (t.uniform1f(this.addr, e), (n[0] = e));
      }
      function lt(t, e) {
        var n = this.cache;
        n[0] !== e && (t.uniform1i(this.addr, e), (n[0] = e));
      }
      function ct(t, e) {
        var n = this.cache;
        if (void 0 !== e.x)
          (n[0] === e.x && n[1] === e.y) ||
            (t.uniform2f(this.addr, e.x, e.y), (n[0] = e.x), (n[1] = e.y));
        else {
          if (rt(n, e)) return;
          t.uniform2fv(this.addr, e), at(n, e);
        }
      }
      function ht(t, e) {
        var n = this.cache;
        if (void 0 !== e.x)
          (n[0] === e.x && n[1] === e.y && n[2] === e.z) ||
            (t.uniform3f(this.addr, e.x, e.y, e.z),
            (n[0] = e.x),
            (n[1] = e.y),
            (n[2] = e.z));
        else if (void 0 !== e.r)
          (n[0] === e.r && n[1] === e.g && n[2] === e.b) ||
            (t.uniform3f(this.addr, e.r, e.g, e.b),
            (n[0] = e.r),
            (n[1] = e.g),
            (n[2] = e.b));
        else {
          if (rt(n, e)) return;
          t.uniform3fv(this.addr, e), at(n, e);
        }
      }
      function ut(t, e) {
        var n = this.cache;
        if (void 0 !== e.x)
          (n[0] === e.x && n[1] === e.y && n[2] === e.z && n[3] === e.w) ||
            (t.uniform4f(this.addr, e.x, e.y, e.z, e.w),
            (n[0] = e.x),
            (n[1] = e.y),
            (n[2] = e.z),
            (n[3] = e.w));
        else {
          if (rt(n, e)) return;
          t.uniform4fv(this.addr, e), at(n, e);
        }
      }
      function dt(t, e) {
        var n = this.cache,
          i = e.elements;
        if (void 0 === i) {
          if (rt(n, e)) return;
          t.uniformMatrix2fv(this.addr, !1, e), at(n, e);
        } else {
          if (rt(n, i)) return;
          nt.set(i), t.uniformMatrix2fv(this.addr, !1, nt), at(n, i);
        }
      }
      function ft(t, e) {
        var n = this.cache,
          i = e.elements;
        if (void 0 === i) {
          if (rt(n, e)) return;
          t.uniformMatrix3fv(this.addr, !1, e), at(n, e);
        } else {
          if (rt(n, i)) return;
          et.set(i), t.uniformMatrix3fv(this.addr, !1, et), at(n, i);
        }
      }
      function pt(t, e) {
        var n = this.cache,
          i = e.elements;
        if (void 0 === i) {
          if (rt(n, e)) return;
          t.uniformMatrix4fv(this.addr, !1, e), at(n, e);
        } else {
          if (rt(n, i)) return;
          tt.set(i), t.uniformMatrix4fv(this.addr, !1, tt), at(n, i);
        }
      }
      function mt(t, e, n) {
        var i = this.cache,
          r = n.allocTextureUnit();
        i[0] !== r && (t.uniform1i(this.addr, r), (i[0] = r)),
          n.setTexture2D(e || q, r);
      }
      function gt(t, e, n) {
        var i = this.cache,
          r = n.allocTextureUnit();
        i[0] !== r && (t.uniform1i(this.addr, r), (i[0] = r)),
          n.setTexture3D(e || Z, r);
      }
      function vt(t, e, n) {
        var i = this.cache,
          r = n.allocTextureUnit();
        i[0] !== r && (t.uniform1i(this.addr, r), (i[0] = r)),
          n.setTextureCube(e || J, r);
      }
      function _t(t, e) {
        var n = this.cache;
        rt(n, e) || (t.uniform2iv(this.addr, e), at(n, e));
      }
      function yt(t, e) {
        var n = this.cache;
        rt(n, e) || (t.uniform3iv(this.addr, e), at(n, e));
      }
      function xt(t, e) {
        var n = this.cache;
        rt(n, e) || (t.uniform4iv(this.addr, e), at(n, e));
      }
      function bt(t, e) {
        var n = this.cache;
        rt(n, e) || (t.uniform1fv(this.addr, e), at(n, e));
      }
      function wt(t, e) {
        var n = this.cache;
        rt(n, e) || (t.uniform1iv(this.addr, e), at(n, e));
      }
      function Tt(t, e) {
        var n = this.cache,
          i = it(e, this.size, 2);
        rt(n, i) || (t.uniform2fv(this.addr, i), this.updateCache(i));
      }
      function Mt(t, e) {
        var n = this.cache,
          i = it(e, this.size, 3);
        rt(n, i) || (t.uniform3fv(this.addr, i), this.updateCache(i));
      }
      function Et(t, e) {
        var n = this.cache,
          i = it(e, this.size, 4);
        rt(n, i) || (t.uniform4fv(this.addr, i), this.updateCache(i));
      }
      function St(t, e) {
        var n = this.cache,
          i = it(e, this.size, 4);
        rt(n, i) || (t.uniformMatrix2fv(this.addr, !1, i), this.updateCache(i));
      }
      function Lt(t, e) {
        var n = this.cache,
          i = it(e, this.size, 9);
        rt(n, i) || (t.uniformMatrix3fv(this.addr, !1, i), this.updateCache(i));
      }
      function Pt(t, e) {
        var n = this.cache,
          i = it(e, this.size, 16);
        rt(n, i) || (t.uniformMatrix4fv(this.addr, !1, i), this.updateCache(i));
      }
      function At(t, e, n) {
        var i = this.cache,
          r = e.length,
          a = ot(n, r);
        !1 === rt(i, a) && (t.uniform1iv(this.addr, a), at(i, a));
        for (var o = 0; o !== r; ++o) n.setTexture2D(e[o] || q, a[o]);
      }
      function Rt(t, e, n) {
        var i = this.cache,
          r = e.length,
          a = ot(n, r);
        !1 === rt(i, a) && (t.uniform1iv(this.addr, a), at(i, a));
        for (var o = 0; o !== r; ++o) n.setTextureCube(e[o] || J, a[o]);
      }
      function Ct(t, e, n) {
        (this.id = t),
          (this.addr = n),
          (this.cache = []),
          (this.setValue = (function(t) {
            switch (t) {
              case 5126:
                return st;
              case 35664:
                return ct;
              case 35665:
                return ht;
              case 35666:
                return ut;
              case 35674:
                return dt;
              case 35675:
                return ft;
              case 35676:
                return pt;
              case 35678:
              case 36198:
                return mt;
              case 35679:
                return gt;
              case 35680:
                return vt;
              case 5124:
              case 35670:
                return lt;
              case 35667:
              case 35671:
                return _t;
              case 35668:
              case 35672:
                return yt;
              case 35669:
              case 35673:
                return xt;
            }
          })(e.type));
      }
      function Dt(t, e, n) {
        (this.id = t),
          (this.addr = n),
          (this.cache = []),
          (this.size = e.size),
          (this.setValue = (function(t) {
            switch (t) {
              case 5126:
                return bt;
              case 35664:
                return Tt;
              case 35665:
                return Mt;
              case 35666:
                return Et;
              case 35674:
                return St;
              case 35675:
                return Lt;
              case 35676:
                return Pt;
              case 35678:
                return At;
              case 35680:
                return Rt;
              case 5124:
              case 35670:
                return wt;
              case 35667:
              case 35671:
                return _t;
              case 35668:
              case 35672:
                return yt;
              case 35669:
              case 35673:
                return xt;
            }
          })(e.type));
      }
      function Ot(t) {
        (this.id = t), K.call(this);
      }
      (Dt.prototype.updateCache = function(t) {
        var e = this.cache;
        t instanceof Float32Array &&
          e.length !== t.length &&
          (this.cache = new Float32Array(t.length)),
          at(e, t);
      }),
        (Ot.prototype.setValue = function(t, e, n) {
          for (var i = this.seq, r = 0, a = i.length; r !== a; ++r) {
            var o = i[r];
            o.setValue(t, e[o.id], n);
          }
        });
      var It = /([\w\d_]+)(\])?(\[|\.)?/g;
      function Nt(t, e) {
        t.seq.push(e), (t.map[e.id] = e);
      }
      function Ut(t, e, n) {
        var i = t.name,
          r = i.length;
        for (It.lastIndex = 0; ; ) {
          var a = It.exec(i),
            o = It.lastIndex,
            s = a[1],
            l = "]" === a[2],
            c = a[3];
          if ((l && (s |= 0), void 0 === c || ("[" === c && o + 2 === r))) {
            Nt(n, void 0 === c ? new Ct(s, t, e) : new Dt(s, t, e));
            break;
          }
          var h = n.map[s];
          void 0 === h && Nt(n, (h = new Ot(s))), (n = h);
        }
      }
      function Ft(t, e, n) {
        K.call(this), (this.renderer = n);
        for (
          var i = t.getProgramParameter(e, t.ACTIVE_UNIFORMS), r = 0;
          r < i;
          ++r
        ) {
          var a = t.getActiveUniform(e, r);
          Ut(a, t.getUniformLocation(e, a.name), this);
        }
      }
      function zt(t, e, n) {
        var i = t.createShader(e);
        return (
          t.shaderSource(i, n),
          t.compileShader(i),
          !1 === t.getShaderParameter(i, t.COMPILE_STATUS) &&
            console.error("THREE.WebGLShader: Shader couldn't compile."),
          "" !== t.getShaderInfoLog(i) &&
            console.warn(
              "THREE.WebGLShader: gl.getShaderInfoLog()",
              e === t.VERTEX_SHADER ? "vertex" : "fragment",
              t.getShaderInfoLog(i),
              (function(t) {
                for (var e = t.split("\n"), n = 0; n < e.length; n++)
                  e[n] = n + 1 + ": " + e[n];
                return e.join("\n");
              })(n)
            ),
          i
        );
      }
      (Ft.prototype.setValue = function(t, e, n) {
        var i = this.map[e];
        void 0 !== i && i.setValue(t, n, this.renderer);
      }),
        (Ft.prototype.setOptional = function(t, e, n) {
          var i = e[n];
          void 0 !== i && this.setValue(t, n, i);
        }),
        (Ft.upload = function(t, e, n, i) {
          for (var r = 0, a = e.length; r !== a; ++r) {
            var o = e[r],
              s = n[o.id];
            !1 !== s.needsUpdate && o.setValue(t, s.value, i);
          }
        }),
        (Ft.seqWithValue = function(t, e) {
          for (var n = [], i = 0, r = t.length; i !== r; ++i) {
            var a = t[i];
            a.id in e && n.push(a);
          }
          return n;
        });
      var kt = 0;
      function Bt(t) {
        switch (t) {
          case i.L:
            return ["Linear", "( value )"];
          case i.sc:
            return ["sRGB", "( value )"];
          case i.Mb:
            return ["RGBE", "( value )"];
          case i.Pb:
            return ["RGBM", "( value, 7.0 )"];
          case i.Ob:
            return ["RGBM", "( value, 16.0 )"];
          case i.Lb:
            return ["RGBD", "( value, 256.0 )"];
          case i.E:
            return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
          default:
            throw new Error("unsupported encoding: " + t);
        }
      }
      function Gt(t, e) {
        var n = Bt(e);
        return (
          "vec4 " +
          t +
          "( vec4 value ) { return " +
          n[0] +
          "ToLinear" +
          n[1] +
          "; }"
        );
      }
      function Vt(t) {
        return "" !== t;
      }
      function Ht(t, e) {
        return t
          .replace(/NUM_DIR_LIGHTS/g, e.numDirLights)
          .replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights)
          .replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights)
          .replace(/NUM_POINT_LIGHTS/g, e.numPointLights)
          .replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights);
      }
      function Wt(t, e) {
        return t
          .replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes)
          .replace(
            /UNION_CLIPPING_PLANES/g,
            e.numClippingPlanes - e.numClipIntersection
          );
      }
      function Xt(t) {
        return t.replace(/^[ \t]*#include +<([\w\d.\/]+)>/gm, function(t, e) {
          var n = v[e];
          if (void 0 === n)
            throw new Error("Can not resolve #include <" + e + ">");
          return Xt(n);
        });
      }
      function jt(t) {
        return t.replace(
          /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,
          function(t, e, n, i) {
            for (var r = "", a = parseInt(e); a < parseInt(n); a++)
              r += i.replace(/\[ i \]/g, "[ " + a + " ]");
            return r;
          }
        );
      }
      function Yt(t, e, n, r, a, o, s) {
        var l = t.context,
          c = r.defines,
          h = a.vertexShader,
          u = a.fragmentShader,
          d = "SHADOWMAP_TYPE_BASIC";
        o.shadowMapType === i.nb
          ? (d = "SHADOWMAP_TYPE_PCF")
          : o.shadowMapType === i.ob && (d = "SHADOWMAP_TYPE_PCF_SOFT");
        var f = "ENVMAP_TYPE_CUBE",
          p = "ENVMAP_MODE_REFLECTION",
          m = "ENVMAP_BLENDING_MULTIPLY";
        if (o.envMap) {
          switch (r.envMap.mapping) {
            case i.l:
            case i.m:
              f = "ENVMAP_TYPE_CUBE";
              break;
            case i.n:
            case i.o:
              f = "ENVMAP_TYPE_CUBE_UV";
              break;
            case i.z:
            case i.A:
              f = "ENVMAP_TYPE_EQUIREC";
              break;
            case i.Zb:
              f = "ENVMAP_TYPE_SPHERE";
          }
          switch (r.envMap.mapping) {
            case i.m:
            case i.A:
              p = "ENVMAP_MODE_REFRACTION";
          }
          switch (r.combine) {
            case i.X:
              m = "ENVMAP_BLENDING_MULTIPLY";
              break;
            case i.V:
              m = "ENVMAP_BLENDING_MIX";
              break;
            case i.c:
              m = "ENVMAP_BLENDING_ADD";
          }
        }
        var g,
          _,
          y,
          x,
          b,
          w = t.gammaFactor > 0 ? t.gammaFactor : 1,
          T = s.isWebGL2
            ? ""
            : (function(t, e, n) {
                return [
                  (t = t || {}).derivatives ||
                  e.envMapCubeUV ||
                  e.bumpMap ||
                  (e.normalMap && !e.objectSpaceNormalMap) ||
                  e.flatShading
                    ? "#extension GL_OES_standard_derivatives : enable"
                    : "",
                  (t.fragDepth || e.logarithmicDepthBuffer) &&
                  n.get("EXT_frag_depth")
                    ? "#extension GL_EXT_frag_depth : enable"
                    : "",
                  t.drawBuffers && n.get("WEBGL_draw_buffers")
                    ? "#extension GL_EXT_draw_buffers : require"
                    : "",
                  (t.shaderTextureLOD || e.envMap) &&
                  n.get("EXT_shader_texture_lod")
                    ? "#extension GL_EXT_shader_texture_lod : enable"
                    : ""
                ]
                  .filter(Vt)
                  .join("\n");
              })(r.extensions, o, e),
          M = (function(t) {
            var e = [];
            for (var n in t) {
              var i = t[n];
              !1 !== i && e.push("#define " + n + " " + i);
            }
            return e.join("\n");
          })(c),
          E = l.createProgram();
        if (
          (r.isRawShaderMaterial
            ? ((g = [M].filter(Vt).join("\n")).length > 0 && (g += "\n"),
              (_ = [T, M].filter(Vt).join("\n")).length > 0 && (_ += "\n"))
            : ((g = [
                "precision " + o.precision + " float;",
                "precision " + o.precision + " int;",
                "#define SHADER_NAME " + a.name,
                M,
                o.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "",
                "#define GAMMA_FACTOR " + w,
                "#define MAX_BONES " + o.maxBones,
                o.useFog && o.fog ? "#define USE_FOG" : "",
                o.useFog && o.fogExp ? "#define FOG_EXP2" : "",
                o.map ? "#define USE_MAP" : "",
                o.envMap ? "#define USE_ENVMAP" : "",
                o.envMap ? "#define " + p : "",
                o.lightMap ? "#define USE_LIGHTMAP" : "",
                o.aoMap ? "#define USE_AOMAP" : "",
                o.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
                o.bumpMap ? "#define USE_BUMPMAP" : "",
                o.normalMap ? "#define USE_NORMALMAP" : "",
                o.normalMap && o.objectSpaceNormalMap
                  ? "#define OBJECTSPACE_NORMALMAP"
                  : "",
                o.displacementMap && o.supportsVertexTextures
                  ? "#define USE_DISPLACEMENTMAP"
                  : "",
                o.specularMap ? "#define USE_SPECULARMAP" : "",
                o.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
                o.metalnessMap ? "#define USE_METALNESSMAP" : "",
                o.alphaMap ? "#define USE_ALPHAMAP" : "",
                o.vertexColors ? "#define USE_COLOR" : "",
                o.flatShading ? "#define FLAT_SHADED" : "",
                o.skinning ? "#define USE_SKINNING" : "",
                o.useVertexTexture ? "#define BONE_TEXTURE" : "",
                o.morphTargets ? "#define USE_MORPHTARGETS" : "",
                o.morphNormals && !1 === o.flatShading
                  ? "#define USE_MORPHNORMALS"
                  : "",
                o.doubleSided ? "#define DOUBLE_SIDED" : "",
                o.flipSided ? "#define FLIP_SIDED" : "",
                o.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
                o.shadowMapEnabled ? "#define " + d : "",
                o.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
                o.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
                o.logarithmicDepthBuffer &&
                (s.isWebGL2 || e.get("EXT_frag_depth"))
                  ? "#define USE_LOGDEPTHBUF_EXT"
                  : "",
                "uniform mat4 modelMatrix;",
                "uniform mat4 modelViewMatrix;",
                "uniform mat4 projectionMatrix;",
                "uniform mat4 viewMatrix;",
                "uniform mat3 normalMatrix;",
                "uniform vec3 cameraPosition;",
                "attribute vec3 position;",
                "attribute vec3 normal;",
                "attribute vec2 uv;",
                "#ifdef USE_COLOR",
                "\tattribute vec3 color;",
                "#endif",
                "#ifdef USE_MORPHTARGETS",
                "\tattribute vec3 morphTarget0;",
                "\tattribute vec3 morphTarget1;",
                "\tattribute vec3 morphTarget2;",
                "\tattribute vec3 morphTarget3;",
                "\t#ifdef USE_MORPHNORMALS",
                "\t\tattribute vec3 morphNormal0;",
                "\t\tattribute vec3 morphNormal1;",
                "\t\tattribute vec3 morphNormal2;",
                "\t\tattribute vec3 morphNormal3;",
                "\t#else",
                "\t\tattribute vec3 morphTarget4;",
                "\t\tattribute vec3 morphTarget5;",
                "\t\tattribute vec3 morphTarget6;",
                "\t\tattribute vec3 morphTarget7;",
                "\t#endif",
                "#endif",
                "#ifdef USE_SKINNING",
                "\tattribute vec4 skinIndex;",
                "\tattribute vec4 skinWeight;",
                "#endif",
                "\n"
              ]
                .filter(Vt)
                .join("\n")),
              (_ = [
                T,
                "precision " + o.precision + " float;",
                "precision " + o.precision + " int;",
                "#define SHADER_NAME " + a.name,
                M,
                o.alphaTest
                  ? "#define ALPHATEST " +
                    o.alphaTest +
                    (o.alphaTest % 1 ? "" : ".0")
                  : "",
                "#define GAMMA_FACTOR " + w,
                o.useFog && o.fog ? "#define USE_FOG" : "",
                o.useFog && o.fogExp ? "#define FOG_EXP2" : "",
                o.map ? "#define USE_MAP" : "",
                o.matcap ? "#define USE_MATCAP" : "",
                o.envMap ? "#define USE_ENVMAP" : "",
                o.envMap ? "#define " + f : "",
                o.envMap ? "#define " + p : "",
                o.envMap ? "#define " + m : "",
                o.lightMap ? "#define USE_LIGHTMAP" : "",
                o.aoMap ? "#define USE_AOMAP" : "",
                o.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
                o.bumpMap ? "#define USE_BUMPMAP" : "",
                o.normalMap ? "#define USE_NORMALMAP" : "",
                o.normalMap && o.objectSpaceNormalMap
                  ? "#define OBJECTSPACE_NORMALMAP"
                  : "",
                o.specularMap ? "#define USE_SPECULARMAP" : "",
                o.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
                o.metalnessMap ? "#define USE_METALNESSMAP" : "",
                o.alphaMap ? "#define USE_ALPHAMAP" : "",
                o.vertexColors ? "#define USE_COLOR" : "",
                o.gradientMap ? "#define USE_GRADIENTMAP" : "",
                o.flatShading ? "#define FLAT_SHADED" : "",
                o.doubleSided ? "#define DOUBLE_SIDED" : "",
                o.flipSided ? "#define FLIP_SIDED" : "",
                o.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
                o.shadowMapEnabled ? "#define " + d : "",
                o.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
                o.physicallyCorrectLights
                  ? "#define PHYSICALLY_CORRECT_LIGHTS"
                  : "",
                o.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
                o.logarithmicDepthBuffer &&
                (s.isWebGL2 || e.get("EXT_frag_depth"))
                  ? "#define USE_LOGDEPTHBUF_EXT"
                  : "",
                o.envMap && (s.isWebGL2 || e.get("EXT_shader_texture_lod"))
                  ? "#define TEXTURE_LOD_EXT"
                  : "",
                "uniform mat4 viewMatrix;",
                "uniform vec3 cameraPosition;",
                o.toneMapping !== i.eb ? "#define TONE_MAPPING" : "",
                o.toneMapping !== i.eb ? v.tonemapping_pars_fragment : "",
                o.toneMapping !== i.eb
                  ? (function(t, e) {
                      var n;
                      switch (e) {
                        case i.P:
                          n = "Linear";
                          break;
                        case i.Vb:
                          n = "Reinhard";
                          break;
                        case i.jc:
                          n = "Uncharted2";
                          break;
                        case i.j:
                          n = "OptimizedCineon";
                          break;
                        case i.a:
                          n = "ACESFilmic";
                          break;
                        default:
                          throw new Error("unsupported toneMapping: " + e);
                      }
                      return (
                        "vec3 " +
                        t +
                        "( vec3 color ) { return " +
                        n +
                        "ToneMapping( color ); }"
                      );
                    })("toneMapping", o.toneMapping)
                  : "",
                o.dithering ? "#define DITHERING" : "",
                o.outputEncoding ||
                o.mapEncoding ||
                o.matcapEncoding ||
                o.envMapEncoding ||
                o.emissiveMapEncoding
                  ? v.encodings_pars_fragment
                  : "",
                o.mapEncoding ? Gt("mapTexelToLinear", o.mapEncoding) : "",
                o.matcapEncoding
                  ? Gt("matcapTexelToLinear", o.matcapEncoding)
                  : "",
                o.envMapEncoding
                  ? Gt("envMapTexelToLinear", o.envMapEncoding)
                  : "",
                o.emissiveMapEncoding
                  ? Gt("emissiveMapTexelToLinear", o.emissiveMapEncoding)
                  : "",
                o.outputEncoding
                  ? ((y = "linearToOutputTexel"),
                    (x = o.outputEncoding),
                    (b = Bt(x)),
                    "vec4 " +
                      y +
                      "( vec4 value ) { return LinearTo" +
                      b[0] +
                      b[1] +
                      "; }")
                  : "",
                o.depthPacking ? "#define DEPTH_PACKING " + r.depthPacking : "",
                "\n"
              ]
                .filter(Vt)
                .join("\n"))),
          (h = Wt((h = Ht((h = Xt(h)), o)), o)),
          (u = Wt((u = Ht((u = Xt(u)), o)), o)),
          (h = jt(h)),
          (u = jt(u)),
          s.isWebGL2 && !r.isRawShaderMaterial)
        ) {
          var S = !1,
            L = /^\s*#version\s+300\s+es\s*\n/;
          r.isShaderMaterial &&
            null !== h.match(L) &&
            null !== u.match(L) &&
            ((S = !0), (h = h.replace(L, "")), (u = u.replace(L, ""))),
            (g =
              [
                "#version 300 es\n",
                "#define attribute in",
                "#define varying out",
                "#define texture2D texture"
              ].join("\n") +
              "\n" +
              g),
            (_ =
              [
                "#version 300 es\n",
                "#define varying in",
                S ? "" : "out highp vec4 pc_fragColor;",
                S ? "" : "#define gl_FragColor pc_fragColor",
                "#define gl_FragDepthEXT gl_FragDepth",
                "#define texture2D texture",
                "#define textureCube texture",
                "#define texture2DProj textureProj",
                "#define texture2DLodEXT textureLod",
                "#define texture2DProjLodEXT textureProjLod",
                "#define textureCubeLodEXT textureLod",
                "#define texture2DGradEXT textureGrad",
                "#define texture2DProjGradEXT textureProjGrad",
                "#define textureCubeGradEXT textureGrad"
              ].join("\n") +
              "\n" +
              _);
        }
        var P = g + h,
          A = _ + u,
          R = zt(l, l.VERTEX_SHADER, P),
          C = zt(l, l.FRAGMENT_SHADER, A);
        l.attachShader(E, R),
          l.attachShader(E, C),
          void 0 !== r.index0AttributeName
            ? l.bindAttribLocation(E, 0, r.index0AttributeName)
            : !0 === o.morphTargets && l.bindAttribLocation(E, 0, "position"),
          l.linkProgram(E);
        var D,
          O,
          I = l.getProgramInfoLog(E).trim(),
          N = l.getShaderInfoLog(R).trim(),
          U = l.getShaderInfoLog(C).trim(),
          F = !0,
          z = !0;
        return (
          !1 === l.getProgramParameter(E, l.LINK_STATUS)
            ? ((F = !1),
              console.error(
                "THREE.WebGLProgram: shader error: ",
                l.getError(),
                "gl.VALIDATE_STATUS",
                l.getProgramParameter(E, l.VALIDATE_STATUS),
                "gl.getProgramInfoLog",
                I,
                N,
                U
              ))
            : "" !== I
              ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", I)
              : ("" !== N && "" !== U) || (z = !1),
          z &&
            (this.diagnostics = {
              runnable: F,
              material: r,
              programLog: I,
              vertexShader: { log: N, prefix: g },
              fragmentShader: { log: U, prefix: _ }
            }),
          l.deleteShader(R),
          l.deleteShader(C),
          (this.getUniforms = function() {
            return void 0 === D && (D = new Ft(l, E, t)), D;
          }),
          (this.getAttributes = function() {
            return (
              void 0 === O &&
                (O = (function(t, e) {
                  for (
                    var n = {},
                      i = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES),
                      r = 0;
                    r < i;
                    r++
                  ) {
                    var a = t.getActiveAttrib(e, r).name;
                    n[a] = t.getAttribLocation(e, a);
                  }
                  return n;
                })(l, E)),
              O
            );
          }),
          (this.destroy = function() {
            l.deleteProgram(E), (this.program = void 0);
          }),
          Object.defineProperties(this, {
            uniforms: {
              get: function() {
                return (
                  console.warn(
                    "THREE.WebGLProgram: .uniforms is now .getUniforms()."
                  ),
                  this.getUniforms()
                );
              }
            },
            attributes: {
              get: function() {
                return (
                  console.warn(
                    "THREE.WebGLProgram: .attributes is now .getAttributes()."
                  ),
                  this.getAttributes()
                );
              }
            }
          }),
          (this.name = a.name),
          (this.id = kt++),
          (this.code = n),
          (this.usedTimes = 1),
          (this.program = E),
          (this.vertexShader = R),
          (this.fragmentShader = C),
          this
        );
      }
      function qt(t, e, n) {
        var r = [],
          a = {
            MeshDepthMaterial: "depth",
            MeshDistanceMaterial: "distanceRGBA",
            MeshNormalMaterial: "normal",
            MeshBasicMaterial: "basic",
            MeshLambertMaterial: "lambert",
            MeshPhongMaterial: "phong",
            MeshToonMaterial: "phong",
            MeshStandardMaterial: "physical",
            MeshPhysicalMaterial: "physical",
            MeshMatcapMaterial: "matcap",
            LineBasicMaterial: "basic",
            LineDashedMaterial: "dashed",
            PointsMaterial: "points",
            ShadowMaterial: "shadow",
            SpriteMaterial: "sprite"
          },
          o = [
            "precision",
            "supportsVertexTextures",
            "map",
            "mapEncoding",
            "matcap",
            "matcapEncoding",
            "envMap",
            "envMapMode",
            "envMapEncoding",
            "lightMap",
            "aoMap",
            "emissiveMap",
            "emissiveMapEncoding",
            "bumpMap",
            "normalMap",
            "objectSpaceNormalMap",
            "displacementMap",
            "specularMap",
            "roughnessMap",
            "metalnessMap",
            "gradientMap",
            "alphaMap",
            "combine",
            "vertexColors",
            "fog",
            "useFog",
            "fogExp",
            "flatShading",
            "sizeAttenuation",
            "logarithmicDepthBuffer",
            "skinning",
            "maxBones",
            "useVertexTexture",
            "morphTargets",
            "morphNormals",
            "maxMorphTargets",
            "maxMorphNormals",
            "premultipliedAlpha",
            "numDirLights",
            "numPointLights",
            "numSpotLights",
            "numHemiLights",
            "numRectAreaLights",
            "shadowMapEnabled",
            "shadowMapType",
            "toneMapping",
            "physicallyCorrectLights",
            "alphaTest",
            "doubleSided",
            "flipSided",
            "numClippingPlanes",
            "numClipIntersection",
            "depthPacking",
            "dithering"
          ];
        function s(t, e) {
          var n;
          return (
            t
              ? t.isTexture
                ? (n = t.encoding)
                : t.isWebGLRenderTarget &&
                  (console.warn(
                    "THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."
                  ),
                  (n = t.texture.encoding))
              : (n = i.L),
            n === i.L && e && (n = i.E),
            n
          );
        }
        (this.getParameters = function(e, r, o, l, c, h, u) {
          var d = a[e.type],
            f = u.isSkinnedMesh
              ? (function(t) {
                  var e = t.skeleton.bones;
                  if (n.floatVertexTextures) return 1024;
                  var i = n.maxVertexUniforms,
                    r = Math.floor((i - 20) / 4),
                    a = Math.min(r, e.length);
                  return a < e.length
                    ? (console.warn(
                        "THREE.WebGLRenderer: Skeleton has " +
                          e.length +
                          " bones. This GPU supports " +
                          a +
                          "."
                      ),
                      0)
                    : a;
                })(u)
              : 0,
            p = n.precision;
          null !== e.precision &&
            (p = n.getMaxPrecision(e.precision)) !== e.precision &&
            console.warn(
              "THREE.WebGLProgram.getParameters:",
              e.precision,
              "not supported, using",
              p,
              "instead."
            );
          var m = t.getRenderTarget();
          return {
            shaderID: d,
            precision: p,
            supportsVertexTextures: n.vertexTextures,
            outputEncoding: s(m ? m.texture : null, t.gammaOutput),
            map: !!e.map,
            mapEncoding: s(e.map, t.gammaInput),
            matcap: !!e.matcap,
            matcapEncoding: s(e.matcap, t.gammaInput),
            envMap: !!e.envMap,
            envMapMode: e.envMap && e.envMap.mapping,
            envMapEncoding: s(e.envMap, t.gammaInput),
            envMapCubeUV:
              !!e.envMap &&
              (e.envMap.mapping === i.n || e.envMap.mapping === i.o),
            lightMap: !!e.lightMap,
            aoMap: !!e.aoMap,
            emissiveMap: !!e.emissiveMap,
            emissiveMapEncoding: s(e.emissiveMap, t.gammaInput),
            bumpMap: !!e.bumpMap,
            normalMap: !!e.normalMap,
            objectSpaceNormalMap: e.normalMapType === i.hb,
            displacementMap: !!e.displacementMap,
            roughnessMap: !!e.roughnessMap,
            metalnessMap: !!e.metalnessMap,
            specularMap: !!e.specularMap,
            alphaMap: !!e.alphaMap,
            gradientMap: !!e.gradientMap,
            combine: e.combine,
            vertexColors: e.vertexColors,
            fog: !!l,
            useFog: e.fog,
            fogExp: l && l.isFogExp2,
            flatShading: e.flatShading,
            sizeAttenuation: e.sizeAttenuation,
            logarithmicDepthBuffer: n.logarithmicDepthBuffer,
            skinning: e.skinning && f > 0,
            maxBones: f,
            useVertexTexture: n.floatVertexTextures,
            morphTargets: e.morphTargets,
            morphNormals: e.morphNormals,
            maxMorphTargets: t.maxMorphTargets,
            maxMorphNormals: t.maxMorphNormals,
            numDirLights: r.directional.length,
            numPointLights: r.point.length,
            numSpotLights: r.spot.length,
            numRectAreaLights: r.rectArea.length,
            numHemiLights: r.hemi.length,
            numClippingPlanes: c,
            numClipIntersection: h,
            dithering: e.dithering,
            shadowMapEnabled:
              t.shadowMap.enabled && u.receiveShadow && o.length > 0,
            shadowMapType: t.shadowMap.type,
            toneMapping: t.toneMapping,
            physicallyCorrectLights: t.physicallyCorrectLights,
            premultipliedAlpha: e.premultipliedAlpha,
            alphaTest: e.alphaTest,
            doubleSided: e.side === i.v,
            flipSided: e.side === i.g,
            depthPacking: void 0 !== e.depthPacking && e.depthPacking
          };
        }),
          (this.getProgramCode = function(e, n) {
            var i = [];
            if (
              (n.shaderID
                ? i.push(n.shaderID)
                : (i.push(e.fragmentShader), i.push(e.vertexShader)),
              void 0 !== e.defines)
            )
              for (var r in e.defines) i.push(r), i.push(e.defines[r]);
            for (var a = 0; a < o.length; a++) i.push(n[o[a]]);
            return (
              i.push(e.onBeforeCompile.toString()),
              i.push(t.gammaOutput),
              i.push(t.gammaFactor),
              i.join()
            );
          }),
          (this.acquireProgram = function(i, a, o, s) {
            for (var l, c = 0, h = r.length; c < h; c++) {
              var u = r[c];
              if (u.code === s) {
                ++(l = u).usedTimes;
                break;
              }
            }
            return (
              void 0 === l && ((l = new Yt(t, e, s, i, a, o, n)), r.push(l)), l
            );
          }),
          (this.releaseProgram = function(t) {
            if (0 == --t.usedTimes) {
              var e = r.indexOf(t);
              (r[e] = r[r.length - 1]), r.pop(), t.destroy();
            }
          }),
          (this.programs = r);
      }
      function Zt() {
        var t = new WeakMap();
        return {
          get: function(e) {
            var n = t.get(e);
            return void 0 === n && ((n = {}), t.set(e, n)), n;
          },
          remove: function(e) {
            t.delete(e);
          },
          update: function(e, n, i) {
            t.get(e)[n] = i;
          },
          dispose: function() {
            t = new WeakMap();
          }
        };
      }
      function Jt(t, e) {
        return t.renderOrder !== e.renderOrder
          ? t.renderOrder - e.renderOrder
          : t.program && e.program && t.program !== e.program
            ? t.program.id - e.program.id
            : t.material.id !== e.material.id
              ? t.material.id - e.material.id
              : t.z !== e.z ? t.z - e.z : t.id - e.id;
      }
      function Kt(t, e) {
        return t.renderOrder !== e.renderOrder
          ? t.renderOrder - e.renderOrder
          : t.z !== e.z ? e.z - t.z : t.id - e.id;
      }
      function Qt() {
        var t = [],
          e = 0,
          n = [],
          i = [];
        function r(n, i, r, a, o) {
          var s = t[e];
          return (
            void 0 === s
              ? ((s = {
                  id: n.id,
                  object: n,
                  geometry: i,
                  material: r,
                  program: r.program,
                  renderOrder: n.renderOrder,
                  z: a,
                  group: o
                }),
                (t[e] = s))
              : ((s.id = n.id),
                (s.object = n),
                (s.geometry = i),
                (s.material = r),
                (s.program = r.program),
                (s.renderOrder = n.renderOrder),
                (s.z = a),
                (s.group = o)),
            e++,
            s
          );
        }
        return {
          opaque: n,
          transparent: i,
          init: function() {
            (e = 0), (n.length = 0), (i.length = 0);
          },
          push: function(t, e, a, o, s) {
            var l = r(t, e, a, o, s);
            (!0 === a.transparent ? i : n).push(l);
          },
          unshift: function(t, e, a, o, s) {
            var l = r(t, e, a, o, s);
            (!0 === a.transparent ? i : n).unshift(l);
          },
          sort: function() {
            n.length > 1 && n.sort(Jt), i.length > 1 && i.sort(Kt);
          }
        };
      }
      function $t() {
        var t = {};
        return {
          get: function(e, n) {
            var i,
              r = t[e.id];
            return (
              void 0 === r
                ? ((i = new Qt()), (t[e.id] = {}), (t[e.id][n.id] = i))
                : void 0 === (i = r[n.id]) && ((i = new Qt()), (r[n.id] = i)),
              i
            );
          },
          dispose: function() {
            t = {};
          }
        };
      }
      function te() {
        var t = {};
        return {
          get: function(e) {
            if (void 0 !== t[e.id]) return t[e.id];
            var n;
            switch (e.type) {
              case "DirectionalLight":
                n = {
                  direction: new u.a(),
                  color: new y.a(),
                  shadow: !1,
                  shadowBias: 0,
                  shadowRadius: 1,
                  shadowMapSize: new x.a()
                };
                break;
              case "SpotLight":
                n = {
                  position: new u.a(),
                  direction: new u.a(),
                  color: new y.a(),
                  distance: 0,
                  coneCos: 0,
                  penumbraCos: 0,
                  decay: 0,
                  shadow: !1,
                  shadowBias: 0,
                  shadowRadius: 1,
                  shadowMapSize: new x.a()
                };
                break;
              case "PointLight":
                n = {
                  position: new u.a(),
                  color: new y.a(),
                  distance: 0,
                  decay: 0,
                  shadow: !1,
                  shadowBias: 0,
                  shadowRadius: 1,
                  shadowMapSize: new x.a(),
                  shadowCameraNear: 1,
                  shadowCameraFar: 1e3
                };
                break;
              case "HemisphereLight":
                n = {
                  direction: new u.a(),
                  skyColor: new y.a(),
                  groundColor: new y.a()
                };
                break;
              case "RectAreaLight":
                n = {
                  color: new y.a(),
                  position: new u.a(),
                  halfWidth: new u.a(),
                  halfHeight: new u.a()
                };
            }
            return (t[e.id] = n), n;
          }
        };
      }
      var ee = 0;
      function ne() {
        var t = new te(),
          e = {
            id: ee++,
            hash: {
              stateID: -1,
              directionalLength: -1,
              pointLength: -1,
              spotLength: -1,
              rectAreaLength: -1,
              hemiLength: -1,
              shadowsLength: -1
            },
            ambient: [0, 0, 0],
            directional: [],
            directionalShadowMap: [],
            directionalShadowMatrix: [],
            spot: [],
            spotShadowMap: [],
            spotShadowMatrix: [],
            rectArea: [],
            point: [],
            pointShadowMap: [],
            pointShadowMatrix: [],
            hemi: []
          },
          n = new u.a(),
          i = new g.a(),
          r = new g.a();
        return {
          setup: function(a, o, s) {
            for (
              var l = 0,
                c = 0,
                h = 0,
                u = 0,
                d = 0,
                f = 0,
                p = 0,
                m = 0,
                g = s.matrixWorldInverse,
                v = 0,
                _ = a.length;
              v < _;
              v++
            ) {
              var y = a[v],
                x = y.color,
                b = y.intensity,
                w = y.distance,
                T = y.shadow && y.shadow.map ? y.shadow.map.texture : null;
              if (y.isAmbientLight)
                (l += x.r * b), (c += x.g * b), (h += x.b * b);
              else if (y.isDirectionalLight) {
                if (
                  ((E = t.get(y)).color
                    .copy(y.color)
                    .multiplyScalar(y.intensity),
                  E.direction.setFromMatrixPosition(y.matrixWorld),
                  n.setFromMatrixPosition(y.target.matrixWorld),
                  E.direction.sub(n),
                  E.direction.transformDirection(g),
                  (E.shadow = y.castShadow),
                  y.castShadow)
                ) {
                  var M = y.shadow;
                  (E.shadowBias = M.bias),
                    (E.shadowRadius = M.radius),
                    (E.shadowMapSize = M.mapSize);
                }
                (e.directionalShadowMap[u] = T),
                  (e.directionalShadowMatrix[u] = y.shadow.matrix),
                  (e.directional[u] = E),
                  u++;
              } else if (y.isSpotLight)
                (E = t.get(y)).position.setFromMatrixPosition(y.matrixWorld),
                  E.position.applyMatrix4(g),
                  E.color.copy(x).multiplyScalar(b),
                  (E.distance = w),
                  E.direction.setFromMatrixPosition(y.matrixWorld),
                  n.setFromMatrixPosition(y.target.matrixWorld),
                  E.direction.sub(n),
                  E.direction.transformDirection(g),
                  (E.coneCos = Math.cos(y.angle)),
                  (E.penumbraCos = Math.cos(y.angle * (1 - y.penumbra))),
                  (E.decay = y.decay),
                  (E.shadow = y.castShadow),
                  y.castShadow &&
                    ((M = y.shadow),
                    (E.shadowBias = M.bias),
                    (E.shadowRadius = M.radius),
                    (E.shadowMapSize = M.mapSize)),
                  (e.spotShadowMap[f] = T),
                  (e.spotShadowMatrix[f] = y.shadow.matrix),
                  (e.spot[f] = E),
                  f++;
              else if (y.isRectAreaLight)
                (E = t.get(y)).color.copy(x).multiplyScalar(b),
                  E.position.setFromMatrixPosition(y.matrixWorld),
                  E.position.applyMatrix4(g),
                  r.identity(),
                  i.copy(y.matrixWorld),
                  i.premultiply(g),
                  r.extractRotation(i),
                  E.halfWidth.set(0.5 * y.width, 0, 0),
                  E.halfHeight.set(0, 0.5 * y.height, 0),
                  E.halfWidth.applyMatrix4(r),
                  E.halfHeight.applyMatrix4(r),
                  (e.rectArea[p] = E),
                  p++;
              else if (y.isPointLight)
                (E = t.get(y)).position.setFromMatrixPosition(y.matrixWorld),
                  E.position.applyMatrix4(g),
                  E.color.copy(y.color).multiplyScalar(y.intensity),
                  (E.distance = y.distance),
                  (E.decay = y.decay),
                  (E.shadow = y.castShadow),
                  y.castShadow &&
                    ((M = y.shadow),
                    (E.shadowBias = M.bias),
                    (E.shadowRadius = M.radius),
                    (E.shadowMapSize = M.mapSize),
                    (E.shadowCameraNear = M.camera.near),
                    (E.shadowCameraFar = M.camera.far)),
                  (e.pointShadowMap[d] = T),
                  (e.pointShadowMatrix[d] = y.shadow.matrix),
                  (e.point[d] = E),
                  d++;
              else if (y.isHemisphereLight) {
                var E;
                (E = t.get(y)).direction.setFromMatrixPosition(y.matrixWorld),
                  E.direction.transformDirection(g),
                  E.direction.normalize(),
                  E.skyColor.copy(y.color).multiplyScalar(b),
                  E.groundColor.copy(y.groundColor).multiplyScalar(b),
                  (e.hemi[m] = E),
                  m++;
              }
            }
            (e.ambient[0] = l),
              (e.ambient[1] = c),
              (e.ambient[2] = h),
              (e.directional.length = u),
              (e.spot.length = f),
              (e.rectArea.length = p),
              (e.point.length = d),
              (e.hemi.length = m),
              (e.hash.stateID = e.id),
              (e.hash.directionalLength = u),
              (e.hash.pointLength = d),
              (e.hash.spotLength = f),
              (e.hash.rectAreaLength = p),
              (e.hash.hemiLength = m),
              (e.hash.shadowsLength = o.length);
          },
          state: e
        };
      }
      function ie() {
        var t = new ne(),
          e = [],
          n = [];
        return {
          init: function() {
            (e.length = 0), (n.length = 0);
          },
          state: { lightsArray: e, shadowsArray: n, lights: t },
          setupLights: function(i) {
            t.setup(e, n, i);
          },
          pushLight: function(t) {
            e.push(t);
          },
          pushShadow: function(t) {
            n.push(t);
          }
        };
      }
      function re() {
        var t = {};
        return {
          get: function(e, n) {
            var i;
            return (
              void 0 === t[e.id]
                ? ((i = new ie()), (t[e.id] = {}), (t[e.id][n.id] = i))
                : void 0 === t[e.id][n.id]
                  ? ((i = new ie()), (t[e.id][n.id] = i))
                  : (i = t[e.id][n.id]),
              i
            );
          },
          dispose: function() {
            t = {};
          }
        };
      }
      var ae = n(18);
      function oe(t, e, n) {
        (this.width = t),
          (this.height = e),
          (this.scissor = new T.a(0, 0, t, e)),
          (this.scissorTest = !1),
          (this.viewport = new T.a(0, 0, t, e)),
          (n = n || {}),
          (this.texture = new a.a(
            void 0,
            void 0,
            n.wrapS,
            n.wrapT,
            n.magFilter,
            n.minFilter,
            n.format,
            n.type,
            n.anisotropy,
            n.encoding
          )),
          (this.texture.generateMipmaps =
            void 0 !== n.generateMipmaps && n.generateMipmaps),
          (this.texture.minFilter = void 0 !== n.minFilter ? n.minFilter : i.M),
          (this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer),
          (this.stencilBuffer = void 0 === n.stencilBuffer || n.stencilBuffer),
          (this.depthTexture =
            void 0 !== n.depthTexture ? n.depthTexture : null);
      }
      oe.prototype = Object.assign(Object.create(ae.a.prototype), {
        constructor: oe,
        isWebGLRenderTarget: !0,
        setSize: function(t, e) {
          (this.width === t && this.height === e) ||
            ((this.width = t), (this.height = e), this.dispose()),
            this.viewport.set(0, 0, t, e),
            this.scissor.set(0, 0, t, e);
        },
        clone: function() {
          return new this.constructor().copy(this);
        },
        copy: function(t) {
          return (
            (this.width = t.width),
            (this.height = t.height),
            this.viewport.copy(t.viewport),
            (this.texture = t.texture.clone()),
            (this.depthBuffer = t.depthBuffer),
            (this.stencilBuffer = t.stencilBuffer),
            (this.depthTexture = t.depthTexture),
            this
          );
        },
        dispose: function() {
          this.dispatchEvent({ type: "dispose" });
        }
      });
      var se = n(13);
      function le(t) {
        se.a.call(this),
          (this.type = "MeshDepthMaterial"),
          (this.depthPacking = i.h),
          (this.skinning = !1),
          (this.morphTargets = !1),
          (this.map = null),
          (this.alphaMap = null),
          (this.displacementMap = null),
          (this.displacementScale = 1),
          (this.displacementBias = 0),
          (this.wireframe = !1),
          (this.wireframeLinewidth = 1),
          (this.fog = !1),
          (this.lights = !1),
          this.setValues(t);
      }
      function ce(t) {
        se.a.call(this),
          (this.type = "MeshDistanceMaterial"),
          (this.referencePosition = new u.a()),
          (this.nearDistance = 1),
          (this.farDistance = 1e3),
          (this.skinning = !1),
          (this.morphTargets = !1),
          (this.map = null),
          (this.alphaMap = null),
          (this.displacementMap = null),
          (this.displacementScale = 1),
          (this.displacementBias = 0),
          (this.fog = !1),
          (this.lights = !1),
          this.setValues(t);
      }
      function he(t, e, n) {
        for (
          var r = new m(),
            a = new g.a(),
            o = new x.a(),
            s = new x.a(n, n),
            l = new u.a(),
            c = new u.a(),
            h = 1,
            d = 2,
            f = 1 + (h | d),
            p = new Array(f),
            v = new Array(f),
            _ = {},
            y = { 0: i.g, 1: i.D, 2: i.v },
            b = [
              new u.a(1, 0, 0),
              new u.a(-1, 0, 0),
              new u.a(0, 0, 1),
              new u.a(0, 0, -1),
              new u.a(0, 1, 0),
              new u.a(0, -1, 0)
            ],
            w = [
              new u.a(0, 1, 0),
              new u.a(0, 1, 0),
              new u.a(0, 1, 0),
              new u.a(0, 1, 0),
              new u.a(0, 0, 1),
              new u.a(0, 0, -1)
            ],
            M = [
              new T.a(),
              new T.a(),
              new T.a(),
              new T.a(),
              new T.a(),
              new T.a()
            ],
            E = 0;
          E !== f;
          ++E
        ) {
          var S = 0 != (E & h),
            L = 0 != (E & d),
            P = new le({ depthPacking: i.qb, morphTargets: S, skinning: L });
          p[E] = P;
          var A = new ce({ morphTargets: S, skinning: L });
          v[E] = A;
        }
        var R = this;
        function C(e, n, i, r, a, o) {
          var s = e.geometry,
            l = null,
            c = p,
            u = e.customDepthMaterial;
          if ((i && ((c = v), (u = e.customDistanceMaterial)), u)) l = u;
          else {
            var f = !1;
            n.morphTargets &&
              (s && s.isBufferGeometry
                ? (f =
                    s.morphAttributes &&
                    s.morphAttributes.position &&
                    s.morphAttributes.position.length > 0)
                : s &&
                  s.isGeometry &&
                  (f = s.morphTargets && s.morphTargets.length > 0)),
              e.isSkinnedMesh &&
                !1 === n.skinning &&
                console.warn(
                  "THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",
                  e
                );
            var m = e.isSkinnedMesh && n.skinning,
              g = 0;
            f && (g |= h), m && (g |= d), (l = c[g]);
          }
          if (
            t.localClippingEnabled &&
            !0 === n.clipShadows &&
            0 !== n.clippingPlanes.length
          ) {
            var x = l.uuid,
              b = n.uuid,
              w = _[x];
            void 0 === w && ((w = {}), (_[x] = w));
            var T = w[b];
            void 0 === T && ((T = l.clone()), (w[b] = T)), (l = T);
          }
          return (
            (l.visible = n.visible),
            (l.wireframe = n.wireframe),
            (l.side = null != n.shadowSide ? n.shadowSide : y[n.side]),
            (l.clipShadows = n.clipShadows),
            (l.clippingPlanes = n.clippingPlanes),
            (l.clipIntersection = n.clipIntersection),
            (l.wireframeLinewidth = n.wireframeLinewidth),
            (l.linewidth = n.linewidth),
            i &&
              l.isMeshDistanceMaterial &&
              (l.referencePosition.copy(r),
              (l.nearDistance = a),
              (l.farDistance = o)),
            l
          );
        }
        function D(n, i, a, o) {
          if (!1 !== n.visible) {
            if (
              n.layers.test(i.layers) &&
              (n.isMesh || n.isLine || n.isPoints) &&
              n.castShadow &&
              (!n.frustumCulled || r.intersectsObject(n))
            ) {
              n.modelViewMatrix.multiplyMatrices(
                a.matrixWorldInverse,
                n.matrixWorld
              );
              var s = e.update(n),
                l = n.material;
              if (Array.isArray(l))
                for (var h = s.groups, u = 0, d = h.length; u < d; u++) {
                  var f = h[u],
                    p = l[f.materialIndex];
                  if (p && p.visible) {
                    var m = C(n, p, o, c, a.near, a.far);
                    t.renderBufferDirect(a, null, s, m, n, f);
                  }
                }
              else if (l.visible) {
                m = C(n, l, o, c, a.near, a.far);
                t.renderBufferDirect(a, null, s, m, n, null);
              }
            }
            for (var g = n.children, v = 0, _ = g.length; v < _; v++)
              D(g[v], i, a, o);
          }
        }
        (this.enabled = !1),
          (this.autoUpdate = !0),
          (this.needsUpdate = !1),
          (this.type = i.nb),
          (this.render = function(e, n, h) {
            if (
              !1 !== R.enabled &&
              (!1 !== R.autoUpdate || !1 !== R.needsUpdate) &&
              0 !== e.length
            ) {
              var u,
                d = t.context,
                f = t.state;
              f.disable(d.BLEND),
                f.buffers.color.setClear(1, 1, 1, 1),
                f.buffers.depth.setTest(!0),
                f.setScissorTest(!1);
              for (var p = 0, m = e.length; p < m; p++) {
                var g = e[p],
                  v = g.shadow,
                  _ = g && g.isPointLight;
                if (void 0 !== v) {
                  var y = v.camera;
                  if ((o.copy(v.mapSize), o.min(s), _)) {
                    var x = o.x,
                      T = o.y;
                    M[0].set(2 * x, T, x, T),
                      M[1].set(0, T, x, T),
                      M[2].set(3 * x, T, x, T),
                      M[3].set(x, T, x, T),
                      M[4].set(3 * x, 0, x, T),
                      M[5].set(x, 0, x, T),
                      (o.x *= 4),
                      (o.y *= 2);
                  }
                  if (null === v.map) {
                    var E = { minFilter: i.Y, magFilter: i.Y, format: i.rb };
                    (v.map = new oe(o.x, o.y, E)),
                      (v.map.texture.name = g.name + ".shadowMap"),
                      y.updateProjectionMatrix();
                  }
                  v.isSpotLightShadow && v.update(g);
                  var S = v.map,
                    L = v.matrix;
                  c.setFromMatrixPosition(g.matrixWorld),
                    y.position.copy(c),
                    _
                      ? ((u = 6), L.makeTranslation(-c.x, -c.y, -c.z))
                      : ((u = 1),
                        l.setFromMatrixPosition(g.target.matrixWorld),
                        y.lookAt(l),
                        y.updateMatrixWorld(),
                        L.set(
                          0.5,
                          0,
                          0,
                          0.5,
                          0,
                          0.5,
                          0,
                          0.5,
                          0,
                          0,
                          0.5,
                          0.5,
                          0,
                          0,
                          0,
                          1
                        ),
                        L.multiply(y.projectionMatrix),
                        L.multiply(y.matrixWorldInverse)),
                    t.setRenderTarget(S),
                    t.clear();
                  for (var P = 0; P < u; P++) {
                    if (_) {
                      l.copy(y.position),
                        l.add(b[P]),
                        y.up.copy(w[P]),
                        y.lookAt(l),
                        y.updateMatrixWorld();
                      var A = M[P];
                      f.viewport(A);
                    }
                    a.multiplyMatrices(
                      y.projectionMatrix,
                      y.matrixWorldInverse
                    ),
                      r.setFromMatrix(a),
                      D(n, h, y, _);
                  }
                } else
                  console.warn("THREE.WebGLShadowMap:", g, "has no shadow.");
              }
              R.needsUpdate = !1;
            }
          });
      }
      function ue(t, e, n, r) {
        var a = new function() {
            var e = !1,
              n = new T.a(),
              i = null,
              r = new T.a(0, 0, 0, 0);
            return {
              setMask: function(n) {
                i === n || e || (t.colorMask(n, n, n, n), (i = n));
              },
              setLocked: function(t) {
                e = t;
              },
              setClear: function(e, i, a, o, s) {
                !0 === s && ((e *= o), (i *= o), (a *= o)),
                  n.set(e, i, a, o),
                  !1 === r.equals(n) && (t.clearColor(e, i, a, o), r.copy(n));
              },
              reset: function() {
                (e = !1), (i = null), r.set(-1, 0, 0, 0);
              }
            };
          }(),
          o = new function() {
            var e = !1,
              n = null,
              r = null,
              a = null;
            return {
              setTest: function(e) {
                e ? G(t.DEPTH_TEST) : V(t.DEPTH_TEST);
              },
              setMask: function(i) {
                n === i || e || (t.depthMask(i), (n = i));
              },
              setFunc: function(e) {
                if (r !== e) {
                  if (e)
                    switch (e) {
                      case i.bb:
                        t.depthFunc(t.NEVER);
                        break;
                      case i.f:
                        t.depthFunc(t.ALWAYS);
                        break;
                      case i.J:
                        t.depthFunc(t.LESS);
                        break;
                      case i.K:
                        t.depthFunc(t.LEQUAL);
                        break;
                      case i.y:
                        t.depthFunc(t.EQUAL);
                        break;
                      case i.G:
                        t.depthFunc(t.GEQUAL);
                        break;
                      case i.F:
                        t.depthFunc(t.GREATER);
                        break;
                      case i.gb:
                        t.depthFunc(t.NOTEQUAL);
                        break;
                      default:
                        t.depthFunc(t.LEQUAL);
                    }
                  else t.depthFunc(t.LEQUAL);
                  r = e;
                }
              },
              setLocked: function(t) {
                e = t;
              },
              setClear: function(e) {
                a !== e && (t.clearDepth(e), (a = e));
              },
              reset: function() {
                (e = !1), (n = null), (r = null), (a = null);
              }
            };
          }(),
          s = new function() {
            var e = !1,
              n = null,
              i = null,
              r = null,
              a = null,
              o = null,
              s = null,
              l = null,
              c = null;
            return {
              setTest: function(e) {
                e ? G(t.STENCIL_TEST) : V(t.STENCIL_TEST);
              },
              setMask: function(i) {
                n === i || e || (t.stencilMask(i), (n = i));
              },
              setFunc: function(e, n, o) {
                (i === e && r === n && a === o) ||
                  (t.stencilFunc(e, n, o), (i = e), (r = n), (a = o));
              },
              setOp: function(e, n, i) {
                (o === e && s === n && l === i) ||
                  (t.stencilOp(e, n, i), (o = e), (s = n), (l = i));
              },
              setLocked: function(t) {
                e = t;
              },
              setClear: function(e) {
                c !== e && (t.clearStencil(e), (c = e));
              },
              reset: function() {
                (e = !1),
                  (n = null),
                  (i = null),
                  (r = null),
                  (a = null),
                  (o = null),
                  (s = null),
                  (l = null),
                  (c = null);
              }
            };
          }(),
          l = t.getParameter(t.MAX_VERTEX_ATTRIBS),
          c = new Uint8Array(l),
          h = new Uint8Array(l),
          u = new Uint8Array(l),
          d = {},
          f = null,
          p = null,
          m = null,
          g = null,
          v = null,
          _ = null,
          y = null,
          x = null,
          b = null,
          w = null,
          M = !1,
          E = null,
          S = null,
          L = null,
          P = null,
          A = null,
          R = t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS),
          C = !1,
          D = 0,
          O = t.getParameter(t.VERSION);
        -1 !== O.indexOf("WebGL")
          ? ((D = parseFloat(/^WebGL\ ([0-9])/.exec(O)[1])), (C = D >= 1))
          : -1 !== O.indexOf("OpenGL ES") &&
            ((D = parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(O)[1])), (C = D >= 2));
        var I = null,
          N = {},
          U = new T.a(),
          F = new T.a();
        function z(e, n, i) {
          var r = new Uint8Array(4),
            a = t.createTexture();
          t.bindTexture(e, a),
            t.texParameteri(e, t.TEXTURE_MIN_FILTER, t.NEAREST),
            t.texParameteri(e, t.TEXTURE_MAG_FILTER, t.NEAREST);
          for (var o = 0; o < i; o++)
            t.texImage2D(n + o, 0, t.RGBA, 1, 1, 0, t.RGBA, t.UNSIGNED_BYTE, r);
          return a;
        }
        var k = {};
        function B(n, i) {
          ((c[n] = 1),
          0 === h[n] && (t.enableVertexAttribArray(n), (h[n] = 1)),
          u[n] !== i) &&
            ((r.isWebGL2 ? t : e.get("ANGLE_instanced_arrays"))[
              r.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"
            ](n, i),
            (u[n] = i));
        }
        function G(e) {
          !0 !== d[e] && (t.enable(e), (d[e] = !0));
        }
        function V(e) {
          !1 !== d[e] && (t.disable(e), (d[e] = !1));
        }
        function H(e, r, a, o, s, l, c, h) {
          if (e !== i.cb) {
            if ((m || (G(t.BLEND), (m = !0)), e === i.s))
              (s = s || r),
                (l = l || a),
                (c = c || o),
                (r === v && s === x) ||
                  (t.blendEquationSeparate(n.convert(r), n.convert(s)),
                  (v = r),
                  (x = s)),
                (a === _ && o === y && l === b && c === w) ||
                  (t.blendFuncSeparate(
                    n.convert(a),
                    n.convert(o),
                    n.convert(l),
                    n.convert(c)
                  ),
                  (_ = a),
                  (y = o),
                  (b = l),
                  (w = c)),
                (g = e),
                (M = null);
            else if (e !== g || h !== M) {
              if (
                ((v === i.b && x === i.b) ||
                  (t.blendEquation(t.FUNC_ADD), (v = i.b), (x = i.b)),
                h)
              )
                switch (e) {
                  case i.fb:
                    t.blendFuncSeparate(
                      t.ONE,
                      t.ONE_MINUS_SRC_ALPHA,
                      t.ONE,
                      t.ONE_MINUS_SRC_ALPHA
                    );
                    break;
                  case i.d:
                    t.blendFunc(t.ONE, t.ONE);
                    break;
                  case i.ec:
                    t.blendFuncSeparate(
                      t.ZERO,
                      t.ZERO,
                      t.ONE_MINUS_SRC_COLOR,
                      t.ONE_MINUS_SRC_ALPHA
                    );
                    break;
                  case i.W:
                    t.blendFuncSeparate(
                      t.ZERO,
                      t.SRC_COLOR,
                      t.ZERO,
                      t.SRC_ALPHA
                    );
                    break;
                  default:
                    console.error("THREE.WebGLState: Invalid blending: ", e);
                }
              else
                switch (e) {
                  case i.fb:
                    t.blendFuncSeparate(
                      t.SRC_ALPHA,
                      t.ONE_MINUS_SRC_ALPHA,
                      t.ONE,
                      t.ONE_MINUS_SRC_ALPHA
                    );
                    break;
                  case i.d:
                    t.blendFunc(t.SRC_ALPHA, t.ONE);
                    break;
                  case i.ec:
                    t.blendFunc(t.ZERO, t.ONE_MINUS_SRC_COLOR);
                    break;
                  case i.W:
                    t.blendFunc(t.ZERO, t.SRC_COLOR);
                    break;
                  default:
                    console.error("THREE.WebGLState: Invalid blending: ", e);
                }
              (_ = null), (y = null), (b = null), (w = null), (g = e), (M = h);
            }
          } else m && (V(t.BLEND), (m = !1));
        }
        function W(e) {
          E !== e && (e ? t.frontFace(t.CW) : t.frontFace(t.CCW), (E = e));
        }
        function X(e) {
          e !== i.r
            ? (G(t.CULL_FACE),
              e !== S &&
                (e === i.p
                  ? t.cullFace(t.BACK)
                  : e === i.q
                    ? t.cullFace(t.FRONT)
                    : t.cullFace(t.FRONT_AND_BACK)))
            : V(t.CULL_FACE),
            (S = e);
        }
        function j(e, n, i) {
          e
            ? (G(t.POLYGON_OFFSET_FILL),
              (P === n && A === i) || (t.polygonOffset(n, i), (P = n), (A = i)))
            : V(t.POLYGON_OFFSET_FILL);
        }
        function Y(e) {
          void 0 === e && (e = t.TEXTURE0 + R - 1),
            I !== e && (t.activeTexture(e), (I = e));
        }
        return (
          (k[t.TEXTURE_2D] = z(t.TEXTURE_2D, t.TEXTURE_2D, 1)),
          (k[t.TEXTURE_CUBE_MAP] = z(
            t.TEXTURE_CUBE_MAP,
            t.TEXTURE_CUBE_MAP_POSITIVE_X,
            6
          )),
          a.setClear(0, 0, 0, 1),
          o.setClear(1),
          s.setClear(0),
          G(t.DEPTH_TEST),
          o.setFunc(i.K),
          W(!1),
          X(i.p),
          G(t.CULL_FACE),
          H(i.cb),
          {
            buffers: { color: a, depth: o, stencil: s },
            initAttributes: function() {
              for (var t = 0, e = c.length; t < e; t++) c[t] = 0;
            },
            enableAttribute: function(t) {
              B(t, 0);
            },
            enableAttributeAndDivisor: B,
            disableUnusedAttributes: function() {
              for (var e = 0, n = h.length; e !== n; ++e)
                h[e] !== c[e] && (t.disableVertexAttribArray(e), (h[e] = 0));
            },
            enable: G,
            disable: V,
            getCompressedTextureFormats: function() {
              if (
                null === f &&
                ((f = []),
                e.get("WEBGL_compressed_texture_pvrtc") ||
                  e.get("WEBGL_compressed_texture_s3tc") ||
                  e.get("WEBGL_compressed_texture_etc1") ||
                  e.get("WEBGL_compressed_texture_astc"))
              )
                for (
                  var n = t.getParameter(t.COMPRESSED_TEXTURE_FORMATS), i = 0;
                  i < n.length;
                  i++
                )
                  f.push(n[i]);
              return f;
            },
            useProgram: function(e) {
              return p !== e && (t.useProgram(e), (p = e), !0);
            },
            setBlending: H,
            setMaterial: function(e, n) {
              e.side === i.v ? V(t.CULL_FACE) : G(t.CULL_FACE);
              var r = e.side === i.g;
              n && (r = !r),
                W(r),
                e.blending === i.fb && !1 === e.transparent
                  ? H(i.cb)
                  : H(
                      e.blending,
                      e.blendEquation,
                      e.blendSrc,
                      e.blendDst,
                      e.blendEquationAlpha,
                      e.blendSrcAlpha,
                      e.blendDstAlpha,
                      e.premultipliedAlpha
                    ),
                o.setFunc(e.depthFunc),
                o.setTest(e.depthTest),
                o.setMask(e.depthWrite),
                a.setMask(e.colorWrite),
                j(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits);
            },
            setFlipSided: W,
            setCullFace: X,
            setLineWidth: function(e) {
              e !== L && (C && t.lineWidth(e), (L = e));
            },
            setPolygonOffset: j,
            setScissorTest: function(e) {
              e ? G(t.SCISSOR_TEST) : V(t.SCISSOR_TEST);
            },
            activeTexture: Y,
            bindTexture: function(e, n) {
              null === I && Y();
              var i = N[I];
              void 0 === i &&
                ((i = { type: void 0, texture: void 0 }), (N[I] = i)),
                (i.type === e && i.texture === n) ||
                  (t.bindTexture(e, n || k[e]), (i.type = e), (i.texture = n));
            },
            compressedTexImage2D: function() {
              try {
                t.compressedTexImage2D.apply(t, arguments);
              } catch (t) {
                console.error("THREE.WebGLState:", t);
              }
            },
            texImage2D: function() {
              try {
                t.texImage2D.apply(t, arguments);
              } catch (t) {
                console.error("THREE.WebGLState:", t);
              }
            },
            texImage3D: function() {
              try {
                t.texImage3D.apply(t, arguments);
              } catch (t) {
                console.error("THREE.WebGLState:", t);
              }
            },
            scissor: function(e) {
              !1 === U.equals(e) && (t.scissor(e.x, e.y, e.z, e.w), U.copy(e));
            },
            viewport: function(e) {
              !1 === F.equals(e) && (t.viewport(e.x, e.y, e.z, e.w), F.copy(e));
            },
            reset: function() {
              for (var e = 0; e < h.length; e++)
                1 === h[e] && (t.disableVertexAttribArray(e), (h[e] = 0));
              (d = {}),
                (f = null),
                (I = null),
                (N = {}),
                (p = null),
                (g = null),
                (E = null),
                (S = null),
                a.reset(),
                o.reset(),
                s.reset();
            }
          }
        );
      }
      function de(t, e, n, a, o, s, l) {
        var c,
          h = {};
        function u(t, e) {
          if (t.width > e || t.height > e) {
            if ("data" in t)
              return void console.warn(
                "THREE.WebGLRenderer: image in DataTexture is too big (" +
                  t.width +
                  "x" +
                  t.height +
                  ")."
              );
            var n = e / Math.max(t.width, t.height),
              i = document.createElementNS(
                "http://www.w3.org/1999/xhtml",
                "canvas"
              );
            return (
              (i.width = Math.floor(t.width * n)),
              (i.height = Math.floor(t.height * n)),
              i
                .getContext("2d")
                .drawImage(t, 0, 0, t.width, t.height, 0, 0, i.width, i.height),
              console.warn(
                "THREE.WebGLRenderer: image is too big (" +
                  t.width +
                  "x" +
                  t.height +
                  "). Resized to " +
                  i.width +
                  "x" +
                  i.height
              ),
              i
            );
          }
          return t;
        }
        function d(t) {
          return r.a.isPowerOfTwo(t.width) && r.a.isPowerOfTwo(t.height);
        }
        function f(t, e) {
          return (
            t.generateMipmaps && e && t.minFilter !== i.Y && t.minFilter !== i.M
          );
        }
        function p(e, n, i, r) {
          t.generateMipmap(e),
            (a.get(n).__maxMipLevel = Math.log(Math.max(i, r)) * Math.LOG2E);
        }
        function m(e, n) {
          if (!o.isWebGL2) return e;
          if (e === t.RED) {
            if (n === t.FLOAT) return t.R32F;
            if (n === t.HALF_FLOAT) return t.R16F;
            if (n === t.UNSIGNED_BYTE) return t.R8;
          }
          if (e === t.RGB) {
            if (n === t.FLOAT) return t.RGB32F;
            if (n === t.HALF_FLOAT) return t.RGB16F;
            if (n === t.UNSIGNED_BYTE) return t.RGB8;
          }
          if (e === t.RGBA) {
            if (n === t.FLOAT) return t.RGBA32F;
            if (n === t.HALF_FLOAT) return t.RGBA16F;
            if (n === t.UNSIGNED_BYTE) return t.RGBA8;
          }
          return e;
        }
        function g(e) {
          return e === i.Y || e === i.ab || e === i.Z ? t.NEAREST : t.LINEAR;
        }
        function v(e) {
          var n = e.target;
          n.removeEventListener("dispose", v),
            (function(e) {
              var n = a.get(e);
              if (e.image && n.__image__webglTextureCube)
                t.deleteTexture(n.__image__webglTextureCube);
              else {
                if (void 0 === n.__webglInit) return;
                t.deleteTexture(n.__webglTexture);
              }
              a.remove(e);
            })(n),
            n.isVideoTexture && delete h[n.id],
            l.memory.textures--;
        }
        function _(e) {
          var n = e.target;
          n.removeEventListener("dispose", _),
            (function(e) {
              var n = a.get(e),
                i = a.get(e.texture);
              if (!e) return;
              void 0 !== i.__webglTexture && t.deleteTexture(i.__webglTexture);
              e.depthTexture && e.depthTexture.dispose();
              if (e.isWebGLRenderTargetCube)
                for (var r = 0; r < 6; r++)
                  t.deleteFramebuffer(n.__webglFramebuffer[r]),
                    n.__webglDepthbuffer &&
                      t.deleteRenderbuffer(n.__webglDepthbuffer[r]);
              else
                t.deleteFramebuffer(n.__webglFramebuffer),
                  n.__webglDepthbuffer &&
                    t.deleteRenderbuffer(n.__webglDepthbuffer);
              a.remove(e.texture), a.remove(e);
            })(n),
            l.memory.textures--;
        }
        function y(e, i) {
          var r = a.get(e);
          if (
            (e.isVideoTexture &&
              (function(t) {
                var e = t.id,
                  n = l.render.frame;
                h[e] !== n && ((h[e] = n), t.update());
              })(e),
            e.version > 0 && r.__version !== e.version)
          ) {
            var o = e.image;
            if (void 0 === o)
              console.warn(
                "THREE.WebGLRenderer: Texture marked for update but image is undefined"
              );
            else {
              if (!1 !== o.complete) return void b(r, e, i);
              console.warn(
                "THREE.WebGLRenderer: Texture marked for update but image is incomplete"
              );
            }
          }
          n.activeTexture(t.TEXTURE0 + i),
            n.bindTexture(t.TEXTURE_2D, r.__webglTexture);
        }
        function x(n, r, l) {
          var c;
          if (
            (l
              ? (t.texParameteri(n, t.TEXTURE_WRAP_S, s.convert(r.wrapS)),
                t.texParameteri(n, t.TEXTURE_WRAP_T, s.convert(r.wrapT)),
                t.texParameteri(
                  n,
                  t.TEXTURE_MAG_FILTER,
                  s.convert(r.magFilter)
                ),
                t.texParameteri(
                  n,
                  t.TEXTURE_MIN_FILTER,
                  s.convert(r.minFilter)
                ))
              : (t.texParameteri(n, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE),
                t.texParameteri(n, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE),
                (r.wrapS === i.k && r.wrapT === i.k) ||
                  console.warn(
                    "THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."
                  ),
                t.texParameteri(n, t.TEXTURE_MAG_FILTER, g(r.magFilter)),
                t.texParameteri(n, t.TEXTURE_MIN_FILTER, g(r.minFilter)),
                r.minFilter !== i.Y &&
                  r.minFilter !== i.M &&
                  console.warn(
                    "THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."
                  )),
            (c = e.get("EXT_texture_filter_anisotropic")))
          ) {
            if (r.type === i.C && null === e.get("OES_texture_float_linear"))
              return;
            if (
              r.type === i.H &&
              null === (o.isWebGL2 || e.get("OES_texture_half_float_linear"))
            )
              return;
            (r.anisotropy > 1 || a.get(r).__currentAnisotropy) &&
              (t.texParameterf(
                n,
                c.TEXTURE_MAX_ANISOTROPY_EXT,
                Math.min(r.anisotropy, o.getMaxAnisotropy())
              ),
              (a.get(r).__currentAnisotropy = r.anisotropy));
          }
        }
        function b(e, a, h) {
          var g;
          (g = a.isDataTexture3D ? t.TEXTURE_3D : t.TEXTURE_2D),
            void 0 === e.__webglInit &&
              ((e.__webglInit = !0),
              a.addEventListener("dispose", v),
              (e.__webglTexture = t.createTexture()),
              l.memory.textures++),
            n.activeTexture(t.TEXTURE0 + h),
            n.bindTexture(g, e.__webglTexture),
            t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, a.flipY),
            t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, a.premultiplyAlpha),
            t.pixelStorei(t.UNPACK_ALIGNMENT, a.unpackAlignment);
          var _ = u(a.image, o.maxTextureSize);
          (function(t) {
            return (
              !o.isWebGL2 &&
              (t.wrapS !== i.k ||
                t.wrapT !== i.k ||
                (t.minFilter !== i.Y && t.minFilter !== i.M))
            );
          })(a) &&
            !1 === d(_) &&
            (_ = (function(t) {
              return t instanceof HTMLImageElement ||
                t instanceof HTMLCanvasElement ||
                t instanceof ImageBitmap
                ? (void 0 === c &&
                    (c = document.createElementNS(
                      "http://www.w3.org/1999/xhtml",
                      "canvas"
                    )),
                  (c.width = r.a.floorPowerOfTwo(t.width)),
                  (c.height = r.a.floorPowerOfTwo(t.height)),
                  c.getContext("2d").drawImage(t, 0, 0, c.width, c.height),
                  console.warn(
                    "THREE.WebGLRenderer: image is not power of two (" +
                      t.width +
                      "x" +
                      t.height +
                      "). Resized to " +
                      c.width +
                      "x" +
                      c.height
                  ),
                  c)
                : t;
            })(_));
          var y = d(_),
            b = s.convert(a.format),
            w = s.convert(a.type),
            T = m(b, w);
          x(g, a, y);
          var M,
            E = a.mipmaps;
          if (a.isDepthTexture) {
            if (((T = t.DEPTH_COMPONENT), a.type === i.C)) {
              if (!o.isWebGL2)
                throw new Error(
                  "Float Depth Texture only supported in WebGL2.0"
                );
              T = t.DEPTH_COMPONENT32F;
            } else o.isWebGL2 && (T = t.DEPTH_COMPONENT16);
            a.format === i.t &&
              T === t.DEPTH_COMPONENT &&
              a.type !== i.qc &&
              a.type !== i.mc &&
              (console.warn(
                "THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."
              ),
              (a.type = i.qc),
              (w = s.convert(a.type))),
              a.format === i.u &&
                ((T = t.DEPTH_STENCIL),
                a.type !== i.lc &&
                  (console.warn(
                    "THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."
                  ),
                  (a.type = i.lc),
                  (w = s.convert(a.type)))),
              n.texImage2D(
                t.TEXTURE_2D,
                0,
                T,
                _.width,
                _.height,
                0,
                b,
                w,
                null
              );
          } else if (a.isDataTexture)
            if (E.length > 0 && y) {
              for (var S = 0, L = E.length; S < L; S++)
                (M = E[S]),
                  n.texImage2D(
                    t.TEXTURE_2D,
                    S,
                    T,
                    M.width,
                    M.height,
                    0,
                    b,
                    w,
                    M.data
                  );
              (a.generateMipmaps = !1), (e.__maxMipLevel = E.length - 1);
            } else
              n.texImage2D(
                t.TEXTURE_2D,
                0,
                T,
                _.width,
                _.height,
                0,
                b,
                w,
                _.data
              ),
                (e.__maxMipLevel = 0);
          else if (a.isCompressedTexture) {
            for (S = 0, L = E.length; S < L; S++)
              (M = E[S]),
                a.format !== i.rb && a.format !== i.Nb
                  ? n.getCompressedTextureFormats().indexOf(b) > -1
                    ? n.compressedTexImage2D(
                        t.TEXTURE_2D,
                        S,
                        T,
                        M.width,
                        M.height,
                        0,
                        M.data
                      )
                    : console.warn(
                        "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"
                      )
                  : n.texImage2D(
                      t.TEXTURE_2D,
                      S,
                      T,
                      M.width,
                      M.height,
                      0,
                      b,
                      w,
                      M.data
                    );
            e.__maxMipLevel = E.length - 1;
          } else if (a.isDataTexture3D)
            n.texImage3D(
              t.TEXTURE_3D,
              0,
              T,
              _.width,
              _.height,
              _.depth,
              0,
              b,
              w,
              _.data
            ),
              (e.__maxMipLevel = 0);
          else if (E.length > 0 && y) {
            for (S = 0, L = E.length; S < L; S++)
              (M = E[S]), n.texImage2D(t.TEXTURE_2D, S, T, b, w, M);
            (a.generateMipmaps = !1), (e.__maxMipLevel = E.length - 1);
          } else
            n.texImage2D(t.TEXTURE_2D, 0, T, b, w, _), (e.__maxMipLevel = 0);
          f(a, y) && p(t.TEXTURE_2D, a, _.width, _.height),
            (e.__version = a.version),
            a.onUpdate && a.onUpdate(a);
        }
        function w(e, i, r, o) {
          var l = s.convert(i.texture.format),
            c = s.convert(i.texture.type),
            h = m(l, c);
          n.texImage2D(o, 0, h, i.width, i.height, 0, l, c, null),
            t.bindFramebuffer(t.FRAMEBUFFER, e),
            t.framebufferTexture2D(
              t.FRAMEBUFFER,
              r,
              o,
              a.get(i.texture).__webglTexture,
              0
            ),
            t.bindFramebuffer(t.FRAMEBUFFER, null);
        }
        function T(e, n) {
          t.bindRenderbuffer(t.RENDERBUFFER, e),
            n.depthBuffer && !n.stencilBuffer
              ? (t.renderbufferStorage(
                  t.RENDERBUFFER,
                  t.DEPTH_COMPONENT16,
                  n.width,
                  n.height
                ),
                t.framebufferRenderbuffer(
                  t.FRAMEBUFFER,
                  t.DEPTH_ATTACHMENT,
                  t.RENDERBUFFER,
                  e
                ))
              : n.depthBuffer && n.stencilBuffer
                ? (t.renderbufferStorage(
                    t.RENDERBUFFER,
                    t.DEPTH_STENCIL,
                    n.width,
                    n.height
                  ),
                  t.framebufferRenderbuffer(
                    t.FRAMEBUFFER,
                    t.DEPTH_STENCIL_ATTACHMENT,
                    t.RENDERBUFFER,
                    e
                  ))
                : t.renderbufferStorage(
                    t.RENDERBUFFER,
                    t.RGBA4,
                    n.width,
                    n.height
                  ),
            t.bindRenderbuffer(t.RENDERBUFFER, null);
        }
        function M(e) {
          var n = a.get(e),
            r = !0 === e.isWebGLRenderTargetCube;
          if (e.depthTexture) {
            if (r)
              throw new Error(
                "target.depthTexture not supported in Cube render targets"
              );
            !(function(e, n) {
              if (n && n.isWebGLRenderTargetCube)
                throw new Error(
                  "Depth Texture with cube render targets is not supported"
                );
              if (
                (t.bindFramebuffer(t.FRAMEBUFFER, e),
                !n.depthTexture || !n.depthTexture.isDepthTexture)
              )
                throw new Error(
                  "renderTarget.depthTexture must be an instance of THREE.DepthTexture"
                );
              (a.get(n.depthTexture).__webglTexture &&
                n.depthTexture.image.width === n.width &&
                n.depthTexture.image.height === n.height) ||
                ((n.depthTexture.image.width = n.width),
                (n.depthTexture.image.height = n.height),
                (n.depthTexture.needsUpdate = !0)),
                y(n.depthTexture, 0);
              var r = a.get(n.depthTexture).__webglTexture;
              if (n.depthTexture.format === i.t)
                t.framebufferTexture2D(
                  t.FRAMEBUFFER,
                  t.DEPTH_ATTACHMENT,
                  t.TEXTURE_2D,
                  r,
                  0
                );
              else {
                if (n.depthTexture.format !== i.u)
                  throw new Error("Unknown depthTexture format");
                t.framebufferTexture2D(
                  t.FRAMEBUFFER,
                  t.DEPTH_STENCIL_ATTACHMENT,
                  t.TEXTURE_2D,
                  r,
                  0
                );
              }
            })(n.__webglFramebuffer, e);
          } else if (r) {
            n.__webglDepthbuffer = [];
            for (var o = 0; o < 6; o++)
              t.bindFramebuffer(t.FRAMEBUFFER, n.__webglFramebuffer[o]),
                (n.__webglDepthbuffer[o] = t.createRenderbuffer()),
                T(n.__webglDepthbuffer[o], e);
          } else
            t.bindFramebuffer(t.FRAMEBUFFER, n.__webglFramebuffer),
              (n.__webglDepthbuffer = t.createRenderbuffer()),
              T(n.__webglDepthbuffer, e);
          t.bindFramebuffer(t.FRAMEBUFFER, null);
        }
        (this.setTexture2D = y),
          (this.setTexture3D = function(e, i) {
            var r = a.get(e);
            e.version > 0 && r.__version !== e.version
              ? b(r, e, i)
              : (n.activeTexture(t.TEXTURE0 + i),
                n.bindTexture(t.TEXTURE_3D, r.__webglTexture));
          }),
          (this.setTextureCube = function(e, r) {
            var c = a.get(e);
            if (6 === e.image.length)
              if (e.version > 0 && c.__version !== e.version) {
                c.__image__webglTextureCube ||
                  (e.addEventListener("dispose", v),
                  (c.__image__webglTextureCube = t.createTexture()),
                  l.memory.textures++),
                  n.activeTexture(t.TEXTURE0 + r),
                  n.bindTexture(
                    t.TEXTURE_CUBE_MAP,
                    c.__image__webglTextureCube
                  ),
                  t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, e.flipY);
                for (
                  var h = e && e.isCompressedTexture,
                    g = e.image[0] && e.image[0].isDataTexture,
                    _ = [],
                    y = 0;
                  y < 6;
                  y++
                )
                  _[y] =
                    h || g
                      ? g ? e.image[y].image : e.image[y]
                      : u(e.image[y], o.maxCubemapSize);
                var b = _[0],
                  w = d(b),
                  T = s.convert(e.format),
                  M = s.convert(e.type),
                  E = m(T, M);
                for (x(t.TEXTURE_CUBE_MAP, e, w), y = 0; y < 6; y++)
                  if (h)
                    for (
                      var S, L = _[y].mipmaps, P = 0, A = L.length;
                      P < A;
                      P++
                    )
                      (S = L[P]),
                        e.format !== i.rb && e.format !== i.Nb
                          ? n.getCompressedTextureFormats().indexOf(T) > -1
                            ? n.compressedTexImage2D(
                                t.TEXTURE_CUBE_MAP_POSITIVE_X + y,
                                P,
                                E,
                                S.width,
                                S.height,
                                0,
                                S.data
                              )
                            : console.warn(
                                "THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"
                              )
                          : n.texImage2D(
                              t.TEXTURE_CUBE_MAP_POSITIVE_X + y,
                              P,
                              E,
                              S.width,
                              S.height,
                              0,
                              T,
                              M,
                              S.data
                            );
                  else
                    g
                      ? n.texImage2D(
                          t.TEXTURE_CUBE_MAP_POSITIVE_X + y,
                          0,
                          E,
                          _[y].width,
                          _[y].height,
                          0,
                          T,
                          M,
                          _[y].data
                        )
                      : n.texImage2D(
                          t.TEXTURE_CUBE_MAP_POSITIVE_X + y,
                          0,
                          E,
                          T,
                          M,
                          _[y]
                        );
                (c.__maxMipLevel = h ? L.length - 1 : 0),
                  f(e, w) && p(t.TEXTURE_CUBE_MAP, e, b.width, b.height),
                  (c.__version = e.version),
                  e.onUpdate && e.onUpdate(e);
              } else
                n.activeTexture(t.TEXTURE0 + r),
                  n.bindTexture(
                    t.TEXTURE_CUBE_MAP,
                    c.__image__webglTextureCube
                  );
          }),
          (this.setTextureCubeDynamic = function(e, i) {
            n.activeTexture(t.TEXTURE0 + i),
              n.bindTexture(t.TEXTURE_CUBE_MAP, a.get(e).__webglTexture);
          }),
          (this.setupRenderTarget = function(e) {
            var i = a.get(e),
              r = a.get(e.texture);
            e.addEventListener("dispose", _),
              (r.__webglTexture = t.createTexture()),
              l.memory.textures++;
            var o = !0 === e.isWebGLRenderTargetCube,
              s = d(e);
            if (o) {
              i.__webglFramebuffer = [];
              for (var c = 0; c < 6; c++)
                i.__webglFramebuffer[c] = t.createFramebuffer();
            } else i.__webglFramebuffer = t.createFramebuffer();
            if (o) {
              for (
                n.bindTexture(t.TEXTURE_CUBE_MAP, r.__webglTexture),
                  x(t.TEXTURE_CUBE_MAP, e.texture, s),
                  c = 0;
                c < 6;
                c++
              )
                w(
                  i.__webglFramebuffer[c],
                  e,
                  t.COLOR_ATTACHMENT0,
                  t.TEXTURE_CUBE_MAP_POSITIVE_X + c
                );
              f(e.texture, s) &&
                p(t.TEXTURE_CUBE_MAP, e.texture, e.width, e.height),
                n.bindTexture(t.TEXTURE_CUBE_MAP, null);
            } else
              n.bindTexture(t.TEXTURE_2D, r.__webglTexture),
                x(t.TEXTURE_2D, e.texture, s),
                w(i.__webglFramebuffer, e, t.COLOR_ATTACHMENT0, t.TEXTURE_2D),
                f(e.texture, s) &&
                  p(t.TEXTURE_2D, e.texture, e.width, e.height),
                n.bindTexture(t.TEXTURE_2D, null);
            e.depthBuffer && M(e);
          }),
          (this.updateRenderTargetMipmap = function(e) {
            var i = e.texture;
            if (f(i, d(e))) {
              var r = e.isWebGLRenderTargetCube
                  ? t.TEXTURE_CUBE_MAP
                  : t.TEXTURE_2D,
                o = a.get(i).__webglTexture;
              n.bindTexture(r, o),
                p(r, i, e.width, e.height),
                n.bindTexture(r, null);
            }
          });
      }
      function fe(t, e, n) {
        return {
          convert: function(r) {
            var a;
            if (r === i.Wb) return t.REPEAT;
            if (r === i.k) return t.CLAMP_TO_EDGE;
            if (r === i.U) return t.MIRRORED_REPEAT;
            if (r === i.Y) return t.NEAREST;
            if (r === i.ab) return t.NEAREST_MIPMAP_NEAREST;
            if (r === i.Z) return t.NEAREST_MIPMAP_LINEAR;
            if (r === i.M) return t.LINEAR;
            if (r === i.O) return t.LINEAR_MIPMAP_NEAREST;
            if (r === i.N) return t.LINEAR_MIPMAP_LINEAR;
            if (r === i.kc) return t.UNSIGNED_BYTE;
            if (r === i.nc) return t.UNSIGNED_SHORT_4_4_4_4;
            if (r === i.oc) return t.UNSIGNED_SHORT_5_5_5_1;
            if (r === i.pc) return t.UNSIGNED_SHORT_5_6_5;
            if (r === i.i) return t.BYTE;
            if (r === i.Yb) return t.SHORT;
            if (r === i.qc) return t.UNSIGNED_SHORT;
            if (r === i.I) return t.INT;
            if (r === i.mc) return t.UNSIGNED_INT;
            if (r === i.C) return t.FLOAT;
            if (r === i.H) {
              if (n.isWebGL2) return t.HALF_FLOAT;
              if (null !== (a = e.get("OES_texture_half_float")))
                return a.HALF_FLOAT_OES;
            }
            if (r === i.e) return t.ALPHA;
            if (r === i.Nb) return t.RGB;
            if (r === i.rb) return t.RGBA;
            if (r === i.R) return t.LUMINANCE;
            if (r === i.Q) return t.LUMINANCE_ALPHA;
            if (r === i.t) return t.DEPTH_COMPONENT;
            if (r === i.u) return t.DEPTH_STENCIL;
            if (r === i.Ub) return t.RED;
            if (r === i.b) return t.FUNC_ADD;
            if (r === i.dc) return t.FUNC_SUBTRACT;
            if (r === i.Xb) return t.FUNC_REVERSE_SUBTRACT;
            if (r === i.rc) return t.ZERO;
            if (r === i.ib) return t.ONE;
            if (r === i.cc) return t.SRC_COLOR;
            if (r === i.mb) return t.ONE_MINUS_SRC_COLOR;
            if (r === i.ac) return t.SRC_ALPHA;
            if (r === i.lb) return t.ONE_MINUS_SRC_ALPHA;
            if (r === i.w) return t.DST_ALPHA;
            if (r === i.jb) return t.ONE_MINUS_DST_ALPHA;
            if (r === i.x) return t.DST_COLOR;
            if (r === i.kb) return t.ONE_MINUS_DST_COLOR;
            if (r === i.bc) return t.SRC_ALPHA_SATURATE;
            if (
              (r === i.Tb || r === i.Ib || r === i.Jb || r === i.Kb) &&
              null !== (a = e.get("WEBGL_compressed_texture_s3tc"))
            ) {
              if (r === i.Tb) return a.COMPRESSED_RGB_S3TC_DXT1_EXT;
              if (r === i.Ib) return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;
              if (r === i.Jb) return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;
              if (r === i.Kb) return a.COMPRESSED_RGBA_S3TC_DXT5_EXT;
            }
            if (
              (r === i.Sb || r === i.Rb || r === i.Hb || r === i.Gb) &&
              null !== (a = e.get("WEBGL_compressed_texture_pvrtc"))
            ) {
              if (r === i.Sb) return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
              if (r === i.Rb) return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
              if (r === i.Hb) return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
              if (r === i.Gb) return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
            }
            if (
              r === i.Qb &&
              null !== (a = e.get("WEBGL_compressed_texture_etc1"))
            )
              return a.COMPRESSED_RGB_ETC1_WEBGL;
            if (
              (r === i.yb ||
                r === i.zb ||
                r === i.Ab ||
                r === i.Bb ||
                r === i.Cb ||
                r === i.Db ||
                r === i.Eb ||
                r === i.Fb ||
                r === i.tb ||
                r === i.ub ||
                r === i.vb ||
                r === i.sb ||
                r === i.wb ||
                r === i.xb) &&
              null !== (a = e.get("WEBGL_compressed_texture_astc"))
            )
              return r;
            if (r === i.T || r === i.S) {
              if (n.isWebGL2) {
                if (r === i.T) return t.MIN;
                if (r === i.S) return t.MAX;
              }
              if (null !== (a = e.get("EXT_blend_minmax"))) {
                if (r === i.T) return a.MIN_EXT;
                if (r === i.S) return a.MAX_EXT;
              }
            }
            if (r === i.lc) {
              if (n.isWebGL2) return t.UNSIGNED_INT_24_8;
              if (null !== (a = e.get("WEBGL_depth_texture")))
                return a.UNSIGNED_INT_24_8_WEBGL;
            }
            return 0;
          }
        };
      }
      (le.prototype = Object.create(se.a.prototype)),
        (le.prototype.constructor = le),
        (le.prototype.isMeshDepthMaterial = !0),
        (le.prototype.copy = function(t) {
          return (
            se.a.prototype.copy.call(this, t),
            (this.depthPacking = t.depthPacking),
            (this.skinning = t.skinning),
            (this.morphTargets = t.morphTargets),
            (this.map = t.map),
            (this.alphaMap = t.alphaMap),
            (this.displacementMap = t.displacementMap),
            (this.displacementScale = t.displacementScale),
            (this.displacementBias = t.displacementBias),
            (this.wireframe = t.wireframe),
            (this.wireframeLinewidth = t.wireframeLinewidth),
            this
          );
        }),
        (ce.prototype = Object.create(se.a.prototype)),
        (ce.prototype.constructor = ce),
        (ce.prototype.isMeshDistanceMaterial = !0),
        (ce.prototype.copy = function(t) {
          return (
            se.a.prototype.copy.call(this, t),
            this.referencePosition.copy(t.referencePosition),
            (this.nearDistance = t.nearDistance),
            (this.farDistance = t.farDistance),
            (this.skinning = t.skinning),
            (this.morphTargets = t.morphTargets),
            (this.map = t.map),
            (this.alphaMap = t.alphaMap),
            (this.displacementMap = t.displacementMap),
            (this.displacementScale = t.displacementScale),
            (this.displacementBias = t.displacementBias),
            this
          );
        });
      var pe = n(10);
      function me() {
        pe.a.call(this), (this.type = "Group");
      }
      me.prototype = Object.assign(Object.create(pe.a.prototype), {
        constructor: me,
        isGroup: !0
      });
      var ge = n(15),
        ve = n(22);
      function _e(t, e, n, i) {
        ve.a.call(this),
          (this.type = "PerspectiveCamera"),
          (this.fov = void 0 !== t ? t : 50),
          (this.zoom = 1),
          (this.near = void 0 !== n ? n : 0.1),
          (this.far = void 0 !== i ? i : 2e3),
          (this.focus = 10),
          (this.aspect = void 0 !== e ? e : 1),
          (this.view = null),
          (this.filmGauge = 35),
          (this.filmOffset = 0),
          this.updateProjectionMatrix();
      }
      function ye(t) {
        _e.call(this), (this.cameras = t || []);
      }
      (_e.prototype = Object.assign(Object.create(ve.a.prototype), {
        constructor: _e,
        isPerspectiveCamera: !0,
        copy: function(t, e) {
          return (
            ve.a.prototype.copy.call(this, t, e),
            (this.fov = t.fov),
            (this.zoom = t.zoom),
            (this.near = t.near),
            (this.far = t.far),
            (this.focus = t.focus),
            (this.aspect = t.aspect),
            (this.view = null === t.view ? null : Object.assign({}, t.view)),
            (this.filmGauge = t.filmGauge),
            (this.filmOffset = t.filmOffset),
            this
          );
        },
        setFocalLength: function(t) {
          var e = 0.5 * this.getFilmHeight() / t;
          (this.fov = 2 * r.a.RAD2DEG * Math.atan(e)),
            this.updateProjectionMatrix();
        },
        getFocalLength: function() {
          var t = Math.tan(0.5 * r.a.DEG2RAD * this.fov);
          return 0.5 * this.getFilmHeight() / t;
        },
        getEffectiveFOV: function() {
          return (
            2 *
            r.a.RAD2DEG *
            Math.atan(Math.tan(0.5 * r.a.DEG2RAD * this.fov) / this.zoom)
          );
        },
        getFilmWidth: function() {
          return this.filmGauge * Math.min(this.aspect, 1);
        },
        getFilmHeight: function() {
          return this.filmGauge / Math.max(this.aspect, 1);
        },
        setViewOffset: function(t, e, n, i, r, a) {
          (this.aspect = t / e),
            null === this.view &&
              (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1
              }),
            (this.view.enabled = !0),
            (this.view.fullWidth = t),
            (this.view.fullHeight = e),
            (this.view.offsetX = n),
            (this.view.offsetY = i),
            (this.view.width = r),
            (this.view.height = a),
            this.updateProjectionMatrix();
        },
        clearViewOffset: function() {
          null !== this.view && (this.view.enabled = !1),
            this.updateProjectionMatrix();
        },
        updateProjectionMatrix: function() {
          var t = this.near,
            e = t * Math.tan(0.5 * r.a.DEG2RAD * this.fov) / this.zoom,
            n = 2 * e,
            i = this.aspect * n,
            a = -0.5 * i,
            o = this.view;
          if (null !== this.view && this.view.enabled) {
            var s = o.fullWidth,
              l = o.fullHeight;
            (a += o.offsetX * i / s),
              (e -= o.offsetY * n / l),
              (i *= o.width / s),
              (n *= o.height / l);
          }
          var c = this.filmOffset;
          0 !== c && (a += t * c / this.getFilmWidth()),
            this.projectionMatrix.makePerspective(
              a,
              a + i,
              e,
              e - n,
              t,
              this.far
            ),
            this.projectionMatrixInverse.getInverse(this.projectionMatrix);
        },
        toJSON: function(t) {
          var e = pe.a.prototype.toJSON.call(this, t);
          return (
            (e.object.fov = this.fov),
            (e.object.zoom = this.zoom),
            (e.object.near = this.near),
            (e.object.far = this.far),
            (e.object.focus = this.focus),
            (e.object.aspect = this.aspect),
            null !== this.view &&
              (e.object.view = Object.assign({}, this.view)),
            (e.object.filmGauge = this.filmGauge),
            (e.object.filmOffset = this.filmOffset),
            e
          );
        }
      })),
        (ye.prototype = Object.assign(Object.create(_e.prototype), {
          constructor: ye,
          isArrayCamera: !0
        }));
      var xe = new u.a(),
        be = new u.a();
      function we(t, e, n) {
        xe.setFromMatrixPosition(e.matrixWorld),
          be.setFromMatrixPosition(n.matrixWorld);
        var i = xe.distanceTo(be),
          r = e.projectionMatrix.elements,
          a = n.projectionMatrix.elements,
          o = r[14] / (r[10] - 1),
          s = r[14] / (r[10] + 1),
          l = (r[9] + 1) / r[5],
          c = (r[9] - 1) / r[5],
          h = (r[8] - 1) / r[0],
          u = (a[8] + 1) / a[0],
          d = o * h,
          f = o * u,
          p = i / (-h + u),
          m = p * -h;
        e.matrixWorld.decompose(t.position, t.quaternion, t.scale),
          t.translateX(m),
          t.translateZ(p),
          t.matrixWorld.compose(t.position, t.quaternion, t.scale),
          t.matrixWorldInverse.getInverse(t.matrixWorld);
        var g = o + p,
          v = s + p,
          _ = d - m,
          y = f + (i - m),
          x = l * s / v * g,
          b = c * s / v * g;
        t.projectionMatrix.makePerspective(_, y, x, b, g, v);
      }
      function Te(t) {
        var e = this,
          n = null,
          i = null,
          r = null,
          a = [],
          o = new g.a(),
          s = new g.a(),
          l = 1,
          c = "stage";
        "undefined" != typeof window &&
          "VRFrameData" in window &&
          ((i = new window.VRFrameData()),
          window.addEventListener("vrdisplaypresentchange", b, !1));
        var h = new g.a(),
          d = new ge.a(),
          f = new u.a(),
          p = new _e();
        (p.bounds = new T.a(0, 0, 0.5, 1)), p.layers.enable(1);
        var m = new _e();
        (m.bounds = new T.a(0.5, 0, 0.5, 1)), m.layers.enable(2);
        var v,
          _,
          y = new ye([p, m]);
        function x() {
          return null !== n && !0 === n.isPresenting;
        }
        function b() {
          if (x()) {
            var i = n.getEyeParameters("left"),
              r = i.renderWidth * l,
              a = i.renderHeight * l;
            (_ = t.getPixelRatio()),
              (v = t.getSize()),
              t.setDrawingBufferSize(2 * r, a, 1),
              S.start();
          } else
            e.enabled && t.setDrawingBufferSize(v.width, v.height, _), S.stop();
        }
        y.layers.enable(1), y.layers.enable(2);
        var w = [];
        function E(t) {
          for (
            var e = navigator.getGamepads && navigator.getGamepads(),
              n = 0,
              i = 0,
              r = e.length;
            n < r;
            n++
          ) {
            var a = e[n];
            if (
              a &&
              ("Daydream Controller" === a.id ||
                "Gear VR Controller" === a.id ||
                "Oculus Go Controller" === a.id ||
                "OpenVR Gamepad" === a.id ||
                a.id.startsWith("Oculus Touch") ||
                a.id.startsWith("Spatial Controller"))
            ) {
              if (i === t) return a;
              i++;
            }
          }
        }
        (this.enabled = !1),
          (this.getController = function(t) {
            var e = a[t];
            return (
              void 0 === e &&
                (((e = new me()).matrixAutoUpdate = !1),
                (e.visible = !1),
                (a[t] = e)),
              e
            );
          }),
          (this.getDevice = function() {
            return n;
          }),
          (this.setDevice = function(t) {
            void 0 !== t && (n = t), S.setContext(t);
          }),
          (this.setFramebufferScaleFactor = function(t) {
            l = t;
          }),
          (this.setFrameOfReferenceType = function(t) {
            c = t;
          }),
          (this.setPoseTarget = function(t) {
            void 0 !== t && (r = t);
          }),
          (this.getCamera = function(t) {
            var e = "stage" === c ? 1.6 : 0;
            if (null === n) return t.position.set(0, e, 0), t;
            if (
              ((n.depthNear = t.near),
              (n.depthFar = t.far),
              n.getFrameData(i),
              "stage" === c)
            ) {
              var l = n.stageParameters;
              l
                ? o.fromArray(l.sittingToStandingTransform)
                : o.makeTranslation(0, e, 0);
            }
            var u = i.pose,
              g = null !== r ? r : t;
            if (
              (g.matrix.copy(o),
              g.matrix.decompose(g.position, g.quaternion, g.scale),
              null !== u.orientation &&
                (d.fromArray(u.orientation), g.quaternion.multiply(d)),
              null !== u.position &&
                (d.setFromRotationMatrix(o),
                f.fromArray(u.position),
                f.applyQuaternion(d),
                g.position.add(f)),
              g.updateMatrixWorld(),
              !1 === n.isPresenting)
            )
              return t;
            (p.near = t.near),
              (m.near = t.near),
              (p.far = t.far),
              (m.far = t.far),
              p.matrixWorldInverse.fromArray(i.leftViewMatrix),
              m.matrixWorldInverse.fromArray(i.rightViewMatrix),
              s.getInverse(o),
              "stage" === c &&
                (p.matrixWorldInverse.multiply(s),
                m.matrixWorldInverse.multiply(s));
            var v = g.parent;
            null !== v &&
              (h.getInverse(v.matrixWorld),
              p.matrixWorldInverse.multiply(h),
              m.matrixWorldInverse.multiply(h)),
              p.matrixWorld.getInverse(p.matrixWorldInverse),
              m.matrixWorld.getInverse(m.matrixWorldInverse),
              p.projectionMatrix.fromArray(i.leftProjectionMatrix),
              m.projectionMatrix.fromArray(i.rightProjectionMatrix),
              we(y, p, m);
            var _ = n.getLayers();
            if (_.length) {
              var x = _[0];
              null !== x.leftBounds &&
                4 === x.leftBounds.length &&
                p.bounds.fromArray(x.leftBounds),
                null !== x.rightBounds &&
                  4 === x.rightBounds.length &&
                  m.bounds.fromArray(x.rightBounds);
            }
            return (
              (function() {
                for (var t = 0; t < a.length; t++) {
                  var e = a[t],
                    n = E(t);
                  if (void 0 !== n && void 0 !== n.pose) {
                    if (null === n.pose) return;
                    var i = n.pose;
                    !1 === i.hasPosition && e.position.set(0.2, -0.6, -0.05),
                      null !== i.position && e.position.fromArray(i.position),
                      null !== i.orientation &&
                        e.quaternion.fromArray(i.orientation),
                      e.matrix.compose(e.position, e.quaternion, e.scale),
                      e.matrix.premultiply(o),
                      e.matrix.decompose(e.position, e.quaternion, e.scale),
                      (e.matrixWorldNeedsUpdate = !0),
                      (e.visible = !0);
                    var r = "Daydream Controller" === n.id ? 0 : 1;
                    w[t] !== n.buttons[r].pressed &&
                      ((w[t] = n.buttons[r].pressed),
                      !0 === w[t]
                        ? e.dispatchEvent({ type: "selectstart" })
                        : (e.dispatchEvent({ type: "selectend" }),
                          e.dispatchEvent({ type: "select" })));
                  } else e.visible = !1;
                }
              })(),
              y
            );
          }),
          (this.getStandingMatrix = function() {
            return o;
          }),
          (this.isPresenting = x);
        var S = new M();
        (this.setAnimationLoop = function(t) {
          S.setAnimationLoop(t);
        }),
          (this.submitFrame = function() {
            x() && n.submitFrame();
          }),
          (this.dispose = function() {
            "undefined" != typeof window &&
              window.removeEventListener("vrdisplaypresentchange", b);
          });
      }
      function Me(t) {
        var e = t.context,
          n = null,
          i = null,
          r = 1,
          a = null,
          o = "stage",
          s = null,
          l = [],
          c = [];
        function h() {
          return null !== i && null !== a;
        }
        var u = new _e();
        u.layers.enable(1), (u.viewport = new T.a());
        var d = new _e();
        d.layers.enable(2), (d.viewport = new T.a());
        var f = new ye([u, d]);
        function p(t) {
          var e = l[c.indexOf(t.inputSource)];
          e && e.dispatchEvent({ type: t.type });
        }
        function m() {
          t.setFramebuffer(null), _.stop();
        }
        function g(t, e) {
          null === e
            ? t.matrixWorld.copy(t.matrix)
            : t.matrixWorld.multiplyMatrices(e.matrixWorld, t.matrix),
            t.matrixWorldInverse.getInverse(t.matrixWorld);
        }
        f.layers.enable(1),
          f.layers.enable(2),
          (this.enabled = !1),
          (this.getController = function(t) {
            var e = l[t];
            return (
              void 0 === e &&
                (((e = new me()).matrixAutoUpdate = !1),
                (e.visible = !1),
                (l[t] = e)),
              e
            );
          }),
          (this.getDevice = function() {
            return n;
          }),
          (this.setDevice = function(t) {
            void 0 !== t && (n = t),
              t instanceof XRDevice && e.setCompatibleXRDevice(t);
          }),
          (this.setFramebufferScaleFactor = function(t) {
            r = t;
          }),
          (this.setFrameOfReferenceType = function(t) {
            o = t;
          }),
          (this.setSession = function(n) {
            null !== (i = n) &&
              (i.addEventListener("select", p),
              i.addEventListener("selectstart", p),
              i.addEventListener("selectend", p),
              i.addEventListener("end", m),
              (i.baseLayer = new XRWebGLLayer(i, e, {
                framebufferScaleFactor: r
              })),
              i.requestFrameOfReference(o).then(function(e) {
                (a = e),
                  t.setFramebuffer(i.baseLayer.framebuffer),
                  _.setContext(i),
                  _.start();
              }),
              (c = i.getInputSources()),
              i.addEventListener("inputsourceschange", function() {
                (c = i.getInputSources()), console.log(c);
                for (var t = 0; t < l.length; t++) {
                  l[t].userData.inputSource = c[t];
                }
              }));
          }),
          (this.getCamera = function(t) {
            if (h()) {
              var e = t.parent,
                n = f.cameras;
              g(f, e);
              for (var i = 0; i < n.length; i++) g(n[i], e);
              t.matrixWorld.copy(f.matrixWorld);
              for (var r = t.children, a = ((i = 0), r.length); i < a; i++)
                r[i].updateMatrixWorld(!0);
              return we(f, u, d), f;
            }
            return t;
          }),
          (this.isPresenting = h);
        var v = null;
        var _ = new M();
        _.setAnimationLoop(function(t, e) {
          if (null !== (s = e.getDevicePose(a)))
            for (var n = i.baseLayer, r = e.views, o = 0; o < r.length; o++) {
              var h = r[o],
                u = n.getViewport(h),
                d = s.getViewMatrix(h),
                p = f.cameras[o];
              p.matrix.fromArray(d).getInverse(p.matrix),
                p.projectionMatrix.fromArray(h.projectionMatrix),
                p.viewport.set(u.x, u.y, u.width, u.height),
                0 === o && f.matrix.copy(p.matrix);
            }
          for (o = 0; o < l.length; o++) {
            var m = l[o],
              g = c[o];
            if (g) {
              var _ = e.getInputPose(g, a);
              if (null !== _) {
                "targetRay" in _
                  ? (m.matrix.elements = _.targetRay.transformMatrix)
                  : "pointerMatrix" in _ &&
                    (m.matrix.elements = _.pointerMatrix),
                  m.matrix.decompose(m.position, m.rotation, m.scale),
                  (m.visible = !0);
                continue;
              }
            }
            m.visible = !1;
          }
          v && v(t);
        }),
          (this.setAnimationLoop = function(t) {
            v = t;
          }),
          (this.dispose = function() {}),
          (this.getStandingMatrix = function() {
            return (
              console.warn(
                "THREE.WebXRManager: getStandingMatrix() is no longer needed."
              ),
              new THREE.Matrix4()
            );
          }),
          (this.submitFrame = function() {});
      }
      function Ee(t) {
        console.log("THREE.WebGLRenderer", i.pb);
        var e =
            void 0 !== (t = t || {}).canvas
              ? t.canvas
              : document.createElementNS(
                  "http://www.w3.org/1999/xhtml",
                  "canvas"
                ),
          n = void 0 !== t.context ? t.context : null,
          a = void 0 !== t.alpha && t.alpha,
          s = void 0 === t.depth || t.depth,
          l = void 0 === t.stencil || t.stencil,
          c = void 0 !== t.antialias && t.antialias,
          h = void 0 === t.premultipliedAlpha || t.premultipliedAlpha,
          d = void 0 !== t.preserveDrawingBuffer && t.preserveDrawingBuffer,
          f = void 0 !== t.powerPreference ? t.powerPreference : "default",
          p = null,
          v = null;
        (this.domElement = e),
          (this.context = null),
          (this.autoClear = !0),
          (this.autoClearColor = !0),
          (this.autoClearDepth = !0),
          (this.autoClearStencil = !0),
          (this.sortObjects = !0),
          (this.clippingPlanes = []),
          (this.localClippingEnabled = !1),
          (this.gammaFactor = 2),
          (this.gammaInput = !1),
          (this.gammaOutput = !1),
          (this.physicallyCorrectLights = !1),
          (this.toneMapping = i.P),
          (this.toneMappingExposure = 1),
          (this.toneMappingWhitePoint = 1),
          (this.maxMorphTargets = 8),
          (this.maxMorphNormals = 4);
        var y,
          x,
          S,
          L,
          P,
          A,
          R,
          C,
          D,
          O,
          k,
          H,
          j,
          Y,
          q,
          Z,
          J,
          K,
          Q = this,
          $ = !1,
          tt = null,
          et = null,
          nt = null,
          it = -1,
          rt = { geometry: null, program: null, wireframe: !1 },
          at = null,
          ot = null,
          st = new T.a(),
          lt = new T.a(),
          ct = null,
          ht = 0,
          ut = e.width,
          dt = e.height,
          ft = 1,
          pt = new T.a(0, 0, ut, dt),
          mt = new T.a(0, 0, ut, dt),
          gt = !1,
          vt = new m(),
          _t = new F(),
          yt = !1,
          xt = !1,
          bt = new g.a(),
          wt = new u.a();
        function Tt() {
          return null === et ? ft : 1;
        }
        try {
          var Mt = {
            alpha: a,
            depth: s,
            stencil: l,
            antialias: c,
            premultipliedAlpha: h,
            preserveDrawingBuffer: d,
            powerPreference: f
          };
          if (
            (e.addEventListener("webglcontextlost", Pt, !1),
            e.addEventListener("webglcontextrestored", At, !1),
            null ===
              (y =
                n ||
                e.getContext("webgl", Mt) ||
                e.getContext("experimental-webgl", Mt)))
          )
            throw null !== e.getContext("webgl")
              ? new Error(
                  "Error creating WebGL context with your selected attributes."
                )
              : new Error("Error creating WebGL context.");
          void 0 === y.getShaderPrecisionFormat &&
            (y.getShaderPrecisionFormat = function() {
              return { rangeMin: 1, rangeMax: 1, precision: 1 };
            });
        } catch (t) {
          console.error("THREE.WebGLRenderer: " + t.message);
        }
        function Et() {
          (x = new z(y)),
            (S = new U(y, x, t)).isWebGL2 ||
              (x.get("WEBGL_depth_texture"),
              x.get("OES_texture_float"),
              x.get("OES_texture_half_float"),
              x.get("OES_texture_half_float_linear"),
              x.get("OES_standard_derivatives"),
              x.get("OES_element_index_uint"),
              x.get("ANGLE_instanced_arrays")),
            x.get("OES_texture_float_linear"),
            (K = new fe(y, x, S)),
            (L = new ue(y, x, K, S)).scissor(lt.copy(mt).multiplyScalar(ft)),
            L.viewport(st.copy(pt).multiplyScalar(ft)),
            (P = new V(y)),
            (A = new Zt()),
            (R = new de(y, x, L, A, S, K, P)),
            (C = new E(y)),
            (D = new B(y, C, P)),
            (O = new X(D, P)),
            (q = new W(y)),
            (k = new qt(Q, x, S)),
            (H = new $t()),
            (j = new re()),
            (Y = new I(Q, L, O, h)),
            (Z = new N(y, x, P, S)),
            (J = new G(y, x, P, S)),
            (P.programs = k.programs),
            (Q.context = y),
            (Q.capabilities = S),
            (Q.extensions = x),
            (Q.properties = A),
            (Q.renderLists = H),
            (Q.state = L),
            (Q.info = P);
        }
        Et();
        var St = null;
        "undefined" != typeof navigator &&
          (St = "xr" in navigator ? new Me(Q) : new Te(Q)),
          (this.vr = St);
        var Lt = new he(Q, O, S.maxTextureSize);
        function Pt(t) {
          t.preventDefault(),
            console.log("THREE.WebGLRenderer: Context Lost."),
            ($ = !0);
        }
        function At() {
          console.log("THREE.WebGLRenderer: Context Restored."), ($ = !1), Et();
        }
        function Rt(t) {
          var e = t.target;
          e.removeEventListener("dispose", Rt),
            (function(t) {
              Ct(t), A.remove(t);
            })(e);
        }
        function Ct(t) {
          var e = A.get(t).program;
          (t.program = void 0), void 0 !== e && k.releaseProgram(e);
        }
        (this.shadowMap = Lt),
          (this.getContext = function() {
            return y;
          }),
          (this.getContextAttributes = function() {
            return y.getContextAttributes();
          }),
          (this.forceContextLoss = function() {
            var t = x.get("WEBGL_lose_context");
            t && t.loseContext();
          }),
          (this.forceContextRestore = function() {
            var t = x.get("WEBGL_lose_context");
            t && t.restoreContext();
          }),
          (this.getPixelRatio = function() {
            return ft;
          }),
          (this.setPixelRatio = function(t) {
            void 0 !== t && ((ft = t), this.setSize(ut, dt, !1));
          }),
          (this.getSize = function() {
            return { width: ut, height: dt };
          }),
          (this.setSize = function(t, n, i) {
            St.isPresenting()
              ? console.warn(
                  "THREE.WebGLRenderer: Can't change size while VR device is presenting."
                )
              : ((ut = t),
                (dt = n),
                (e.width = t * ft),
                (e.height = n * ft),
                !1 !== i &&
                  ((e.style.width = t + "px"), (e.style.height = n + "px")),
                this.setViewport(0, 0, t, n));
          }),
          (this.getDrawingBufferSize = function() {
            return { width: ut * ft, height: dt * ft };
          }),
          (this.setDrawingBufferSize = function(t, n, i) {
            (ut = t),
              (dt = n),
              (ft = i),
              (e.width = t * i),
              (e.height = n * i),
              this.setViewport(0, 0, t, n);
          }),
          (this.getCurrentViewport = function() {
            return st;
          }),
          (this.setViewport = function(t, e, n, i) {
            pt.set(t, dt - e - i, n, i),
              L.viewport(st.copy(pt).multiplyScalar(ft));
          }),
          (this.setScissor = function(t, e, n, i) {
            mt.set(t, dt - e - i, n, i),
              L.scissor(lt.copy(mt).multiplyScalar(ft));
          }),
          (this.setScissorTest = function(t) {
            L.setScissorTest((gt = t));
          }),
          (this.getClearColor = function() {
            return Y.getClearColor();
          }),
          (this.setClearColor = function() {
            Y.setClearColor.apply(Y, arguments);
          }),
          (this.getClearAlpha = function() {
            return Y.getClearAlpha();
          }),
          (this.setClearAlpha = function() {
            Y.setClearAlpha.apply(Y, arguments);
          }),
          (this.clear = function(t, e, n) {
            var i = 0;
            (void 0 === t || t) && (i |= y.COLOR_BUFFER_BIT),
              (void 0 === e || e) && (i |= y.DEPTH_BUFFER_BIT),
              (void 0 === n || n) && (i |= y.STENCIL_BUFFER_BIT),
              y.clear(i);
          }),
          (this.clearColor = function() {
            this.clear(!0, !1, !1);
          }),
          (this.clearDepth = function() {
            this.clear(!1, !0, !1);
          }),
          (this.clearStencil = function() {
            this.clear(!1, !1, !0);
          }),
          (this.dispose = function() {
            e.removeEventListener("webglcontextlost", Pt, !1),
              e.removeEventListener("webglcontextrestored", At, !1),
              H.dispose(),
              j.dispose(),
              A.dispose(),
              O.dispose(),
              St.dispose(),
              It.stop();
          }),
          (this.renderBufferImmediate = function(t, e) {
            L.initAttributes();
            var n = A.get(t);
            t.hasPositions && !n.position && (n.position = y.createBuffer()),
              t.hasNormals && !n.normal && (n.normal = y.createBuffer()),
              t.hasUvs && !n.uv && (n.uv = y.createBuffer()),
              t.hasColors && !n.color && (n.color = y.createBuffer());
            var i = e.getAttributes();
            t.hasPositions &&
              (y.bindBuffer(y.ARRAY_BUFFER, n.position),
              y.bufferData(y.ARRAY_BUFFER, t.positionArray, y.DYNAMIC_DRAW),
              L.enableAttribute(i.position),
              y.vertexAttribPointer(i.position, 3, y.FLOAT, !1, 0, 0)),
              t.hasNormals &&
                (y.bindBuffer(y.ARRAY_BUFFER, n.normal),
                y.bufferData(y.ARRAY_BUFFER, t.normalArray, y.DYNAMIC_DRAW),
                L.enableAttribute(i.normal),
                y.vertexAttribPointer(i.normal, 3, y.FLOAT, !1, 0, 0)),
              t.hasUvs &&
                (y.bindBuffer(y.ARRAY_BUFFER, n.uv),
                y.bufferData(y.ARRAY_BUFFER, t.uvArray, y.DYNAMIC_DRAW),
                L.enableAttribute(i.uv),
                y.vertexAttribPointer(i.uv, 2, y.FLOAT, !1, 0, 0)),
              t.hasColors &&
                (y.bindBuffer(y.ARRAY_BUFFER, n.color),
                y.bufferData(y.ARRAY_BUFFER, t.colorArray, y.DYNAMIC_DRAW),
                L.enableAttribute(i.color),
                y.vertexAttribPointer(i.color, 3, y.FLOAT, !1, 0, 0)),
              L.disableUnusedAttributes(),
              y.drawArrays(y.TRIANGLES, 0, t.count),
              (t.count = 0);
          }),
          (this.renderBufferDirect = function(t, e, n, r, a, o) {
            var s = a.isMesh && a.normalMatrix.determinant() < 0;
            L.setMaterial(r, s);
            var l = kt(t, e, r, a),
              c = !1;
            (rt.geometry === n.id &&
              rt.program === l.id &&
              rt.wireframe === (!0 === r.wireframe)) ||
              ((rt.geometry = n.id),
              (rt.program = l.id),
              (rt.wireframe = !0 === r.wireframe),
              (c = !0)),
              a.morphTargetInfluences && (q.update(a, n, r, l), (c = !0));
            var h,
              u = n.index,
              d = n.attributes.position,
              f = 1;
            !0 === r.wireframe && ((u = D.getWireframeAttribute(n)), (f = 2));
            var p = Z;
            null !== u && ((h = C.get(u)), (p = J).setIndex(h)),
              c &&
                (!(function(t, e, n) {
                  if (
                    n &&
                    n.isInstancedBufferGeometry & !S.isWebGL2 &&
                    null === x.get("ANGLE_instanced_arrays")
                  )
                    return void console.error(
                      "THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."
                    );
                  L.initAttributes();
                  var i = n.attributes,
                    r = e.getAttributes(),
                    a = t.defaultAttributeValues;
                  for (var o in r) {
                    var s = r[o];
                    if (s >= 0) {
                      var l = i[o];
                      if (void 0 !== l) {
                        var c = l.normalized,
                          h = l.itemSize,
                          u = C.get(l);
                        if (void 0 === u) continue;
                        var d = u.buffer,
                          f = u.type,
                          p = u.bytesPerElement;
                        if (l.isInterleavedBufferAttribute) {
                          var m = l.data,
                            g = m.stride,
                            v = l.offset;
                          m && m.isInstancedInterleavedBuffer
                            ? (L.enableAttributeAndDivisor(
                                s,
                                m.meshPerAttribute
                              ),
                              void 0 === n.maxInstancedCount &&
                                (n.maxInstancedCount =
                                  m.meshPerAttribute * m.count))
                            : L.enableAttribute(s),
                            y.bindBuffer(y.ARRAY_BUFFER, d),
                            y.vertexAttribPointer(s, h, f, c, g * p, v * p);
                        } else
                          l.isInstancedBufferAttribute
                            ? (L.enableAttributeAndDivisor(
                                s,
                                l.meshPerAttribute
                              ),
                              void 0 === n.maxInstancedCount &&
                                (n.maxInstancedCount =
                                  l.meshPerAttribute * l.count))
                            : L.enableAttribute(s),
                            y.bindBuffer(y.ARRAY_BUFFER, d),
                            y.vertexAttribPointer(s, h, f, c, 0, 0);
                      } else if (void 0 !== a) {
                        var _ = a[o];
                        if (void 0 !== _)
                          switch (_.length) {
                            case 2:
                              y.vertexAttrib2fv(s, _);
                              break;
                            case 3:
                              y.vertexAttrib3fv(s, _);
                              break;
                            case 4:
                              y.vertexAttrib4fv(s, _);
                              break;
                            default:
                              y.vertexAttrib1fv(s, _);
                          }
                      }
                    }
                  }
                  L.disableUnusedAttributes();
                })(r, l, n),
                null !== u && y.bindBuffer(y.ELEMENT_ARRAY_BUFFER, h.buffer));
            var m = 1 / 0;
            null !== u ? (m = u.count) : void 0 !== d && (m = d.count);
            var g = n.drawRange.start * f,
              v = n.drawRange.count * f,
              _ = null !== o ? o.start * f : 0,
              b = null !== o ? o.count * f : 1 / 0,
              w = Math.max(g, _),
              T = Math.min(m, g + v, _ + b) - 1,
              M = Math.max(0, T - w + 1);
            if (0 !== M) {
              if (a.isMesh)
                if (!0 === r.wireframe)
                  L.setLineWidth(r.wireframeLinewidth * Tt()),
                    p.setMode(y.LINES);
                else
                  switch (a.drawMode) {
                    case i.hc:
                      p.setMode(y.TRIANGLES);
                      break;
                    case i.gc:
                      p.setMode(y.TRIANGLE_STRIP);
                      break;
                    case i.fc:
                      p.setMode(y.TRIANGLE_FAN);
                  }
              else if (a.isLine) {
                var E = r.linewidth;
                void 0 === E && (E = 1),
                  L.setLineWidth(E * Tt()),
                  a.isLineSegments
                    ? p.setMode(y.LINES)
                    : a.isLineLoop
                      ? p.setMode(y.LINE_LOOP)
                      : p.setMode(y.LINE_STRIP);
              } else
                a.isPoints
                  ? p.setMode(y.POINTS)
                  : a.isSprite && p.setMode(y.TRIANGLES);
              n && n.isInstancedBufferGeometry
                ? n.maxInstancedCount > 0 && p.renderInstances(n, w, M)
                : p.render(w, M);
            }
          }),
          (this.compile = function(t, e) {
            (v = j.get(t, e)).init(),
              t.traverse(function(t) {
                t.isLight && (v.pushLight(t), t.castShadow && v.pushShadow(t));
              }),
              v.setupLights(e),
              t.traverse(function(e) {
                if (e.material)
                  if (Array.isArray(e.material))
                    for (var n = 0; n < e.material.length; n++)
                      zt(e.material[n], t.fog, e);
                  else zt(e.material, t.fog, e);
              });
          });
        var Dt = null;
        var Ot,
          It = new M();
        function Nt(t, e, n, i) {
          for (var r = 0, a = t.length; r < a; r++) {
            var o = t[r],
              s = o.object,
              l = o.geometry,
              c = void 0 === i ? o.material : i,
              h = o.group;
            if (n.isArrayCamera) {
              ot = n;
              for (var u = n.cameras, d = 0, f = u.length; d < f; d++) {
                var p = u[d];
                if (s.layers.test(p.layers)) {
                  if ("viewport" in p) L.viewport(st.copy(p.viewport));
                  else {
                    var m = p.bounds,
                      g = m.x * ut,
                      _ = m.y * dt,
                      y = m.z * ut,
                      x = m.w * dt;
                    L.viewport(st.set(g, _, y, x).multiplyScalar(ft));
                  }
                  v.setupLights(p), Ut(s, e, p, l, c, h);
                }
              }
            } else (ot = null), Ut(s, e, n, l, c, h);
          }
        }
        function Ut(t, e, n, i, r, a) {
          if (
            (t.onBeforeRender(Q, e, n, i, r, a),
            (v = j.get(e, ot || n)),
            t.modelViewMatrix.multiplyMatrices(
              n.matrixWorldInverse,
              t.matrixWorld
            ),
            t.normalMatrix.getNormalMatrix(t.modelViewMatrix),
            t.isImmediateRenderObject)
          ) {
            L.setMaterial(r);
            var o = kt(n, e.fog, r, t);
            (rt.geometry = null),
              (rt.program = null),
              (rt.wireframe = !1),
              (function(t, e) {
                t.render(function(t) {
                  Q.renderBufferImmediate(t, e);
                });
              })(t, o);
          } else Q.renderBufferDirect(n, e.fog, i, r, t, a);
          t.onAfterRender(Q, e, n, i, r, a), (v = j.get(e, ot || n));
        }
        function zt(t, e, n) {
          var i = A.get(t),
            r = v.state.lights,
            a = v.state.shadowsArray,
            o = i.lightsHash,
            s = r.state.hash,
            l = k.getParameters(
              t,
              r.state,
              a,
              e,
              _t.numPlanes,
              _t.numIntersection,
              n
            ),
            c = k.getProgramCode(t, l),
            h = i.program,
            u = !0;
          if (void 0 === h) t.addEventListener("dispose", Rt);
          else if (h.code !== c) Ct(t);
          else if (
            o.stateID !== s.stateID ||
            o.directionalLength !== s.directionalLength ||
            o.pointLength !== s.pointLength ||
            o.spotLength !== s.spotLength ||
            o.rectAreaLength !== s.rectAreaLength ||
            o.hemiLength !== s.hemiLength ||
            o.shadowsLength !== s.shadowsLength
          )
            (o.stateID = s.stateID),
              (o.directionalLength = s.directionalLength),
              (o.pointLength = s.pointLength),
              (o.spotLength = s.spotLength),
              (o.rectAreaLength = s.rectAreaLength),
              (o.hemiLength = s.hemiLength),
              (o.shadowsLength = s.shadowsLength),
              (u = !1);
          else {
            if (void 0 !== l.shaderID) return;
            u = !1;
          }
          if (u) {
            if (l.shaderID) {
              var d = w[l.shaderID];
              i.shader = {
                name: t.type,
                uniforms: Object(_.a)(d.uniforms),
                vertexShader: d.vertexShader,
                fragmentShader: d.fragmentShader
              };
            } else
              i.shader = {
                name: t.type,
                uniforms: t.uniforms,
                vertexShader: t.vertexShader,
                fragmentShader: t.fragmentShader
              };
            t.onBeforeCompile(i.shader, Q),
              (c = k.getProgramCode(t, l)),
              (h = k.acquireProgram(t, i.shader, l, c)),
              (i.program = h),
              (t.program = h);
          }
          var f = h.getAttributes();
          if (t.morphTargets) {
            t.numSupportedMorphTargets = 0;
            for (var p = 0; p < Q.maxMorphTargets; p++)
              f["morphTarget" + p] >= 0 && t.numSupportedMorphTargets++;
          }
          if (t.morphNormals) {
            t.numSupportedMorphNormals = 0;
            for (p = 0; p < Q.maxMorphNormals; p++)
              f["morphNormal" + p] >= 0 && t.numSupportedMorphNormals++;
          }
          var m = i.shader.uniforms;
          ((t.isShaderMaterial || t.isRawShaderMaterial) &&
            !0 !== t.clipping) ||
            ((i.numClippingPlanes = _t.numPlanes),
            (i.numIntersection = _t.numIntersection),
            (m.clippingPlanes = _t.uniform)),
            (i.fog = e),
            void 0 === o && (i.lightsHash = o = {}),
            (o.stateID = s.stateID),
            (o.directionalLength = s.directionalLength),
            (o.pointLength = s.pointLength),
            (o.spotLength = s.spotLength),
            (o.rectAreaLength = s.rectAreaLength),
            (o.hemiLength = s.hemiLength),
            (o.shadowsLength = s.shadowsLength),
            t.lights &&
              ((m.ambientLightColor.value = r.state.ambient),
              (m.directionalLights.value = r.state.directional),
              (m.spotLights.value = r.state.spot),
              (m.rectAreaLights.value = r.state.rectArea),
              (m.pointLights.value = r.state.point),
              (m.hemisphereLights.value = r.state.hemi),
              (m.directionalShadowMap.value = r.state.directionalShadowMap),
              (m.directionalShadowMatrix.value =
                r.state.directionalShadowMatrix),
              (m.spotShadowMap.value = r.state.spotShadowMap),
              (m.spotShadowMatrix.value = r.state.spotShadowMatrix),
              (m.pointShadowMap.value = r.state.pointShadowMap),
              (m.pointShadowMatrix.value = r.state.pointShadowMatrix));
          var g = i.program.getUniforms(),
            y = Ft.seqWithValue(g.seq, m);
          i.uniformsList = y;
        }
        function kt(t, e, n, a) {
          ht = 0;
          var s = A.get(n),
            l = v.state.lights,
            c = s.lightsHash,
            h = l.state.hash;
          if (yt && (xt || t !== at)) {
            var u = t === at && n.id === it;
            _t.setState(
              n.clippingPlanes,
              n.clipIntersection,
              n.clipShadows,
              t,
              s,
              u
            );
          }
          !1 === n.needsUpdate &&
            (void 0 === s.program
              ? (n.needsUpdate = !0)
              : n.fog && s.fog !== e
                ? (n.needsUpdate = !0)
                : ((!n.lights ||
                    (c.stateID === h.stateID &&
                      c.directionalLength === h.directionalLength &&
                      c.pointLength === h.pointLength &&
                      c.spotLength === h.spotLength &&
                      c.rectAreaLength === h.rectAreaLength &&
                      c.hemiLength === h.hemiLength &&
                      c.shadowsLength === h.shadowsLength)) &&
                    (void 0 === s.numClippingPlanes ||
                      (s.numClippingPlanes === _t.numPlanes &&
                        s.numIntersection === _t.numIntersection))) ||
                  (n.needsUpdate = !0)),
            n.needsUpdate && (zt(n, e, a), (n.needsUpdate = !1));
          var d,
            f,
            p = !1,
            m = !1,
            g = !1,
            _ = s.program,
            x = _.getUniforms(),
            w = s.shader.uniforms;
          if (
            (L.useProgram(_.program) && ((p = !0), (m = !0), (g = !0)),
            n.id !== it && ((it = n.id), (m = !0)),
            p || at !== t)
          ) {
            if (
              (x.setValue(y, "projectionMatrix", t.projectionMatrix),
              S.logarithmicDepthBuffer &&
                x.setValue(
                  y,
                  "logDepthBufFC",
                  2 / (Math.log(t.far + 1) / Math.LN2)
                ),
              at !== t && ((at = t), (m = !0), (g = !0)),
              n.isShaderMaterial ||
                n.isMeshPhongMaterial ||
                n.isMeshStandardMaterial ||
                n.envMap)
            ) {
              var T = x.map.cameraPosition;
              void 0 !== T &&
                T.setValue(y, wt.setFromMatrixPosition(t.matrixWorld));
            }
            (n.isMeshPhongMaterial ||
              n.isMeshLambertMaterial ||
              n.isMeshBasicMaterial ||
              n.isMeshStandardMaterial ||
              n.isShaderMaterial ||
              n.skinning) &&
              x.setValue(y, "viewMatrix", t.matrixWorldInverse);
          }
          if (n.skinning) {
            x.setOptional(y, a, "bindMatrix"),
              x.setOptional(y, a, "bindMatrixInverse");
            var M = a.skeleton;
            if (M) {
              var E = M.bones;
              if (S.floatVertexTextures) {
                if (void 0 === M.boneTexture) {
                  var P = Math.sqrt(4 * E.length);
                  (P = r.a.ceilPowerOfTwo(P)), (P = Math.max(P, 4));
                  var R = new Float32Array(P * P * 4);
                  R.set(M.boneMatrices);
                  var C = new o(R, P, P, i.rb, i.C);
                  (C.needsUpdate = !0),
                    (M.boneMatrices = R),
                    (M.boneTexture = C),
                    (M.boneTextureSize = P);
                }
                x.setValue(y, "boneTexture", M.boneTexture),
                  x.setValue(y, "boneTextureSize", M.boneTextureSize);
              } else x.setOptional(y, M, "boneMatrices");
            }
          }
          return (
            m &&
              (x.setValue(y, "toneMappingExposure", Q.toneMappingExposure),
              x.setValue(y, "toneMappingWhitePoint", Q.toneMappingWhitePoint),
              n.lights &&
                ((f = g),
                ((d = w).ambientLightColor.needsUpdate = f),
                (d.directionalLights.needsUpdate = f),
                (d.pointLights.needsUpdate = f),
                (d.spotLights.needsUpdate = f),
                (d.rectAreaLights.needsUpdate = f),
                (d.hemisphereLights.needsUpdate = f)),
              e &&
                n.fog &&
                (function(t, e) {
                  (t.fogColor.value = e.color),
                    e.isFog
                      ? ((t.fogNear.value = e.near), (t.fogFar.value = e.far))
                      : e.isFogExp2 && (t.fogDensity.value = e.density);
                })(w, e),
              n.isMeshBasicMaterial
                ? Bt(w, n)
                : n.isMeshLambertMaterial
                  ? (Bt(w, n),
                    (function(t, e) {
                      e.emissiveMap && (t.emissiveMap.value = e.emissiveMap);
                    })(w, n))
                  : n.isMeshPhongMaterial
                    ? (Bt(w, n),
                      n.isMeshToonMaterial
                        ? (function(t, e) {
                            Gt(t, e),
                              e.gradientMap &&
                                (t.gradientMap.value = e.gradientMap);
                          })(w, n)
                        : Gt(w, n))
                    : n.isMeshStandardMaterial
                      ? (Bt(w, n),
                        n.isMeshPhysicalMaterial
                          ? (function(t, e) {
                              Vt(t, e),
                                (t.reflectivity.value = e.reflectivity),
                                (t.clearCoat.value = e.clearCoat),
                                (t.clearCoatRoughness.value =
                                  e.clearCoatRoughness);
                            })(w, n)
                          : Vt(w, n))
                      : n.isMeshMatcapMaterial
                        ? (Bt(w, n),
                          (function(t, e) {
                            e.matcap && (t.matcap.value = e.matcap);
                            e.bumpMap &&
                              ((t.bumpMap.value = e.bumpMap),
                              (t.bumpScale.value = e.bumpScale),
                              e.side === i.g && (t.bumpScale.value *= -1));
                            e.normalMap &&
                              ((t.normalMap.value = e.normalMap),
                              t.normalScale.value.copy(e.normalScale),
                              e.side === i.g && t.normalScale.value.negate());
                            e.displacementMap &&
                              ((t.displacementMap.value = e.displacementMap),
                              (t.displacementScale.value = e.displacementScale),
                              (t.displacementBias.value = e.displacementBias));
                          })(w, n))
                        : n.isMeshDepthMaterial
                          ? (Bt(w, n),
                            (function(t, e) {
                              e.displacementMap &&
                                ((t.displacementMap.value = e.displacementMap),
                                (t.displacementScale.value =
                                  e.displacementScale),
                                (t.displacementBias.value =
                                  e.displacementBias));
                            })(w, n))
                          : n.isMeshDistanceMaterial
                            ? (Bt(w, n),
                              (function(t, e) {
                                e.displacementMap &&
                                  ((t.displacementMap.value =
                                    e.displacementMap),
                                  (t.displacementScale.value =
                                    e.displacementScale),
                                  (t.displacementBias.value =
                                    e.displacementBias));
                                t.referencePosition.value.copy(
                                  e.referencePosition
                                ),
                                  (t.nearDistance.value = e.nearDistance),
                                  (t.farDistance.value = e.farDistance);
                              })(w, n))
                            : n.isMeshNormalMaterial
                              ? (Bt(w, n),
                                (function(t, e) {
                                  e.bumpMap &&
                                    ((t.bumpMap.value = e.bumpMap),
                                    (t.bumpScale.value = e.bumpScale),
                                    e.side === i.g &&
                                      (t.bumpScale.value *= -1));
                                  e.normalMap &&
                                    ((t.normalMap.value = e.normalMap),
                                    t.normalScale.value.copy(e.normalScale),
                                    e.side === i.g &&
                                      t.normalScale.value.negate());
                                  e.displacementMap &&
                                    ((t.displacementMap.value =
                                      e.displacementMap),
                                    (t.displacementScale.value =
                                      e.displacementScale),
                                    (t.displacementBias.value =
                                      e.displacementBias));
                                })(w, n))
                              : n.isLineBasicMaterial
                                ? ((function(t, e) {
                                    (t.diffuse.value = e.color),
                                      (t.opacity.value = e.opacity);
                                  })(w, n),
                                  n.isLineDashedMaterial &&
                                    (function(t, e) {
                                      (t.dashSize.value = e.dashSize),
                                        (t.totalSize.value =
                                          e.dashSize + e.gapSize),
                                        (t.scale.value = e.scale);
                                    })(w, n))
                                : n.isPointsMaterial
                                  ? (function(t, e) {
                                      (t.diffuse.value = e.color),
                                        (t.opacity.value = e.opacity),
                                        (t.size.value = e.size * ft),
                                        (t.scale.value = 0.5 * dt),
                                        (t.map.value = e.map),
                                        null !== e.map &&
                                          (!0 === e.map.matrixAutoUpdate &&
                                            e.map.updateMatrix(),
                                          t.uvTransform.value.copy(
                                            e.map.matrix
                                          ));
                                    })(w, n)
                                  : n.isSpriteMaterial
                                    ? (function(t, e) {
                                        (t.diffuse.value = e.color),
                                          (t.opacity.value = e.opacity),
                                          (t.rotation.value = e.rotation),
                                          (t.map.value = e.map),
                                          null !== e.map &&
                                            (!0 === e.map.matrixAutoUpdate &&
                                              e.map.updateMatrix(),
                                            t.uvTransform.value.copy(
                                              e.map.matrix
                                            ));
                                      })(w, n)
                                    : n.isShadowMaterial &&
                                      ((w.color.value = n.color),
                                      (w.opacity.value = n.opacity)),
              void 0 !== w.ltc_1 && (w.ltc_1.value = b.LTC_1),
              void 0 !== w.ltc_2 && (w.ltc_2.value = b.LTC_2),
              Ft.upload(y, s.uniformsList, w, Q)),
            n.isShaderMaterial &&
              !0 === n.uniformsNeedUpdate &&
              (Ft.upload(y, s.uniformsList, w, Q), (n.uniformsNeedUpdate = !1)),
            n.isSpriteMaterial && x.setValue(y, "center", a.center),
            x.setValue(y, "modelViewMatrix", a.modelViewMatrix),
            x.setValue(y, "normalMatrix", a.normalMatrix),
            x.setValue(y, "modelMatrix", a.matrixWorld),
            _
          );
        }
        function Bt(t, e) {
          var n;
          (t.opacity.value = e.opacity),
            e.color && (t.diffuse.value = e.color),
            e.emissive &&
              t.emissive.value
                .copy(e.emissive)
                .multiplyScalar(e.emissiveIntensity),
            e.map && (t.map.value = e.map),
            e.alphaMap && (t.alphaMap.value = e.alphaMap),
            e.specularMap && (t.specularMap.value = e.specularMap),
            e.envMap &&
              ((t.envMap.value = e.envMap),
              (t.flipEnvMap.value = e.envMap.isCubeTexture ? -1 : 1),
              (t.reflectivity.value = e.reflectivity),
              (t.refractionRatio.value = e.refractionRatio),
              (t.maxMipLevel.value = A.get(e.envMap).__maxMipLevel)),
            e.lightMap &&
              ((t.lightMap.value = e.lightMap),
              (t.lightMapIntensity.value = e.lightMapIntensity)),
            e.aoMap &&
              ((t.aoMap.value = e.aoMap),
              (t.aoMapIntensity.value = e.aoMapIntensity)),
            e.map
              ? (n = e.map)
              : e.specularMap
                ? (n = e.specularMap)
                : e.displacementMap
                  ? (n = e.displacementMap)
                  : e.normalMap
                    ? (n = e.normalMap)
                    : e.bumpMap
                      ? (n = e.bumpMap)
                      : e.roughnessMap
                        ? (n = e.roughnessMap)
                        : e.metalnessMap
                          ? (n = e.metalnessMap)
                          : e.alphaMap
                            ? (n = e.alphaMap)
                            : e.emissiveMap && (n = e.emissiveMap),
            void 0 !== n &&
              (n.isWebGLRenderTarget && (n = n.texture),
              !0 === n.matrixAutoUpdate && n.updateMatrix(),
              t.uvTransform.value.copy(n.matrix));
        }
        function Gt(t, e) {
          (t.specular.value = e.specular),
            (t.shininess.value = Math.max(e.shininess, 1e-4)),
            e.emissiveMap && (t.emissiveMap.value = e.emissiveMap),
            e.bumpMap &&
              ((t.bumpMap.value = e.bumpMap),
              (t.bumpScale.value = e.bumpScale),
              e.side === i.g && (t.bumpScale.value *= -1)),
            e.normalMap &&
              ((t.normalMap.value = e.normalMap),
              t.normalScale.value.copy(e.normalScale),
              e.side === i.g && t.normalScale.value.negate()),
            e.displacementMap &&
              ((t.displacementMap.value = e.displacementMap),
              (t.displacementScale.value = e.displacementScale),
              (t.displacementBias.value = e.displacementBias));
        }
        function Vt(t, e) {
          (t.roughness.value = e.roughness),
            (t.metalness.value = e.metalness),
            e.roughnessMap && (t.roughnessMap.value = e.roughnessMap),
            e.metalnessMap && (t.metalnessMap.value = e.metalnessMap),
            e.emissiveMap && (t.emissiveMap.value = e.emissiveMap),
            e.bumpMap &&
              ((t.bumpMap.value = e.bumpMap),
              (t.bumpScale.value = e.bumpScale),
              e.side === i.g && (t.bumpScale.value *= -1)),
            e.normalMap &&
              ((t.normalMap.value = e.normalMap),
              t.normalScale.value.copy(e.normalScale),
              e.side === i.g && t.normalScale.value.negate()),
            e.displacementMap &&
              ((t.displacementMap.value = e.displacementMap),
              (t.displacementScale.value = e.displacementScale),
              (t.displacementBias.value = e.displacementBias)),
            e.envMap && (t.envMapIntensity.value = e.envMapIntensity);
        }
        It.setAnimationLoop(function(t) {
          St.isPresenting() || (Dt && Dt(t));
        }),
          "undefined" != typeof window && It.setContext(window),
          (this.setAnimationLoop = function(t) {
            (Dt = t), St.setAnimationLoop(t), It.start();
          }),
          (this.render = function(t, e, n, i) {
            if (e && e.isCamera) {
              if (!$) {
                (rt.geometry = null),
                  (rt.program = null),
                  (rt.wireframe = !1),
                  (it = -1),
                  (at = null),
                  !0 === t.autoUpdate && t.updateMatrixWorld(),
                  null === e.parent && e.updateMatrixWorld(),
                  St.enabled && (e = St.getCamera(e)),
                  (v = j.get(t, e)).init(),
                  t.onBeforeRender(Q, t, e, n),
                  bt.multiplyMatrices(e.projectionMatrix, e.matrixWorldInverse),
                  vt.setFromMatrix(bt),
                  (xt = this.localClippingEnabled),
                  (yt = _t.init(this.clippingPlanes, xt, e)),
                  (p = H.get(t, e)).init(),
                  (function t(e, n, i) {
                    if (!1 === e.visible) return;
                    var r = e.layers.test(n.layers);
                    if (r)
                      if (e.isLight)
                        v.pushLight(e), e.castShadow && v.pushShadow(e);
                      else if (e.isSprite) {
                        if (!e.frustumCulled || vt.intersectsSprite(e)) {
                          i &&
                            wt
                              .setFromMatrixPosition(e.matrixWorld)
                              .applyMatrix4(bt);
                          var a = O.update(e),
                            o = e.material;
                          p.push(e, a, o, wt.z, null);
                        }
                      } else if (e.isImmediateRenderObject)
                        i &&
                          wt
                            .setFromMatrixPosition(e.matrixWorld)
                            .applyMatrix4(bt),
                          p.push(e, null, e.material, wt.z, null);
                      else if (
                        (e.isMesh || e.isLine || e.isPoints) &&
                        (e.isSkinnedMesh && e.skeleton.update(),
                        !e.frustumCulled || vt.intersectsObject(e))
                      ) {
                        i &&
                          wt
                            .setFromMatrixPosition(e.matrixWorld)
                            .applyMatrix4(bt);
                        var a = O.update(e),
                          o = e.material;
                        if (Array.isArray(o))
                          for (
                            var s = a.groups, l = 0, c = s.length;
                            l < c;
                            l++
                          ) {
                            var h = s[l],
                              u = o[h.materialIndex];
                            u && u.visible && p.push(e, a, u, wt.z, h);
                          }
                        else o.visible && p.push(e, a, o, wt.z, null);
                      }
                    var d = e.children;
                    for (var l = 0, c = d.length; l < c; l++) t(d[l], n, i);
                  })(t, e, Q.sortObjects),
                  !0 === Q.sortObjects && p.sort(),
                  yt && _t.beginShadows();
                var r = v.state.shadowsArray;
                Lt.render(r, t, e),
                  v.setupLights(e),
                  yt && _t.endShadows(),
                  this.info.autoReset && this.info.reset(),
                  void 0 === n && (n = null),
                  this.setRenderTarget(n),
                  Y.render(p, t, e, i);
                var a = p.opaque,
                  o = p.transparent;
                if (t.overrideMaterial) {
                  var s = t.overrideMaterial;
                  a.length && Nt(a, t, e, s), o.length && Nt(o, t, e, s);
                } else a.length && Nt(a, t, e), o.length && Nt(o, t, e);
                n && R.updateRenderTargetMipmap(n),
                  L.buffers.depth.setTest(!0),
                  L.buffers.depth.setMask(!0),
                  L.buffers.color.setMask(!0),
                  L.setPolygonOffset(!1),
                  t.onAfterRender(Q, t, e),
                  St.enabled && St.submitFrame(),
                  (p = null),
                  (v = null);
              }
            } else
              console.error(
                "THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera."
              );
          }),
          (this.allocTextureUnit = function() {
            var t = ht;
            return (
              t >= S.maxTextures &&
                console.warn(
                  "THREE.WebGLRenderer: Trying to use " +
                    t +
                    " texture units while this GPU supports only " +
                    S.maxTextures
                ),
              (ht += 1),
              t
            );
          }),
          (this.setTexture2D = ((Ot = !1),
          function(t, e) {
            t &&
              t.isWebGLRenderTarget &&
              (Ot ||
                (console.warn(
                  "THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."
                ),
                (Ot = !0)),
              (t = t.texture)),
              R.setTexture2D(t, e);
          })),
          (this.setTexture3D = function(t, e) {
            R.setTexture3D(t, e);
          }),
          (this.setTexture = (function() {
            var t = !1;
            return function(e, n) {
              t ||
                (console.warn(
                  "THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."
                ),
                (t = !0)),
                R.setTexture2D(e, n);
            };
          })()),
          (this.setTextureCube = (function() {
            var t = !1;
            return function(e, n) {
              e &&
                e.isWebGLRenderTargetCube &&
                (t ||
                  (console.warn(
                    "THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."
                  ),
                  (t = !0)),
                (e = e.texture)),
                (e && e.isCubeTexture) ||
                (Array.isArray(e.image) && 6 === e.image.length)
                  ? R.setTextureCube(e, n)
                  : R.setTextureCubeDynamic(e, n);
            };
          })()),
          (this.setFramebuffer = function(t) {
            tt = t;
          }),
          (this.getRenderTarget = function() {
            return et;
          }),
          (this.setRenderTarget = function(t) {
            (et = t),
              t &&
                void 0 === A.get(t).__webglFramebuffer &&
                R.setupRenderTarget(t);
            var e = tt,
              n = !1;
            if (t) {
              var i = A.get(t).__webglFramebuffer;
              t.isWebGLRenderTargetCube
                ? ((e = i[t.activeCubeFace]), (n = !0))
                : (e = i),
                st.copy(t.viewport),
                lt.copy(t.scissor),
                (ct = t.scissorTest);
            } else
              st.copy(pt).multiplyScalar(ft),
                lt.copy(mt).multiplyScalar(ft),
                (ct = gt);
            if (
              (nt !== e && (y.bindFramebuffer(y.FRAMEBUFFER, e), (nt = e)),
              L.viewport(st),
              L.scissor(lt),
              L.setScissorTest(ct),
              n)
            ) {
              var r = A.get(t.texture);
              y.framebufferTexture2D(
                y.FRAMEBUFFER,
                y.COLOR_ATTACHMENT0,
                y.TEXTURE_CUBE_MAP_POSITIVE_X + t.activeCubeFace,
                r.__webglTexture,
                t.activeMipMapLevel
              );
            }
          }),
          (this.readRenderTargetPixels = function(t, e, n, r, a, o) {
            if (t && t.isWebGLRenderTarget) {
              var s = A.get(t).__webglFramebuffer;
              if (s) {
                var l = !1;
                s !== nt && (y.bindFramebuffer(y.FRAMEBUFFER, s), (l = !0));
                try {
                  var c = t.texture,
                    h = c.format,
                    u = c.type;
                  if (
                    h !== i.rb &&
                    K.convert(h) !==
                      y.getParameter(y.IMPLEMENTATION_COLOR_READ_FORMAT)
                  )
                    return void console.error(
                      "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."
                    );
                  if (
                    !(
                      u === i.kc ||
                      K.convert(u) ===
                        y.getParameter(y.IMPLEMENTATION_COLOR_READ_TYPE) ||
                      (u === i.C &&
                        (S.isWebGL2 ||
                          x.get("OES_texture_float") ||
                          x.get("WEBGL_color_buffer_float"))) ||
                      (u === i.H &&
                        (S.isWebGL2
                          ? x.get("EXT_color_buffer_float")
                          : x.get("EXT_color_buffer_half_float")))
                    )
                  )
                    return void console.error(
                      "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type."
                    );
                  y.checkFramebufferStatus(y.FRAMEBUFFER) ===
                  y.FRAMEBUFFER_COMPLETE
                    ? e >= 0 &&
                      e <= t.width - r &&
                      n >= 0 &&
                      n <= t.height - a &&
                      y.readPixels(e, n, r, a, K.convert(h), K.convert(u), o)
                    : console.error(
                        "THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete."
                      );
                } finally {
                  l && y.bindFramebuffer(y.FRAMEBUFFER, nt);
                }
              }
            } else
              console.error(
                "THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget."
              );
          }),
          (this.copyFramebufferToTexture = function(t, e, n) {
            var i = e.image.width,
              r = e.image.height,
              a = K.convert(e.format);
            this.setTexture2D(e, 0),
              y.copyTexImage2D(y.TEXTURE_2D, n || 0, a, t.x, t.y, i, r, 0);
          }),
          (this.copyTextureToTexture = function(t, e, n, i) {
            var r = e.image.width,
              a = e.image.height,
              o = K.convert(n.format),
              s = K.convert(n.type);
            this.setTexture2D(n, 0),
              e.isDataTexture
                ? y.texSubImage2D(
                    y.TEXTURE_2D,
                    i || 0,
                    t.x,
                    t.y,
                    r,
                    a,
                    o,
                    s,
                    e.image.data
                  )
                : y.texSubImage2D(
                    y.TEXTURE_2D,
                    i || 0,
                    t.x,
                    t.y,
                    o,
                    s,
                    e.image
                  );
          });
      }
      n.d(e, "a", function() {
        return Ee;
      });
    },
    function(t, e, n) {
      "use strict";
      var i = n(0),
        r = {
          enabled: !1,
          files: {},
          add: function(t, e) {
            !1 !== this.enabled && (this.files[t] = e);
          },
          get: function(t) {
            if (!1 !== this.enabled) return this.files[t];
          },
          remove: function(t) {
            delete this.files[t];
          },
          clear: function() {
            this.files = {};
          }
        };
      var a = new function(t, e, n) {
        var i = this,
          r = !1,
          a = 0,
          o = 0,
          s = void 0;
        (this.onStart = void 0),
          (this.onLoad = t),
          (this.onProgress = e),
          (this.onError = n),
          (this.itemStart = function(t) {
            o++,
              !1 === r && void 0 !== i.onStart && i.onStart(t, a, o),
              (r = !0);
          }),
          (this.itemEnd = function(t) {
            a++,
              void 0 !== i.onProgress && i.onProgress(t, a, o),
              a === o && ((r = !1), void 0 !== i.onLoad && i.onLoad());
          }),
          (this.itemError = function(t) {
            void 0 !== i.onError && i.onError(t);
          }),
          (this.resolveURL = function(t) {
            return s ? s(t) : t;
          }),
          (this.setURLModifier = function(t) {
            return (s = t), this;
          });
      }();
      function o(t) {
        this.manager = void 0 !== t ? t : a;
      }
      Object.assign(o.prototype, {
        crossOrigin: "anonymous",
        load: function(t, e, n, i) {
          void 0 === t && (t = ""),
            void 0 !== this.path && (t = this.path + t),
            (t = this.manager.resolveURL(t));
          var a = this,
            o = r.get(t);
          if (void 0 !== o)
            return (
              a.manager.itemStart(t),
              setTimeout(function() {
                e && e(o), a.manager.itemEnd(t);
              }, 0),
              o
            );
          var s = document.createElementNS(
            "http://www.w3.org/1999/xhtml",
            "img"
          );
          function l() {
            s.removeEventListener("load", l, !1),
              s.removeEventListener("error", c, !1),
              r.add(t, this),
              e && e(this),
              a.manager.itemEnd(t);
          }
          function c(e) {
            s.removeEventListener("load", l, !1),
              s.removeEventListener("error", c, !1),
              i && i(e),
              a.manager.itemError(t),
              a.manager.itemEnd(t);
          }
          return (
            s.addEventListener("load", l, !1),
            s.addEventListener("error", c, !1),
            "data:" !== t.substr(0, 5) &&
              void 0 !== this.crossOrigin &&
              (s.crossOrigin = this.crossOrigin),
            a.manager.itemStart(t),
            (s.src = t),
            s
          );
        },
        setCrossOrigin: function(t) {
          return (this.crossOrigin = t), this;
        },
        setPath: function(t) {
          return (this.path = t), this;
        }
      });
      var s = n(14);
      function l(t) {
        this.manager = void 0 !== t ? t : a;
      }
      n.d(e, "a", function() {
        return l;
      }),
        Object.assign(l.prototype, {
          crossOrigin: "anonymous",
          load: function(t, e, n, r) {
            var a = new s.a(),
              l = new o(this.manager);
            return (
              l.setCrossOrigin(this.crossOrigin),
              l.setPath(this.path),
              l.load(
                t,
                function(n) {
                  a.image = n;
                  var r =
                    t.search(/\.jpe?g($|\?)/i) > 0 ||
                    0 === t.search(/^data\:image\/jpeg/);
                  (a.format = r ? i.Nb : i.rb),
                    (a.needsUpdate = !0),
                    void 0 !== e && e(a);
                },
                n,
                r
              ),
              a
            );
          },
          setCrossOrigin: function(t) {
            return (this.crossOrigin = t), this;
          },
          setPath: function(t) {
            return (this.path = t), this;
          }
        });
    }
  ]
]);
